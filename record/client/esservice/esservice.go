// Code generated by goctl. DO NOT EDIT.
// Source: record.proto

package esservice

import (
	"context"

	"github.com/summer-gonner/traffica/record/recordclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EsReq  = recordclient.EsReq
	EsResp = recordclient.EsResp

	EsService interface {
		EsConnect(ctx context.Context, in *EsReq, opts ...grpc.CallOption) (*EsResp, error)
	}

	defaultEsService struct {
		cli zrpc.Client
	}
)

func NewEsService(cli zrpc.Client) EsService {
	return &defaultEsService{
		cli: cli,
	}
}

func (m *defaultEsService) EsConnect(ctx context.Context, in *EsReq, opts ...grpc.CallOption) (*EsResp, error) {
	client := recordclient.NewEsServiceClient(m.cli.Conn())
	return client.EsConnect(ctx, in, opts...)
}

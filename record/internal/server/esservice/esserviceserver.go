// Code generated by goctl. DO NOT EDIT.
// Source: record.proto

package server

import (
	"context"

	"github.com/summer-gonner/traffica/record/internal/logic/esservice"
	"github.com/summer-gonner/traffica/record/internal/svc"
	"github.com/summer-gonner/traffica/record/recordclient"
)

type EsServiceServer struct {
	svcCtx *svc.ServiceContext
	recordclient.UnimplementedEsServiceServer
}

func NewEsServiceServer(svcCtx *svc.ServiceContext) *EsServiceServer {
	return &EsServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *EsServiceServer) EsConnect(ctx context.Context, in *recordclient.EsConnectReq) (*recordclient.EsConnectResp, error) {
	l := esservicelogic.NewEsConnectLogic(ctx, s.svcCtx)
	return l.EsConnect(in)
}

func (s *EsServiceServer) EsAdd(ctx context.Context, in *recordclient.EsAddReq) (*recordclient.EsAddResp, error) {
	l := esservicelogic.NewEsAddLogic(ctx, s.svcCtx)
	return l.EsAdd(in)
}

func (s *EsServiceServer) EsQueryList(ctx context.Context, in *recordclient.EsQueryListReq) (*recordclient.EsQueryListResp, error) {
	l := esservicelogic.NewEsQueryListLogic(ctx, s.svcCtx)
	return l.EsQueryList(in)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: rpc/oms/oms.proto

package omsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加购物车表
type AddCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSubTitle   string `protobuf:"bytes,1,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`        //商品副标题（卖点）
	DeleteStatus      int32  `protobuf:"varint,2,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                  //是否删除
	Quantity          int32  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`                                              //购买数量
	MemberId          int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	MemberNickname    string `protobuf:"bytes,5,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Price             int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车的价格
	ProductAttr       string `protobuf:"bytes,7,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,8,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64  `protobuf:"varint,9,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类
	ProductId         int64  `protobuf:"varint,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                          //商品id
	ProductName       string `protobuf:"bytes,11,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                     //商品名称
	ProductPic        string `protobuf:"bytes,12,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                        //商品主图
	ProductSkuCode    string `protobuf:"bytes,13,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`          //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,14,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`               //商品库存id
	ProductSn         string `protobuf:"bytes,15,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                           //货号
}

func (x *AddCartItemReq) Reset() {
	*x = AddCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartItemReq) ProtoMessage() {}

func (x *AddCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCartItemReq.ProtoReflect.Descriptor instead.
func (*AddCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{0}
}

func (x *AddCartItemReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddCartItemReq) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *AddCartItemReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AddCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddCartItemReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *AddCartItemReq) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddCartItemReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *AddCartItemReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *AddCartItemReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *AddCartItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddCartItemReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddCartItemReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddCartItemReq) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *AddCartItemReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *AddCartItemReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type AddCartItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddCartItemResp) Reset() {
	*x = AddCartItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCartItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartItemResp) ProtoMessage() {}

func (x *AddCartItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCartItemResp.ProtoReflect.Descriptor instead.
func (*AddCartItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{1}
}

func (x *AddCartItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除购物车表
type DeleteCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *DeleteCartItemReq) Reset() {
	*x = DeleteCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartItemReq) ProtoMessage() {}

func (x *DeleteCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartItemReq.ProtoReflect.Descriptor instead.
func (*DeleteCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCartItemReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteCartItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteCartItemResp) Reset() {
	*x = DeleteCartItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCartItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartItemResp) ProtoMessage() {}

func (x *DeleteCartItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartItemResp.ProtoReflect.Descriptor instead.
func (*DeleteCartItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCartItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新购物车表
type UpdateCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity          int32  `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`                                              //购买数量
	DeleteStatus      int32  `protobuf:"varint,2,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                  //是否删除
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	MemberNickname    string `protobuf:"bytes,5,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Price             int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车的价格
	ProductAttr       string `protobuf:"bytes,7,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,8,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64  `protobuf:"varint,9,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类
	ProductId         int64  `protobuf:"varint,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                          //商品id
	ProductName       string `protobuf:"bytes,11,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                     //商品名称
	ProductPic        string `protobuf:"bytes,12,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                        //商品主图
	ProductSkuCode    string `protobuf:"bytes,13,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`          //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,14,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`               //商品库存id
	ProductSn         string `protobuf:"bytes,15,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                           //货号
	ProductSubTitle   string `protobuf:"bytes,16,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`       //商品副标题（卖点）
}

func (x *UpdateCartItemReq) Reset() {
	*x = UpdateCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemReq) ProtoMessage() {}

func (x *UpdateCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemReq.ProtoReflect.Descriptor instead.
func (*UpdateCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCartItemReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateCartItemReq) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *UpdateCartItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateCartItemReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *UpdateCartItemReq) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

type UpdateCartItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCartItemResp) Reset() {
	*x = UpdateCartItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemResp) ProtoMessage() {}

func (x *UpdateCartItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemResp.ProtoReflect.Descriptor instead.
func (*UpdateCartItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCartItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 修改购物车中某个商品的数量
type UpdateCartItemQuantityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int32 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`                 //购买数量
	Id       int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                             //
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *UpdateCartItemQuantityReq) Reset() {
	*x = UpdateCartItemQuantityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemQuantityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemQuantityReq) ProtoMessage() {}

func (x *UpdateCartItemQuantityReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemQuantityReq.ProtoReflect.Descriptor instead.
func (*UpdateCartItemQuantityReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCartItemQuantityReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateCartItemQuantityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCartItemQuantityReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type UpdateCartItemQuantityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCartItemQuantityResp) Reset() {
	*x = UpdateCartItemQuantityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemQuantityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemQuantityResp) ProtoMessage() {}

func (x *UpdateCartItemQuantityResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemQuantityResp.ProtoReflect.Descriptor instead.
func (*UpdateCartItemQuantityResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCartItemQuantityResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询购物车表详情
type QueryCartItemDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryCartItemDetailReq) Reset() {
	*x = QueryCartItemDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemDetailReq) ProtoMessage() {}

func (x *QueryCartItemDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemDetailReq.ProtoReflect.Descriptor instead.
func (*QueryCartItemDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCartItemDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryCartItemDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateDate        string `protobuf:"bytes,1,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`                         //创建时间
	DeleteStatus      int32  `protobuf:"varint,2,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                  //是否删除
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	MemberNickname    string `protobuf:"bytes,5,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Price             int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车的价格
	ProductAttr       string `protobuf:"bytes,7,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,8,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64  `protobuf:"varint,9,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类
	ProductId         int64  `protobuf:"varint,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                          //商品id
	ProductName       string `protobuf:"bytes,11,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                     //商品名称
	ProductPic        string `protobuf:"bytes,12,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                        //商品主图
	ProductSkuCode    string `protobuf:"bytes,13,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`          //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,14,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`               //商品库存id
	ProductSn         string `protobuf:"bytes,15,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                           //货号
	ProductSubTitle   string `protobuf:"bytes,16,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`       //商品副标题（卖点）
	Quantity          int32  `protobuf:"varint,17,opt,name=quantity,proto3" json:"quantity,omitempty"`                                             //购买数量
	UpdateDate        string `protobuf:"bytes,18,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`                        //修改时间
}

func (x *QueryCartItemDetailResp) Reset() {
	*x = QueryCartItemDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemDetailResp) ProtoMessage() {}

func (x *QueryCartItemDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemDetailResp.ProtoReflect.Descriptor instead.
func (*QueryCartItemDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{9}
}

func (x *QueryCartItemDetailResp) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *QueryCartItemDetailResp) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *QueryCartItemDetailResp) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

// 分页查询购物车表列表
type QueryCartItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryCartItemListReq) Reset() {
	*x = QueryCartItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemListReq) ProtoMessage() {}

func (x *QueryCartItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemListReq.ProtoReflect.Descriptor instead.
func (*QueryCartItemListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{10}
}

func (x *QueryCartItemListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type CartItemListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateDate        string `protobuf:"bytes,1,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`                         //创建时间
	DeleteStatus      int32  `protobuf:"varint,2,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                  //是否删除
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	MemberNickname    string `protobuf:"bytes,5,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Price             int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车的价格
	ProductAttr       string `protobuf:"bytes,7,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,8,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64  `protobuf:"varint,9,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类
	ProductId         int64  `protobuf:"varint,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                          //商品id
	ProductName       string `protobuf:"bytes,11,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                     //商品名称
	ProductPic        string `protobuf:"bytes,12,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                        //商品主图
	ProductSkuCode    string `protobuf:"bytes,13,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`          //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,14,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`               //商品库存id
	ProductSn         string `protobuf:"bytes,15,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                           //货号
	ProductSubTitle   string `protobuf:"bytes,16,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`       //商品副标题（卖点）
	Quantity          int32  `protobuf:"varint,17,opt,name=quantity,proto3" json:"quantity,omitempty"`                                             //购买数量
	UpdateDate        string `protobuf:"bytes,18,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`                        //修改时间
}

func (x *CartItemListData) Reset() {
	*x = CartItemListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItemListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItemListData) ProtoMessage() {}

func (x *CartItemListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItemListData.ProtoReflect.Descriptor instead.
func (*CartItemListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{11}
}

func (x *CartItemListData) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *CartItemListData) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *CartItemListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CartItemListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CartItemListData) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *CartItemListData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CartItemListData) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *CartItemListData) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *CartItemListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CartItemListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CartItemListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CartItemListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *CartItemListData) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *CartItemListData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *CartItemListData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *CartItemListData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *CartItemListData) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartItemListData) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

type QueryCartItemListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*CartItemListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCartItemListResp) Reset() {
	*x = QueryCartItemListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemListResp) ProtoMessage() {}

func (x *QueryCartItemListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemListResp.ProtoReflect.Descriptor instead.
func (*QueryCartItemListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{12}
}

func (x *QueryCartItemListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCartItemListResp) GetList() []*CartItemListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加公司收发货地址表
type AddCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressName   string `protobuf:"bytes,1,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	City          string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	CreateBy      string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                  //创建者
	SendStatus    int32  `protobuf:"varint,4,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`           //默认发货地址：0->否；1->是
	DetailAddress string `protobuf:"bytes,5,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	Region        string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`                                      //区
	Name          string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //是否默认收货地址：0->否；1->是
}

func (x *AddCompanyAddressReq) Reset() {
	*x = AddCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyAddressReq) ProtoMessage() {}

func (x *AddCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*AddCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{13}
}

func (x *AddCompanyAddressReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *AddCompanyAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddCompanyAddressReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddCompanyAddressReq) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *AddCompanyAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *AddCompanyAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddCompanyAddressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCompanyAddressReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddCompanyAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddCompanyAddressReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

type AddCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddCompanyAddressResp) Reset() {
	*x = AddCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyAddressResp) ProtoMessage() {}

func (x *AddCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*AddCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{14}
}

func (x *AddCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除公司收发货地址表
type DeleteCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteCompanyAddressReq) Reset() {
	*x = DeleteCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyAddressReq) ProtoMessage() {}

func (x *DeleteCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*DeleteCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCompanyAddressReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteCompanyAddressResp) Reset() {
	*x = DeleteCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyAddressResp) ProtoMessage() {}

func (x *DeleteCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*DeleteCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新公司收发货地址表
type UpdateCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressName   string `protobuf:"bytes,1,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`       //地址名称
	City          string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                        //市
	Region        string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`                                    //区
	UpdateBy      string `protobuf:"bytes,4,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                //更新者
	DetailAddress string `protobuf:"bytes,5,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"` //详细地址
	Id            int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                           //
	Name          string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                        //收发货人姓名
	Phone         string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`                                      //收货人电话
	Province      string `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`                                //省/直辖市
}

func (x *UpdateCompanyAddressReq) Reset() {
	*x = UpdateCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressReq) ProtoMessage() {}

func (x *UpdateCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateCompanyAddressReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyAddressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

type UpdateCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCompanyAddressResp) Reset() {
	*x = UpdateCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressResp) ProtoMessage() {}

func (x *UpdateCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新公司收发货地址表状态
type UpdateCompanyAddressReceiveStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReceiveStatus int32 `protobuf:"varint,2,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //是否默认收货地址：0->否；1->是
}

func (x *UpdateCompanyAddressReceiveStatusReq) Reset() {
	*x = UpdateCompanyAddressReceiveStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressReceiveStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressReceiveStatusReq) ProtoMessage() {}

func (x *UpdateCompanyAddressReceiveStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressReceiveStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressReceiveStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateCompanyAddressReceiveStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyAddressReceiveStatusReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

// 更新公司收发货地址表状态
type UpdateCompanyAddressSendStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendStatus int32 `protobuf:"varint,2,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"` //默认发货地址：0->否；1->是
}

func (x *UpdateCompanyAddressSendStatusReq) Reset() {
	*x = UpdateCompanyAddressSendStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressSendStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressSendStatusReq) ProtoMessage() {}

func (x *UpdateCompanyAddressSendStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressSendStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressSendStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateCompanyAddressSendStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyAddressSendStatusReq) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

type UpdateCompanyAddressStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCompanyAddressStatusResp) Reset() {
	*x = UpdateCompanyAddressStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressStatusResp) ProtoMessage() {}

func (x *UpdateCompanyAddressStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateCompanyAddressStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询公司收发货地址表详情
type QueryCompanyAddressDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryCompanyAddressDetailReq) Reset() {
	*x = QueryCompanyAddressDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressDetailReq) ProtoMessage() {}

func (x *QueryCompanyAddressDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressDetailReq.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{22}
}

func (x *QueryCompanyAddressDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryCompanyAddressDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressName   string `protobuf:"bytes,1,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	City          string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	CreateBy      string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                  //创建者
	CreateTime    string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`            //创建时间
	DetailAddress string `protobuf:"bytes,5,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	Id            int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                             //
	Name          string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //是否默认收货地址：0->否；1->是
	Region        string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                     //区
	SendStatus    int32  `protobuf:"varint,12,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`          //默认发货地址：0->否；1->是
	UpdateBy      string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                 //更新者
	UpdateTime    string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`           //更新时间
}

func (x *QueryCompanyAddressDetailResp) Reset() {
	*x = QueryCompanyAddressDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressDetailResp) ProtoMessage() {}

func (x *QueryCompanyAddressDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressDetailResp.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{23}
}

func (x *QueryCompanyAddressDetailResp) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询公司收发货地址表列表
type QueryCompanyAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum     int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`            //第几页
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         //每页的数量
	AddressName string `protobuf:"bytes,3,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"` //地址名称
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                  //收发货人姓名
	Phone       string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                //收货人电话
}

func (x *QueryCompanyAddressListReq) Reset() {
	*x = QueryCompanyAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressListReq) ProtoMessage() {}

func (x *QueryCompanyAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressListReq.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{24}
}

func (x *QueryCompanyAddressListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryCompanyAddressListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryCompanyAddressListReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *QueryCompanyAddressListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCompanyAddressListReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CompanyAddressListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressName   string `protobuf:"bytes,1,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	City          string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	CreateBy      string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                  //创建者
	CreateTime    string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`            //创建时间
	DetailAddress string `protobuf:"bytes,5,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	Id            int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                             //
	Name          string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //是否默认收货地址：0->否；1->是
	Region        string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                     //区
	SendStatus    int32  `protobuf:"varint,12,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`          //默认发货地址：0->否；1->是
	UpdateBy      string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                 //更新者
	UpdateTime    string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`           //更新时间
}

func (x *CompanyAddressListData) Reset() {
	*x = CompanyAddressListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAddressListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAddressListData) ProtoMessage() {}

func (x *CompanyAddressListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAddressListData.ProtoReflect.Descriptor instead.
func (*CompanyAddressListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{25}
}

func (x *CompanyAddressListData) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *CompanyAddressListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CompanyAddressListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *CompanyAddressListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CompanyAddressListData) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *CompanyAddressListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompanyAddressListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyAddressListData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CompanyAddressListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CompanyAddressListData) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *CompanyAddressListData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CompanyAddressListData) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *CompanyAddressListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *CompanyAddressListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryCompanyAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*CompanyAddressListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCompanyAddressListResp) Reset() {
	*x = QueryCompanyAddressListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressListResp) ProtoMessage() {}

func (x *QueryCompanyAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressListResp.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{26}
}

func (x *QueryCompanyAddressListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCompanyAddressListResp) GetList() []*CompanyAddressListData {
	if x != nil {
		return x.List
	}
	return nil
}

type DeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId         int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                        //订单id
	DeliveryCompany string `protobuf:"bytes,2,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"` //物流公司(配送方式)
	DeliverySn      string `protobuf:"bytes,3,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn,omitempty"`                //物流单号
	OperateMan      string `protobuf:"bytes,4,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`
}

func (x *DeliveryReq) Reset() {
	*x = DeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryReq) ProtoMessage() {}

func (x *DeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryReq.ProtoReflect.Descriptor instead.
func (*DeliveryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{27}
}

func (x *DeliveryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DeliveryReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *DeliveryReq) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *DeliveryReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type DeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeliveryResp) Reset() {
	*x = DeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResp) ProtoMessage() {}

func (x *DeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResp.ProtoReflect.Descriptor instead.
func (*DeliveryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{28}
}

func (x *DeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type CloseOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	Note       string  `protobuf:"bytes,2,opt,name=Note,proto3" json:"Note,omitempty"`
	OperateMan string  `protobuf:"bytes,3,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`
}

func (x *CloseOrderReq) Reset() {
	*x = CloseOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderReq) ProtoMessage() {}

func (x *CloseOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderReq.ProtoReflect.Descriptor instead.
func (*CloseOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{29}
}

func (x *CloseOrderReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CloseOrderReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *CloseOrderReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type CloseOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *CloseOrderResp) Reset() {
	*x = CloseOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderResp) ProtoMessage() {}

func (x *CloseOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderResp.ProtoReflect.Descriptor instead.
func (*CloseOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{30}
}

func (x *CloseOrderResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type OrderDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *OrderDetailReq) Reset() {
	*x = OrderDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetailReq) ProtoMessage() {}

func (x *OrderDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetailReq.ProtoReflect.Descriptor instead.
func (*OrderDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{31}
}

func (x *OrderDetailReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type OrderDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *OrderListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderDetailResp) Reset() {
	*x = OrderDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetailResp) ProtoMessage() {}

func (x *OrderDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetailResp.ProtoReflect.Descriptor instead.
func (*OrderDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{32}
}

func (x *OrderDetailResp) GetData() *OrderListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateReceiverInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                             //订单id
	Status                int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                                                              //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	ReceiverCity          string `protobuf:"bytes,34,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`                              //城市
	ReceiverDetailAddress string `protobuf:"bytes,35,opt,name=receiver_detail_address,json=receiverDetailAddress,proto3" json:"receiver_detail_address,omitempty"` //详细地址
	ReceiverName          string `protobuf:"bytes,36,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`                              //收货人姓名
	ReceiverPhone         string `protobuf:"bytes,37,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`                           //收货人电话
	ReceiverPostCode      string `protobuf:"bytes,38,opt,name=receiver_post_code,json=receiverPostCode,proto3" json:"receiver_post_code,omitempty"`                //收货人邮编
	ReceiverProvince      string `protobuf:"bytes,39,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"`                  //省份/直辖市
	ReceiverRegion        string `protobuf:"bytes,40,opt,name=receiver_region,json=receiverRegion,proto3" json:"receiver_region,omitempty"`                        //区
	OperateMan            string `protobuf:"bytes,10,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`
}

func (x *UpdateReceiverInfoReq) Reset() {
	*x = UpdateReceiverInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceiverInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceiverInfoReq) ProtoMessage() {}

func (x *UpdateReceiverInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceiverInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateReceiverInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateReceiverInfoReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateReceiverInfoReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateReceiverInfoReq) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverDetailAddress() string {
	if x != nil {
		return x.ReceiverDetailAddress
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverPostCode() string {
	if x != nil {
		return x.ReceiverPostCode
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetReceiverRegion() string {
	if x != nil {
		return x.ReceiverRegion
	}
	return ""
}

func (x *UpdateReceiverInfoReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type UpdateReceiverInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateReceiverInfoResp) Reset() {
	*x = UpdateReceiverInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceiverInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceiverInfoResp) ProtoMessage() {}

func (x *UpdateReceiverInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceiverInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateReceiverInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateReceiverInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateMoneyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                       //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderId        int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                      //订单id
	FreightAmount  int64  `protobuf:"varint,3,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`    //运费金额
	DiscountAmount int64  `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"` //管理员后台调整订单使用的折扣金额
	OperateMan     string `protobuf:"bytes,5,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`
}

func (x *UpdateMoneyInfoReq) Reset() {
	*x = UpdateMoneyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMoneyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMoneyInfoReq) ProtoMessage() {}

func (x *UpdateMoneyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMoneyInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateMoneyInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateMoneyInfoReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMoneyInfoReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateMoneyInfoReq) GetFreightAmount() int64 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *UpdateMoneyInfoReq) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *UpdateMoneyInfoReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type UpdateMoneyInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMoneyInfoResp) Reset() {
	*x = UpdateMoneyInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMoneyInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMoneyInfoResp) ProtoMessage() {}

func (x *UpdateMoneyInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMoneyInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateMoneyInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateMoneyInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateNoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                  //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderId    int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` //订单id
	Note       string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	OperateMan string `protobuf:"bytes,4,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`
}

func (x *UpdateNoteReq) Reset() {
	*x = UpdateNoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteReq) ProtoMessage() {}

func (x *UpdateNoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteReq.ProtoReflect.Descriptor instead.
func (*UpdateNoteReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateNoteReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateNoteReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateNoteReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *UpdateNoteReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type UpdateNoteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateNoteResp) Reset() {
	*x = UpdateNoteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteResp) ProtoMessage() {}

func (x *UpdateNoteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteResp.ProtoReflect.Descriptor instead.
func (*UpdateNoteResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateNoteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type OrderAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoConfirmDay        int32            `protobuf:"varint,1,opt,name=auto_confirm_day,json=autoConfirmDay,proto3" json:"auto_confirm_day,omitempty"`                      //自动确认时间（天）
	BillContent           string           `protobuf:"bytes,2,opt,name=bill_content,json=billContent,proto3" json:"bill_content,omitempty"`                                  //发票内容
	BillHeader            string           `protobuf:"bytes,3,opt,name=bill_header,json=billHeader,proto3" json:"bill_header,omitempty"`                                     //发票抬头
	BillReceiverEmail     string           `protobuf:"bytes,4,opt,name=bill_receiver_email,json=billReceiverEmail,proto3" json:"bill_receiver_email,omitempty"`              //收票人邮箱
	BillReceiverPhone     string           `protobuf:"bytes,5,opt,name=bill_receiver_phone,json=billReceiverPhone,proto3" json:"bill_receiver_phone,omitempty"`              //收票人电话
	BillType              int32            `protobuf:"varint,6,opt,name=bill_type,json=billType,proto3" json:"bill_type,omitempty"`                                          //发票类型：0->不开发票；1->电子发票；2->纸质发票
	CommentTime           string           `protobuf:"bytes,7,opt,name=comment_time,json=commentTime,proto3" json:"comment_time,omitempty"`                                  //评价时间
	ConfirmStatus         int32            `protobuf:"varint,8,opt,name=confirm_status,json=confirmStatus,proto3" json:"confirm_status,omitempty"`                           //确认收货状态：0->未确认；1->已确认
	CouponAmount          int64            `protobuf:"varint,9,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                              //优惠券抵扣金额
	CouponId              int64            `protobuf:"varint,10,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                                         //优惠券id
	CreateTime            string           `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                    //提交时间
	DeleteStatus          int32            `protobuf:"varint,12,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                             //删除状态：0->未删除；1->已删除
	DeliveryCompany       string           `protobuf:"bytes,13,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`                     //物流公司(配送方式)
	DeliverySn            string           `protobuf:"bytes,14,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn,omitempty"`                                    //物流单号
	DeliveryTime          string           `protobuf:"bytes,15,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`                              //发货时间
	DiscountAmount        int64            `protobuf:"varint,16,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`                       //管理员后台调整订单使用的折扣金额
	FreightAmount         int64            `protobuf:"varint,17,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`                          //运费金额
	Growth                int32            `protobuf:"varint,18,opt,name=growth,proto3" json:"growth,omitempty"`                                                             //可以活动的成长值
	Id                    int64            `protobuf:"varint,19,opt,name=id,proto3" json:"id,omitempty"`                                                                     //订单id
	Integration           int32            `protobuf:"varint,20,opt,name=integration,proto3" json:"integration,omitempty"`                                                   //可以获得的积分
	IntegrationAmount     int64            `protobuf:"varint,21,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`              //积分抵扣金额
	MemberId              int64            `protobuf:"varint,22,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                         //会员id
	MemberUsername        string           `protobuf:"bytes,23,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"`                        //用户帐号
	ModifyTime            string           `protobuf:"bytes,24,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`                                    //修改时间
	Note                  string           `protobuf:"bytes,25,opt,name=note,proto3" json:"note,omitempty"`                                                                  //订单备注
	OrderSn               string           `protobuf:"bytes,26,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                             //订单编号
	OrderType             int32            `protobuf:"varint,27,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`                                      //订单类型：0->正常订单；1->秒杀订单
	PayAmount             int64            `protobuf:"varint,28,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                                      //应付金额（实际支付金额）
	PayType               int32            `protobuf:"varint,29,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                                            //支付方式：0->未支付；1->支付宝；2->微信
	PaymentTime           string           `protobuf:"bytes,30,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"`                                 //支付时间
	PromotionAmount       int64            `protobuf:"varint,31,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`                    //促销优化金额（促销价、满减、阶梯价）
	PromotionInfo         string           `protobuf:"bytes,32,opt,name=promotion_info,json=promotionInfo,proto3" json:"promotion_info,omitempty"`                           //活动信息
	ReceiveTime           string           `protobuf:"bytes,33,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`                                 //确认收货时间
	ReceiverCity          string           `protobuf:"bytes,34,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`                              //城市
	ReceiverDetailAddress string           `protobuf:"bytes,35,opt,name=receiver_detail_address,json=receiverDetailAddress,proto3" json:"receiver_detail_address,omitempty"` //详细地址
	ReceiverName          string           `protobuf:"bytes,36,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`                              //收货人姓名
	ReceiverPhone         string           `protobuf:"bytes,37,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`                           //收货人电话
	ReceiverPostCode      string           `protobuf:"bytes,38,opt,name=receiver_post_code,json=receiverPostCode,proto3" json:"receiver_post_code,omitempty"`                //收货人邮编
	ReceiverProvince      string           `protobuf:"bytes,39,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"`                  //省份/直辖市
	ReceiverRegion        string           `protobuf:"bytes,40,opt,name=receiver_region,json=receiverRegion,proto3" json:"receiver_region,omitempty"`                        //区
	SourceType            int32            `protobuf:"varint,41,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                   //订单来源：0->PC订单；1->app订单
	Status                int32            `protobuf:"varint,42,opt,name=status,proto3" json:"status,omitempty"`                                                             //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	TotalAmount           int64            `protobuf:"varint,43,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`                                //订单总金额
	UseIntegration        int32            `protobuf:"varint,44,opt,name=use_integration,json=useIntegration,proto3" json:"use_integration,omitempty"`                       //下单时使用的积分
	OrderItemList         []*OrderItemData `protobuf:"bytes,45,rep,name=orderItemList,proto3" json:"orderItemList,omitempty"`
	OrderId               int64            `protobuf:"varint,46,opt,name=OrderId,proto3" json:"OrderId,omitempty"` //订单创建后,返回
	CartItemIds           []int64          `protobuf:"varint,47,rep,packed,name=CartItemIds,proto3" json:"CartItemIds,omitempty"`
}

func (x *OrderAddReq) Reset() {
	*x = OrderAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddReq) ProtoMessage() {}

func (x *OrderAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddReq.ProtoReflect.Descriptor instead.
func (*OrderAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{39}
}

func (x *OrderAddReq) GetAutoConfirmDay() int32 {
	if x != nil {
		return x.AutoConfirmDay
	}
	return 0
}

func (x *OrderAddReq) GetBillContent() string {
	if x != nil {
		return x.BillContent
	}
	return ""
}

func (x *OrderAddReq) GetBillHeader() string {
	if x != nil {
		return x.BillHeader
	}
	return ""
}

func (x *OrderAddReq) GetBillReceiverEmail() string {
	if x != nil {
		return x.BillReceiverEmail
	}
	return ""
}

func (x *OrderAddReq) GetBillReceiverPhone() string {
	if x != nil {
		return x.BillReceiverPhone
	}
	return ""
}

func (x *OrderAddReq) GetBillType() int32 {
	if x != nil {
		return x.BillType
	}
	return 0
}

func (x *OrderAddReq) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *OrderAddReq) GetConfirmStatus() int32 {
	if x != nil {
		return x.ConfirmStatus
	}
	return 0
}

func (x *OrderAddReq) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderAddReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderAddReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderAddReq) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *OrderAddReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *OrderAddReq) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *OrderAddReq) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *OrderAddReq) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *OrderAddReq) GetFreightAmount() int64 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *OrderAddReq) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *OrderAddReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderAddReq) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *OrderAddReq) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *OrderAddReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderAddReq) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *OrderAddReq) GetModifyTime() string {
	if x != nil {
		return x.ModifyTime
	}
	return ""
}

func (x *OrderAddReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderAddReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderAddReq) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *OrderAddReq) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *OrderAddReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderAddReq) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *OrderAddReq) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderAddReq) GetPromotionInfo() string {
	if x != nil {
		return x.PromotionInfo
	}
	return ""
}

func (x *OrderAddReq) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderAddReq) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *OrderAddReq) GetReceiverDetailAddress() string {
	if x != nil {
		return x.ReceiverDetailAddress
	}
	return ""
}

func (x *OrderAddReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *OrderAddReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *OrderAddReq) GetReceiverPostCode() string {
	if x != nil {
		return x.ReceiverPostCode
	}
	return ""
}

func (x *OrderAddReq) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *OrderAddReq) GetReceiverRegion() string {
	if x != nil {
		return x.ReceiverRegion
	}
	return ""
}

func (x *OrderAddReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *OrderAddReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderAddReq) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderAddReq) GetUseIntegration() int32 {
	if x != nil {
		return x.UseIntegration
	}
	return 0
}

func (x *OrderAddReq) GetOrderItemList() []*OrderItemData {
	if x != nil {
		return x.OrderItemList
	}
	return nil
}

func (x *OrderAddReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderAddReq) GetCartItemIds() []int64 {
	if x != nil {
		return x.CartItemIds
	}
	return nil
}

type OrderItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponAmount      int64  `protobuf:"varint,1,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                   //优惠券优惠分解金额
	GiftGrowth        int32  `protobuf:"varint,2,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth,omitempty"`                         //
	GiftIntegration   int32  `protobuf:"varint,3,opt,name=gift_integration,json=giftIntegration,proto3" json:"gift_integration,omitempty"`          //
	Id                int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                                           //
	IntegrationAmount int64  `protobuf:"varint,5,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`    //积分优惠分解金额
	OrderId           int64  `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                  //订单id
	OrderSn           string `protobuf:"bytes,7,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                   //订单编号
	ProductAttr       string `protobuf:"bytes,8,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                       //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,9,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                    //商品品牌
	ProductCategoryId int64  `protobuf:"varint,10,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
	ProductId         int64  `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                           //商品id
	ProductName       string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                      //商品名称
	ProductPic        string `protobuf:"bytes,13,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品图片
	ProductPrice      int64  `protobuf:"varint,14,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`                  //销售价格
	ProductQuantity   int32  `protobuf:"varint,15,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`         //购买数量
	ProductSkuCode    string `protobuf:"bytes,16,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,17,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                //商品sku编号
	ProductSn         string `protobuf:"bytes,18,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //货号
	PromotionAmount   int64  `protobuf:"varint,19,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`         //商品促销分解金额
	PromotionName     string `protobuf:"bytes,20,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`                //商品促销名称
	RealAmount        int64  `protobuf:"varint,21,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`                        //该商品经过优惠后的分解金额
}

func (x *OrderItemData) Reset() {
	*x = OrderItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemData) ProtoMessage() {}

func (x *OrderItemData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemData.ProtoReflect.Descriptor instead.
func (*OrderItemData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{40}
}

func (x *OrderItemData) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderItemData) GetGiftGrowth() int32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *OrderItemData) GetGiftIntegration() int32 {
	if x != nil {
		return x.GiftIntegration
	}
	return 0
}

func (x *OrderItemData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderItemData) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *OrderItemData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderItemData) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderItemData) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *OrderItemData) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *OrderItemData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *OrderItemData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderItemData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderItemData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderItemData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderItemData) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *OrderItemData) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *OrderItemData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *OrderItemData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *OrderItemData) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderItemData) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *OrderItemData) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type OrderAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` //订单创建成功后,返回订单id
}

func (x *OrderAddResp) Reset() {
	*x = OrderAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddResp) ProtoMessage() {}

func (x *OrderAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddResp.ProtoReflect.Descriptor instead.
func (*OrderAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{41}
}

func (x *OrderAddResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current         int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderSn         string `protobuf:"bytes,3,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                      //订单编号
	MemberUsername  string `protobuf:"bytes,4,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"` //用户帐号
	PayType         int32  `protobuf:"varint,5,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                     //支付方式：0->未支付；1->支付宝；2->微信
	SourceType      int32  `protobuf:"varint,6,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`            //订单来源：0->PC订单；1->app订单
	Status          int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	OrderType       int32  `protobuf:"varint,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"` //订单类型：0->正常订单；1->秒杀订单
	MemberId        int64  `protobuf:"varint,9,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
	ReceiverKeyword string `protobuf:"bytes,10,opt,name=receiver_keyword,json=receiverKeyword,proto3" json:"receiver_keyword,omitempty"`
}

func (x *OrderListReq) Reset() {
	*x = OrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListReq) ProtoMessage() {}

func (x *OrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListReq.ProtoReflect.Descriptor instead.
func (*OrderListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{42}
}

func (x *OrderListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *OrderListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderListReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderListReq) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *OrderListReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderListReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *OrderListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderListReq) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *OrderListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderListReq) GetReceiverKeyword() string {
	if x != nil {
		return x.ReceiverKeyword
	}
	return ""
}

type OrderListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoConfirmDay        int32                      `protobuf:"varint,1,opt,name=auto_confirm_day,json=autoConfirmDay,proto3" json:"auto_confirm_day,omitempty"`                      //自动确认时间（天）
	BillContent           string                     `protobuf:"bytes,2,opt,name=bill_content,json=billContent,proto3" json:"bill_content,omitempty"`                                  //发票内容
	BillHeader            string                     `protobuf:"bytes,3,opt,name=bill_header,json=billHeader,proto3" json:"bill_header,omitempty"`                                     //发票抬头
	BillReceiverEmail     string                     `protobuf:"bytes,4,opt,name=bill_receiver_email,json=billReceiverEmail,proto3" json:"bill_receiver_email,omitempty"`              //收票人邮箱
	BillReceiverPhone     string                     `protobuf:"bytes,5,opt,name=bill_receiver_phone,json=billReceiverPhone,proto3" json:"bill_receiver_phone,omitempty"`              //收票人电话
	BillType              int32                      `protobuf:"varint,6,opt,name=bill_type,json=billType,proto3" json:"bill_type,omitempty"`                                          //发票类型：0->不开发票；1->电子发票；2->纸质发票
	CommentTime           string                     `protobuf:"bytes,7,opt,name=comment_time,json=commentTime,proto3" json:"comment_time,omitempty"`                                  //评价时间
	ConfirmStatus         int32                      `protobuf:"varint,8,opt,name=confirm_status,json=confirmStatus,proto3" json:"confirm_status,omitempty"`                           //确认收货状态：0->未确认；1->已确认
	CouponAmount          int64                      `protobuf:"varint,9,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                              //优惠券抵扣金额
	CouponId              int64                      `protobuf:"varint,10,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                                         //优惠券id
	CreateTime            string                     `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                    //提交时间
	DeleteStatus          int32                      `protobuf:"varint,12,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                             //删除状态：0->未删除；1->已删除
	DeliveryCompany       string                     `protobuf:"bytes,13,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`                     //物流公司(配送方式)
	DeliverySn            string                     `protobuf:"bytes,14,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn,omitempty"`                                    //物流单号
	DeliveryTime          string                     `protobuf:"bytes,15,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`                              //发货时间
	DiscountAmount        int64                      `protobuf:"varint,16,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`                       //管理员后台调整订单使用的折扣金额
	FreightAmount         int64                      `protobuf:"varint,17,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`                          //运费金额
	Growth                int32                      `protobuf:"varint,18,opt,name=growth,proto3" json:"growth,omitempty"`                                                             //可以活动的成长值
	Id                    int64                      `protobuf:"varint,19,opt,name=id,proto3" json:"id,omitempty"`                                                                     //订单id
	Integration           int32                      `protobuf:"varint,20,opt,name=integration,proto3" json:"integration,omitempty"`                                                   //可以获得的积分
	IntegrationAmount     int64                      `protobuf:"varint,21,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`              //积分抵扣金额
	MemberId              int64                      `protobuf:"varint,22,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                         //会员id
	MemberUsername        string                     `protobuf:"bytes,23,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"`                        //用户帐号
	ModifyTime            string                     `protobuf:"bytes,24,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`                                    //修改时间
	Note                  string                     `protobuf:"bytes,25,opt,name=note,proto3" json:"note,omitempty"`                                                                  //订单备注
	OrderSn               string                     `protobuf:"bytes,26,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                             //订单编号
	OrderType             int32                      `protobuf:"varint,27,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`                                      //订单类型：0->正常订单；1->秒杀订单
	PayAmount             int64                      `protobuf:"varint,28,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                                      //应付金额（实际支付金额）
	PayType               int32                      `protobuf:"varint,29,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                                            //支付方式：0->未支付；1->支付宝；2->微信
	PaymentTime           string                     `protobuf:"bytes,30,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"`                                 //支付时间
	PromotionAmount       int64                      `protobuf:"varint,31,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`                    //促销优化金额（促销价、满减、阶梯价）
	PromotionInfo         string                     `protobuf:"bytes,32,opt,name=promotion_info,json=promotionInfo,proto3" json:"promotion_info,omitempty"`                           //活动信息
	ReceiveTime           string                     `protobuf:"bytes,33,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`                                 //确认收货时间
	ReceiverCity          string                     `protobuf:"bytes,34,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`                              //城市
	ReceiverDetailAddress string                     `protobuf:"bytes,35,opt,name=receiver_detail_address,json=receiverDetailAddress,proto3" json:"receiver_detail_address,omitempty"` //详细地址
	ReceiverName          string                     `protobuf:"bytes,36,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`                              //收货人姓名
	ReceiverPhone         string                     `protobuf:"bytes,37,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`                           //收货人电话
	ReceiverPostCode      string                     `protobuf:"bytes,38,opt,name=receiver_post_code,json=receiverPostCode,proto3" json:"receiver_post_code,omitempty"`                //收货人邮编
	ReceiverProvince      string                     `protobuf:"bytes,39,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"`                  //省份/直辖市
	ReceiverRegion        string                     `protobuf:"bytes,40,opt,name=receiver_region,json=receiverRegion,proto3" json:"receiver_region,omitempty"`                        //区
	SourceType            int32                      `protobuf:"varint,41,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                   //订单来源：0->PC订单；1->app订单
	Status                int32                      `protobuf:"varint,42,opt,name=status,proto3" json:"status,omitempty"`                                                             //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	TotalAmount           int64                      `protobuf:"varint,43,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`                                //订单总金额
	UseIntegration        int32                      `protobuf:"varint,44,opt,name=use_integration,json=useIntegration,proto3" json:"use_integration,omitempty"`                       //下单时使用的积分
	ItemListData          []*OrderItemData           `protobuf:"bytes,45,rep,name=itemListData,proto3" json:"itemListData,omitempty"`
	HistoryListData       []*OrderOperateHistoryData `protobuf:"bytes,46,rep,name=historyListData,proto3" json:"historyListData,omitempty"`
}

func (x *OrderListData) Reset() {
	*x = OrderListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListData) ProtoMessage() {}

func (x *OrderListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListData.ProtoReflect.Descriptor instead.
func (*OrderListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{43}
}

func (x *OrderListData) GetAutoConfirmDay() int32 {
	if x != nil {
		return x.AutoConfirmDay
	}
	return 0
}

func (x *OrderListData) GetBillContent() string {
	if x != nil {
		return x.BillContent
	}
	return ""
}

func (x *OrderListData) GetBillHeader() string {
	if x != nil {
		return x.BillHeader
	}
	return ""
}

func (x *OrderListData) GetBillReceiverEmail() string {
	if x != nil {
		return x.BillReceiverEmail
	}
	return ""
}

func (x *OrderListData) GetBillReceiverPhone() string {
	if x != nil {
		return x.BillReceiverPhone
	}
	return ""
}

func (x *OrderListData) GetBillType() int32 {
	if x != nil {
		return x.BillType
	}
	return 0
}

func (x *OrderListData) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *OrderListData) GetConfirmStatus() int32 {
	if x != nil {
		return x.ConfirmStatus
	}
	return 0
}

func (x *OrderListData) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderListData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderListData) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *OrderListData) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *OrderListData) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *OrderListData) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *OrderListData) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *OrderListData) GetFreightAmount() int64 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *OrderListData) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *OrderListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderListData) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *OrderListData) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *OrderListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderListData) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *OrderListData) GetModifyTime() string {
	if x != nil {
		return x.ModifyTime
	}
	return ""
}

func (x *OrderListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderListData) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderListData) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *OrderListData) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *OrderListData) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderListData) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *OrderListData) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderListData) GetPromotionInfo() string {
	if x != nil {
		return x.PromotionInfo
	}
	return ""
}

func (x *OrderListData) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderListData) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *OrderListData) GetReceiverDetailAddress() string {
	if x != nil {
		return x.ReceiverDetailAddress
	}
	return ""
}

func (x *OrderListData) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *OrderListData) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *OrderListData) GetReceiverPostCode() string {
	if x != nil {
		return x.ReceiverPostCode
	}
	return ""
}

func (x *OrderListData) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *OrderListData) GetReceiverRegion() string {
	if x != nil {
		return x.ReceiverRegion
	}
	return ""
}

func (x *OrderListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *OrderListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderListData) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderListData) GetUseIntegration() int32 {
	if x != nil {
		return x.UseIntegration
	}
	return 0
}

func (x *OrderListData) GetItemListData() []*OrderItemData {
	if x != nil {
		return x.ItemListData
	}
	return nil
}

func (x *OrderListData) GetHistoryListData() []*OrderOperateHistoryData {
	if x != nil {
		return x.HistoryListData
	}
	return nil
}

type OrderOperateHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //操作时间
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                      //
	Note        string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                   //备注
	OperateMan  string `protobuf:"bytes,4,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人：用户；系统；后台管理员
	OrderId     int64  `protobuf:"varint,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             //订单id
	OrderStatus int32  `protobuf:"varint,6,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"` //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
}

func (x *OrderOperateHistoryData) Reset() {
	*x = OrderOperateHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOperateHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOperateHistoryData) ProtoMessage() {}

func (x *OrderOperateHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOperateHistoryData.ProtoReflect.Descriptor instead.
func (*OrderOperateHistoryData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{44}
}

func (x *OrderOperateHistoryData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderOperateHistoryData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderOperateHistoryData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderOperateHistoryData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *OrderOperateHistoryData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderOperateHistoryData) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type OrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OrderListResp) Reset() {
	*x = OrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListResp) ProtoMessage() {}

func (x *OrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListResp.ProtoReflect.Descriptor instead.
func (*OrderListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{45}
}

func (x *OrderListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OrderListResp) GetList() []*OrderListData {
	if x != nil {
		return x.List
	}
	return nil
}

type OrderUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status          int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                                         //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	DeliveryCompany string `protobuf:"bytes,3,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"` //物流公司(配送方式)
	DeliverySn      string `protobuf:"bytes,43,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn,omitempty"`               //物流单号
	Note            string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *OrderUpdateReq) Reset() {
	*x = OrderUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdateReq) ProtoMessage() {}

func (x *OrderUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdateReq.ProtoReflect.Descriptor instead.
func (*OrderUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{46}
}

func (x *OrderUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderUpdateReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *OrderUpdateReq) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *OrderUpdateReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type OrderUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderUpdateResp) Reset() {
	*x = OrderUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdateResp) ProtoMessage() {}

func (x *OrderUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdateResp.ProtoReflect.Descriptor instead.
func (*OrderUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{47}
}

func (x *OrderUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type OrderDeleteByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *OrderDeleteByIdReq) Reset() {
	*x = OrderDeleteByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeleteByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeleteByIdReq) ProtoMessage() {}

func (x *OrderDeleteByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeleteByIdReq.ProtoReflect.Descriptor instead.
func (*OrderDeleteByIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{48}
}

func (x *OrderDeleteByIdReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OrderDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	OrderId  int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *OrderDeleteReq) Reset() {
	*x = OrderDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeleteReq) ProtoMessage() {}

func (x *OrderDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeleteReq.ProtoReflect.Descriptor instead.
func (*OrderDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{49}
}

func (x *OrderDeleteReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderDeleteReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type OrderDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderDeleteResp) Reset() {
	*x = OrderDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeleteResp) ProtoMessage() {}

func (x *OrderDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeleteResp.ProtoReflect.Descriptor instead.
func (*OrderDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{50}
}

func (x *OrderDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type OrderListByMemberIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	MemberId int64 `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
}

func (x *OrderListByMemberIdReq) Reset() {
	*x = OrderListByMemberIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListByMemberIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListByMemberIdReq) ProtoMessage() {}

func (x *OrderListByMemberIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListByMemberIdReq.ProtoReflect.Descriptor instead.
func (*OrderListByMemberIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{51}
}

func (x *OrderListByMemberIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderListByMemberIdReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type OrderListByMemberIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  *OrderListData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderListByMemberIdResp) Reset() {
	*x = OrderListByMemberIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListByMemberIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListByMemberIdResp) ProtoMessage() {}

func (x *OrderListByMemberIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListByMemberIdResp.ProtoReflect.Descriptor instead.
func (*OrderListByMemberIdResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{52}
}

func (x *OrderListByMemberIdResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OrderListByMemberIdResp) GetData() *OrderListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderCancelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	OrderId  int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *OrderCancelReq) Reset() {
	*x = OrderCancelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelReq) ProtoMessage() {}

func (x *OrderCancelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelReq.ProtoReflect.Descriptor instead.
func (*OrderCancelReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{53}
}

func (x *OrderCancelReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderCancelReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ReleaseSkuStockLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuId    int64 `protobuf:"varint,1,opt,name=ProductSkuId,proto3" json:"ProductSkuId,omitempty"`
	ProductQuantity int32 `protobuf:"varint,2,opt,name=ProductQuantity,proto3" json:"ProductQuantity,omitempty"`
}

func (x *ReleaseSkuStockLockData) Reset() {
	*x = ReleaseSkuStockLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSkuStockLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSkuStockLockData) ProtoMessage() {}

func (x *ReleaseSkuStockLockData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSkuStockLockData.ProtoReflect.Descriptor instead.
func (*ReleaseSkuStockLockData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{54}
}

func (x *ReleaseSkuStockLockData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *ReleaseSkuStockLockData) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

type OrderCancelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId    int64                      `protobuf:"varint,1,opt,name=CouponId,proto3" json:"CouponId,omitempty"`       //优惠券id
	Integration int32                      `protobuf:"varint,2,opt,name=Integration,proto3" json:"Integration,omitempty"` //积分
	Data        []*ReleaseSkuStockLockData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`                //释放库存
}

func (x *OrderCancelResp) Reset() {
	*x = OrderCancelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelResp) ProtoMessage() {}

func (x *OrderCancelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelResp.ProtoReflect.Descriptor instead.
func (*OrderCancelResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{55}
}

func (x *OrderCancelResp) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderCancelResp) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *OrderCancelResp) GetData() []*ReleaseSkuStockLockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	OrderId  int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *OrderConfirmReq) Reset() {
	*x = OrderConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmReq) ProtoMessage() {}

func (x *OrderConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmReq.ProtoReflect.Descriptor instead.
func (*OrderConfirmReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{56}
}

func (x *OrderConfirmReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderConfirmReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type OrderConfirmResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderConfirmResp) Reset() {
	*x = OrderConfirmResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmResp) ProtoMessage() {}

func (x *OrderConfirmResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmResp.ProtoReflect.Descriptor instead.
func (*OrderConfirmResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{57}
}

func (x *OrderConfirmResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type OrderRefundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OrderId int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *OrderRefundReq) Reset() {
	*x = OrderRefundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundReq) ProtoMessage() {}

func (x *OrderRefundReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundReq.ProtoReflect.Descriptor instead.
func (*OrderRefundReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{58}
}

func (x *OrderRefundReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderRefundReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type OrderRefundResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderRefundResp) Reset() {
	*x = OrderRefundResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundResp) ProtoMessage() {}

func (x *OrderRefundResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundResp.ProtoReflect.Descriptor instead.
func (*OrderRefundResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{59}
}

func (x *OrderRefundResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	Status   int32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Current  int64 `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryOrderListReq) Reset() {
	*x = QueryOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListReq) ProtoMessage() {}

func (x *QueryOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{60}
}

func (x *QueryOrderListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryOrderListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *QueryOrderListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateOrderStatusByOutTradeNoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo  string `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`
	OrderStatus int64  `protobuf:"varint,2,opt,name=OrderStatus,proto3" json:"OrderStatus,omitempty"`
}

func (x *UpdateOrderStatusByOutTradeNoReq) Reset() {
	*x = UpdateOrderStatusByOutTradeNoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStatusByOutTradeNoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusByOutTradeNoReq) ProtoMessage() {}

func (x *UpdateOrderStatusByOutTradeNoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusByOutTradeNoReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusByOutTradeNoReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateOrderStatusByOutTradeNoReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *UpdateOrderStatusByOutTradeNoReq) GetOrderStatus() int64 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type UpdateOrderStatusByOutTradeNoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderStatusByOutTradeNoResp) Reset() {
	*x = UpdateOrderStatusByOutTradeNoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStatusByOutTradeNoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusByOutTradeNoResp) ProtoMessage() {}

func (x *UpdateOrderStatusByOutTradeNoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusByOutTradeNoResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusByOutTradeNoResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateOrderStatusByOutTradeNoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 添加订单中所包含的商品
type AddOrderItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponAmount      int64  `protobuf:"varint,1,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                   //优惠券优惠分解金额
	GiftGrowth        int32  `protobuf:"varint,2,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth,omitempty"`                         //
	GiftIntegration   int32  `protobuf:"varint,3,opt,name=gift_integration,json=giftIntegration,proto3" json:"gift_integration,omitempty"`          //
	RealAmount        int64  `protobuf:"varint,4,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`                         //该商品经过优惠后的分解金额
	IntegrationAmount int64  `protobuf:"varint,5,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`    //积分优惠分解金额
	OrderId           int64  `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                  //订单id
	OrderSn           string `protobuf:"bytes,7,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                   //订单编号
	ProductAttr       string `protobuf:"bytes,8,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                       //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,9,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                    //商品品牌
	ProductCategoryId int64  `protobuf:"varint,10,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
	ProductId         int64  `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                           //商品id
	ProductName       string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                      //商品名称
	ProductPic        string `protobuf:"bytes,13,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品图片
	ProductPrice      int64  `protobuf:"varint,14,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`                  //销售价格
	ProductQuantity   int32  `protobuf:"varint,15,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`         //购买数量
	ProductSkuCode    string `protobuf:"bytes,16,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,17,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                //商品sku编号
	ProductSn         string `protobuf:"bytes,18,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //货号
	PromotionAmount   int64  `protobuf:"varint,19,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`         //商品促销分解金额
	PromotionName     string `protobuf:"bytes,20,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`                //商品促销名称
}

func (x *AddOrderItemReq) Reset() {
	*x = AddOrderItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderItemReq) ProtoMessage() {}

func (x *AddOrderItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderItemReq.ProtoReflect.Descriptor instead.
func (*AddOrderItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{63}
}

func (x *AddOrderItemReq) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *AddOrderItemReq) GetGiftGrowth() int32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *AddOrderItemReq) GetGiftIntegration() int32 {
	if x != nil {
		return x.GiftIntegration
	}
	return 0
}

func (x *AddOrderItemReq) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *AddOrderItemReq) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *AddOrderItemReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderItemReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *AddOrderItemReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *AddOrderItemReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *AddOrderItemReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *AddOrderItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddOrderItemReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddOrderItemReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddOrderItemReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *AddOrderItemReq) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *AddOrderItemReq) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *AddOrderItemReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *AddOrderItemReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *AddOrderItemReq) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *AddOrderItemReq) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

type AddOrderItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderItemResp) Reset() {
	*x = AddOrderItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderItemResp) ProtoMessage() {}

func (x *AddOrderItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderItemResp.ProtoReflect.Descriptor instead.
func (*AddOrderItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{64}
}

func (x *AddOrderItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单中所包含的商品详情
type QueryOrderItemDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderItemDetailReq) Reset() {
	*x = QueryOrderItemDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderItemDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderItemDetailReq) ProtoMessage() {}

func (x *QueryOrderItemDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderItemDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderItemDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{65}
}

func (x *QueryOrderItemDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderItemDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponAmount      int64  `protobuf:"varint,1,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                   //优惠券优惠分解金额
	GiftGrowth        int32  `protobuf:"varint,2,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth,omitempty"`                         //
	GiftIntegration   int32  `protobuf:"varint,3,opt,name=gift_integration,json=giftIntegration,proto3" json:"gift_integration,omitempty"`          //
	Id                int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                                           //
	IntegrationAmount int64  `protobuf:"varint,5,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`    //积分优惠分解金额
	OrderId           int64  `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                  //订单id
	OrderSn           string `protobuf:"bytes,7,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                   //订单编号
	ProductAttr       string `protobuf:"bytes,8,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                       //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,9,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                    //商品品牌
	ProductCategoryId int64  `protobuf:"varint,10,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
	ProductId         int64  `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                           //商品id
	ProductName       string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                      //商品名称
	ProductPic        string `protobuf:"bytes,13,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品图片
	ProductPrice      int64  `protobuf:"varint,14,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`                  //销售价格
	ProductQuantity   int32  `protobuf:"varint,15,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`         //购买数量
	ProductSkuCode    string `protobuf:"bytes,16,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,17,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                //商品sku编号
	ProductSn         string `protobuf:"bytes,18,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //货号
	PromotionAmount   int64  `protobuf:"varint,19,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`         //商品促销分解金额
	PromotionName     string `protobuf:"bytes,20,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`                //商品促销名称
	RealAmount        int64  `protobuf:"varint,21,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`                        //该商品经过优惠后的分解金额
}

func (x *QueryOrderItemDetailResp) Reset() {
	*x = QueryOrderItemDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderItemDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderItemDetailResp) ProtoMessage() {}

func (x *QueryOrderItemDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderItemDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderItemDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{66}
}

func (x *QueryOrderItemDetailResp) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetGiftGrowth() int32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetGiftIntegration() int32 {
	if x != nil {
		return x.GiftIntegration
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *QueryOrderItemDetailResp) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *QueryOrderItemDetailResp) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 分页查询订单中所包含的商品列表
type QueryOrderItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryOrderItemListReq) Reset() {
	*x = QueryOrderItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderItemListReq) ProtoMessage() {}

func (x *QueryOrderItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderItemListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderItemListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{67}
}

func (x *QueryOrderItemListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderItemListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderItemListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponAmount      int64  `protobuf:"varint,1,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                   //优惠券优惠分解金额
	GiftGrowth        int32  `protobuf:"varint,2,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth,omitempty"`                         //
	GiftIntegration   int32  `protobuf:"varint,3,opt,name=gift_integration,json=giftIntegration,proto3" json:"gift_integration,omitempty"`          //
	Id                int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                                           //
	IntegrationAmount int64  `protobuf:"varint,5,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount,omitempty"`    //积分优惠分解金额
	OrderId           int64  `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                  //订单id
	OrderSn           string `protobuf:"bytes,7,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                                   //订单编号
	ProductAttr       string `protobuf:"bytes,8,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                       //商品销售属性:[{"key":"颜色","value":"颜色"},{"key":"容量","value":"4G"}]
	ProductBrand      string `protobuf:"bytes,9,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                    //商品品牌
	ProductCategoryId int64  `protobuf:"varint,10,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
	ProductId         int64  `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                           //商品id
	ProductName       string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                      //商品名称
	ProductPic        string `protobuf:"bytes,13,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品图片
	ProductPrice      int64  `protobuf:"varint,14,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`                  //销售价格
	ProductQuantity   int32  `protobuf:"varint,15,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`         //购买数量
	ProductSkuCode    string `protobuf:"bytes,16,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品sku条码
	ProductSkuId      int64  `protobuf:"varint,17,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                //商品sku编号
	ProductSn         string `protobuf:"bytes,18,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //货号
	PromotionAmount   int64  `protobuf:"varint,19,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`         //商品促销分解金额
	PromotionName     string `protobuf:"bytes,20,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`                //商品促销名称
	RealAmount        int64  `protobuf:"varint,21,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`                        //该商品经过优惠后的分解金额
}

func (x *OrderItemListData) Reset() {
	*x = OrderItemListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemListData) ProtoMessage() {}

func (x *OrderItemListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemListData.ProtoReflect.Descriptor instead.
func (*OrderItemListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{68}
}

func (x *OrderItemListData) GetCouponAmount() int64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderItemListData) GetGiftGrowth() int32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *OrderItemListData) GetGiftIntegration() int32 {
	if x != nil {
		return x.GiftIntegration
	}
	return 0
}

func (x *OrderItemListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderItemListData) GetIntegrationAmount() int64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *OrderItemListData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderItemListData) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderItemListData) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *OrderItemListData) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *OrderItemListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *OrderItemListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderItemListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderItemListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderItemListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderItemListData) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *OrderItemListData) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *OrderItemListData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *OrderItemListData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *OrderItemListData) GetPromotionAmount() int64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderItemListData) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *OrderItemListData) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type QueryOrderItemListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderItemListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderItemListResp) Reset() {
	*x = QueryOrderItemListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderItemListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderItemListResp) ProtoMessage() {}

func (x *QueryOrderItemListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderItemListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderItemListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{69}
}

func (x *QueryOrderItemListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderItemListResp) GetList() []*OrderItemListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单操作历史记录
type AddOrderOperateHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note        string `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`                                   //备注
	OperateMan  string `protobuf:"bytes,2,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人：用户；系统；后台管理员
	OrderId     int64  `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             //订单id
	OrderStatus int32  `protobuf:"varint,4,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"` //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
}

func (x *AddOrderOperateHistoryReq) Reset() {
	*x = AddOrderOperateHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderOperateHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderOperateHistoryReq) ProtoMessage() {}

func (x *AddOrderOperateHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderOperateHistoryReq.ProtoReflect.Descriptor instead.
func (*AddOrderOperateHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{70}
}

func (x *AddOrderOperateHistoryReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AddOrderOperateHistoryReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *AddOrderOperateHistoryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderOperateHistoryReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type AddOrderOperateHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderOperateHistoryResp) Reset() {
	*x = AddOrderOperateHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderOperateHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderOperateHistoryResp) ProtoMessage() {}

func (x *AddOrderOperateHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderOperateHistoryResp.ProtoReflect.Descriptor instead.
func (*AddOrderOperateHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{71}
}

func (x *AddOrderOperateHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除订单操作历史记录
type DeleteOrderOperateHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderOperateHistoryReq) Reset() {
	*x = DeleteOrderOperateHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderOperateHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderOperateHistoryReq) ProtoMessage() {}

func (x *DeleteOrderOperateHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderOperateHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderOperateHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{72}
}

func (x *DeleteOrderOperateHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderOperateHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderOperateHistoryResp) Reset() {
	*x = DeleteOrderOperateHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderOperateHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderOperateHistoryResp) ProtoMessage() {}

func (x *DeleteOrderOperateHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderOperateHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderOperateHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteOrderOperateHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询订单操作历史记录列表
type QueryOrderOperateHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum     int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`             //第几页
	PageSize    int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`          //每页的数量
	OrderStatus int32 `protobuf:"varint,3,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"` //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
}

func (x *QueryOrderOperateHistoryListReq) Reset() {
	*x = QueryOrderOperateHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderOperateHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderOperateHistoryListReq) ProtoMessage() {}

func (x *QueryOrderOperateHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderOperateHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderOperateHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{74}
}

func (x *QueryOrderOperateHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderOperateHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOrderOperateHistoryListReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type OrderOperateHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //操作时间
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                      //
	Note        string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                   //备注
	OperateMan  string `protobuf:"bytes,4,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人：用户；系统；后台管理员
	OrderId     int64  `protobuf:"varint,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             //订单id
	OrderStatus int32  `protobuf:"varint,6,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"` //订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
}

func (x *OrderOperateHistoryListData) Reset() {
	*x = OrderOperateHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOperateHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOperateHistoryListData) ProtoMessage() {}

func (x *OrderOperateHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOperateHistoryListData.ProtoReflect.Descriptor instead.
func (*OrderOperateHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{75}
}

func (x *OrderOperateHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderOperateHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderOperateHistoryListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderOperateHistoryListData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *OrderOperateHistoryListData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderOperateHistoryListData) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type QueryOrderOperateHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderOperateHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderOperateHistoryListResp) Reset() {
	*x = QueryOrderOperateHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderOperateHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderOperateHistoryListResp) ProtoMessage() {}

func (x *QueryOrderOperateHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderOperateHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderOperateHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{76}
}

func (x *QueryOrderOperateHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderOperateHistoryListResp) GetList() []*OrderOperateHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单退货申请
type AddOrderReturnApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnName       string `protobuf:"bytes,1,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`                       //退货人姓名
	ReturnPhone      string `protobuf:"bytes,2,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`                    //退货人电话
	Description      string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                       //描述
	Reason           string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                                 //原因
	ReturnAmount     int64  `protobuf:"varint,5,opt,name=return_amount,json=returnAmount,proto3" json:"return_amount,omitempty"`                //退款金额
	ProofPics        string `protobuf:"bytes,6,opt,name=proof_pics,json=proofPics,proto3" json:"proof_pics,omitempty"`                          //凭证图片，以逗号隔开
	Status           int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                                                //申请状态：0->待处理；1->退货中；2->已完成；3->已拒绝
	MemberUsername   string `protobuf:"bytes,8,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"`           //会员用户名
	OrderId          int64  `protobuf:"varint,9,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                               //订单id
	OrderSn          string `protobuf:"bytes,10,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                               //订单编号
	ProductAttr      string `protobuf:"bytes,11,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                   //商品销售属性：颜色：红色；尺码：xl;
	ProductBrand     string `protobuf:"bytes,12,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                //商品品牌
	ProductCount     int32  `protobuf:"varint,13,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`               //退货数量
	ProductId        int64  `protobuf:"varint,14,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                        //退货商品id
	ProductName      string `protobuf:"bytes,15,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                   //商品名称
	ProductPic       string `protobuf:"bytes,16,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                      //商品图片
	ProductPrice     int64  `protobuf:"varint,17,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`               //商品单价
	ProductRealPrice int64  `protobuf:"varint,18,opt,name=product_real_price,json=productRealPrice,proto3" json:"product_real_price,omitempty"` //商品实际支付单价
}

func (x *AddOrderReturnApplyReq) Reset() {
	*x = AddOrderReturnApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnApplyReq) ProtoMessage() {}

func (x *AddOrderReturnApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnApplyReq.ProtoReflect.Descriptor instead.
func (*AddOrderReturnApplyReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{77}
}

func (x *AddOrderReturnApplyReq) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetReturnAmount() int64 {
	if x != nil {
		return x.ReturnAmount
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetProofPics() string {
	if x != nil {
		return x.ProofPics
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddOrderReturnApplyReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *AddOrderReturnApplyReq) GetProductRealPrice() int64 {
	if x != nil {
		return x.ProductRealPrice
	}
	return 0
}

type AddOrderReturnApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderReturnApplyResp) Reset() {
	*x = AddOrderReturnApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnApplyResp) ProtoMessage() {}

func (x *AddOrderReturnApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnApplyResp.ProtoReflect.Descriptor instead.
func (*AddOrderReturnApplyResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{78}
}

func (x *AddOrderReturnApplyResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除订单退货申请
type DeleteOrderReturnApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderReturnApplyReq) Reset() {
	*x = DeleteOrderReturnApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnApplyReq) ProtoMessage() {}

func (x *DeleteOrderReturnApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnApplyReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnApplyReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{79}
}

func (x *DeleteOrderReturnApplyReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderReturnApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderReturnApplyResp) Reset() {
	*x = DeleteOrderReturnApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnApplyResp) ProtoMessage() {}

func (x *DeleteOrderReturnApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnApplyResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnApplyResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{80}
}

func (x *DeleteOrderReturnApplyResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单退货申请
type UpdateOrderReturnApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyAddressId int64  `protobuf:"varint,1,opt,name=company_address_id,json=companyAddressId,proto3" json:"company_address_id,omitempty"` //收货地址表id
	HandleMan        string `protobuf:"bytes,2,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                         //处理人员
	HandleNote       string `protobuf:"bytes,3,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`                      //处理备注
	Id               int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                                       //
	ReceiveMan       string `protobuf:"bytes,5,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`                      //收货人
	ReceiveNote      string `protobuf:"bytes,6,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`                   //收货备注
	ReturnAmount     int64  `protobuf:"varint,7,opt,name=return_amount,json=returnAmount,proto3" json:"return_amount,omitempty"`               //退款金额
	Status           int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                               //申请状态：0->待处理；1->退货中；2->已完成；3->已拒绝
}

func (x *UpdateOrderReturnApplyReq) Reset() {
	*x = UpdateOrderReturnApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnApplyReq) ProtoMessage() {}

func (x *UpdateOrderReturnApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnApplyReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnApplyReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateOrderReturnApplyReq) GetCompanyAddressId() int64 {
	if x != nil {
		return x.CompanyAddressId
	}
	return 0
}

func (x *UpdateOrderReturnApplyReq) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *UpdateOrderReturnApplyReq) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *UpdateOrderReturnApplyReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReturnApplyReq) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *UpdateOrderReturnApplyReq) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *UpdateOrderReturnApplyReq) GetReturnAmount() int64 {
	if x != nil {
		return x.ReturnAmount
	}
	return 0
}

func (x *UpdateOrderReturnApplyReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateOrderReturnApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderReturnApplyResp) Reset() {
	*x = UpdateOrderReturnApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnApplyResp) ProtoMessage() {}

func (x *UpdateOrderReturnApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnApplyResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnApplyResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{82}
}

func (x *UpdateOrderReturnApplyResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单退货申请详情
type QueryOrderReturnApplyDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderReturnApplyDetailReq) Reset() {
	*x = QueryOrderReturnApplyDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnApplyDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnApplyDetailReq) ProtoMessage() {}

func (x *QueryOrderReturnApplyDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnApplyDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnApplyDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{83}
}

func (x *QueryOrderReturnApplyDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderReturnApplyDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyAddressId int64  `protobuf:"varint,1,opt,name=company_address_id,json=companyAddressId,proto3" json:"company_address_id,omitempty"`  //收货地址表id
	CreateTime       string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                       //申请时间
	Description      string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                       //描述
	HandleMan        string `protobuf:"bytes,4,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                          //处理人员
	HandleNote       string `protobuf:"bytes,5,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`                       //处理备注
	HandleTime       string `protobuf:"bytes,6,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`                       //处理时间
	Id               int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                                        //
	MemberUsername   string `protobuf:"bytes,8,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"`           //会员用户名
	OrderId          int64  `protobuf:"varint,9,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                               //订单id
	OrderSn          string `protobuf:"bytes,10,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                               //订单编号
	ProductAttr      string `protobuf:"bytes,11,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                   //商品销售属性：颜色：红色；尺码：xl;
	ProductBrand     string `protobuf:"bytes,12,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                //商品品牌
	ProductCount     int32  `protobuf:"varint,13,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`               //退货数量
	ProductId        int64  `protobuf:"varint,14,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                        //退货商品id
	ProductName      string `protobuf:"bytes,15,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                   //商品名称
	ProductPic       string `protobuf:"bytes,16,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                      //商品图片
	ProductPrice     int64  `protobuf:"varint,17,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`               //商品单价
	ProductRealPrice int64  `protobuf:"varint,18,opt,name=product_real_price,json=productRealPrice,proto3" json:"product_real_price,omitempty"` //商品实际支付单价
	ProofPics        string `protobuf:"bytes,19,opt,name=proof_pics,json=proofPics,proto3" json:"proof_pics,omitempty"`                         //凭证图片，以逗号隔开
	Reason           string `protobuf:"bytes,20,opt,name=reason,proto3" json:"reason,omitempty"`                                                //原因
	ReceiveMan       string `protobuf:"bytes,21,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`                      //收货人
	ReceiveNote      string `protobuf:"bytes,22,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`                   //收货备注
	ReceiveTime      string `protobuf:"bytes,23,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`                   //收货时间
	ReturnAmount     int64  `protobuf:"varint,24,opt,name=return_amount,json=returnAmount,proto3" json:"return_amount,omitempty"`               //退款金额
	ReturnName       string `protobuf:"bytes,25,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`                      //退货人姓名
	ReturnPhone      string `protobuf:"bytes,26,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`                   //退货人电话
	Status           int32  `protobuf:"varint,27,opt,name=status,proto3" json:"status,omitempty"`                                               //申请状态：0->待处理；1->退货中；2->已完成；3->已拒绝
}

func (x *QueryOrderReturnApplyDetailResp) Reset() {
	*x = QueryOrderReturnApplyDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnApplyDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnApplyDetailResp) ProtoMessage() {}

func (x *QueryOrderReturnApplyDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnApplyDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnApplyDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{84}
}

func (x *QueryOrderReturnApplyDetailResp) GetCompanyAddressId() int64 {
	if x != nil {
		return x.CompanyAddressId
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetProductRealPrice() int64 {
	if x != nil {
		return x.ProductRealPrice
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetProofPics() string {
	if x != nil {
		return x.ProofPics
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReturnAmount() int64 {
	if x != nil {
		return x.ReturnAmount
	}
	return 0
}

func (x *QueryOrderReturnApplyDetailResp) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *QueryOrderReturnApplyDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 分页查询订单退货申请列表
type QueryOrderReturnApplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum        int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                     //第几页
	PageSize       int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                  //每页的数量
	HandleMan      string `protobuf:"bytes,3,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                //处理人员
	MemberUsername string `protobuf:"bytes,4,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"` //会员用户名
	OrderSn        string `protobuf:"bytes,5,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                      //订单编号
	HandleTime     string `protobuf:"bytes,6,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`             //处理时间
	Status         int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                                      //申请状态：0->待处理；1->退货中；2->已完成；3->已拒绝
	CreateTime     string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             //申请时间
	ReturnName     string `protobuf:"bytes,9,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`             //退货人姓名
	ReturnPhone    string `protobuf:"bytes,10,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`         //退货人电话
}

func (x *QueryOrderReturnApplyListReq) Reset() {
	*x = QueryOrderReturnApplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnApplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnApplyListReq) ProtoMessage() {}

func (x *QueryOrderReturnApplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnApplyListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnApplyListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{85}
}

func (x *QueryOrderReturnApplyListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderReturnApplyListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOrderReturnApplyListReq) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderReturnApplyListReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *QueryOrderReturnApplyListReq) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

type OrderReturnApplyListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyAddressId int64  `protobuf:"varint,1,opt,name=company_address_id,json=companyAddressId,proto3" json:"company_address_id,omitempty"`  //收货地址表id
	CreateTime       string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                       //申请时间
	Description      string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                       //描述
	HandleMan        string `protobuf:"bytes,4,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                          //处理人员
	HandleNote       string `protobuf:"bytes,5,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`                       //处理备注
	HandleTime       string `protobuf:"bytes,6,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`                       //处理时间
	Id               int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                                        //
	MemberUsername   string `protobuf:"bytes,8,opt,name=member_username,json=memberUsername,proto3" json:"member_username,omitempty"`           //会员用户名
	OrderId          int64  `protobuf:"varint,9,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                               //订单id
	OrderSn          string `protobuf:"bytes,10,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                               //订单编号
	ProductAttr      string `protobuf:"bytes,11,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                   //商品销售属性：颜色：红色；尺码：xl;
	ProductBrand     string `protobuf:"bytes,12,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                //商品品牌
	ProductCount     int32  `protobuf:"varint,13,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`               //退货数量
	ProductId        int64  `protobuf:"varint,14,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                        //退货商品id
	ProductName      string `protobuf:"bytes,15,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                   //商品名称
	ProductPic       string `protobuf:"bytes,16,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                      //商品图片
	ProductPrice     int64  `protobuf:"varint,17,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`               //商品单价
	ProductRealPrice int64  `protobuf:"varint,18,opt,name=product_real_price,json=productRealPrice,proto3" json:"product_real_price,omitempty"` //商品实际支付单价
	ProofPics        string `protobuf:"bytes,19,opt,name=proof_pics,json=proofPics,proto3" json:"proof_pics,omitempty"`                         //凭证图片，以逗号隔开
	Reason           string `protobuf:"bytes,20,opt,name=reason,proto3" json:"reason,omitempty"`                                                //原因
	ReceiveMan       string `protobuf:"bytes,21,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`                      //收货人
	ReceiveNote      string `protobuf:"bytes,22,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`                   //收货备注
	ReceiveTime      string `protobuf:"bytes,23,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`                   //收货时间
	ReturnAmount     int64  `protobuf:"varint,24,opt,name=return_amount,json=returnAmount,proto3" json:"return_amount,omitempty"`               //退款金额
	ReturnName       string `protobuf:"bytes,25,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`                      //退货人姓名
	ReturnPhone      string `protobuf:"bytes,26,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`                   //退货人电话
	Status           int32  `protobuf:"varint,27,opt,name=status,proto3" json:"status,omitempty"`                                               //申请状态：0->待处理；1->退货中；2->已完成；3->已拒绝
}

func (x *OrderReturnApplyListData) Reset() {
	*x = OrderReturnApplyListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnApplyListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnApplyListData) ProtoMessage() {}

func (x *OrderReturnApplyListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnApplyListData.ProtoReflect.Descriptor instead.
func (*OrderReturnApplyListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{86}
}

func (x *OrderReturnApplyListData) GetCompanyAddressId() int64 {
	if x != nil {
		return x.CompanyAddressId
	}
	return 0
}

func (x *OrderReturnApplyListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnApplyListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderReturnApplyListData) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *OrderReturnApplyListData) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *OrderReturnApplyListData) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *OrderReturnApplyListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnApplyListData) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *OrderReturnApplyListData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderReturnApplyListData) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderReturnApplyListData) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *OrderReturnApplyListData) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *OrderReturnApplyListData) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *OrderReturnApplyListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderReturnApplyListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderReturnApplyListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderReturnApplyListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderReturnApplyListData) GetProductRealPrice() int64 {
	if x != nil {
		return x.ProductRealPrice
	}
	return 0
}

func (x *OrderReturnApplyListData) GetProofPics() string {
	if x != nil {
		return x.ProofPics
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReturnAmount() int64 {
	if x != nil {
		return x.ReturnAmount
	}
	return 0
}

func (x *OrderReturnApplyListData) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *OrderReturnApplyListData) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *OrderReturnApplyListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type QueryOrderReturnApplyListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderReturnApplyListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderReturnApplyListResp) Reset() {
	*x = QueryOrderReturnApplyListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnApplyListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnApplyListResp) ProtoMessage() {}

func (x *QueryOrderReturnApplyListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnApplyListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnApplyListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{87}
}

func (x *QueryOrderReturnApplyListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderReturnApplyListResp) GetList() []*OrderReturnApplyListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加退货原因表
type AddOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //状态：0->不启用；1->启用
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`      //退货类型
	Sort   int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`     //排序
}

func (x *AddOrderReturnReasonReq) Reset() {
	*x = AddOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnReasonReq) ProtoMessage() {}

func (x *AddOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*AddOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{88}
}

func (x *AddOrderReturnReasonReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddOrderReturnReasonReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrderReturnReasonReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderReturnReasonResp) Reset() {
	*x = AddOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnReasonResp) ProtoMessage() {}

func (x *AddOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*AddOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{89}
}

func (x *AddOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除退货原因表
type DeleteOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderReturnReasonReq) Reset() {
	*x = DeleteOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnReasonReq) ProtoMessage() {}

func (x *DeleteOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteOrderReturnReasonReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderReturnReasonResp) Reset() {
	*x = DeleteOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnReasonResp) ProtoMessage() {}

func (x *DeleteOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{91}
}

func (x *DeleteOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新退货原因表
type UpdateOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //状态：0->不启用；1->启用
	Id     int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`         //
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`      //退货类型
	Sort   int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`     //排序
}

func (x *UpdateOrderReturnReasonReq) Reset() {
	*x = UpdateOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonReq) ProtoMessage() {}

func (x *UpdateOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateOrderReturnReasonReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderReturnReasonReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReturnReasonReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrderReturnReasonReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderReturnReasonResp) Reset() {
	*x = UpdateOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonResp) ProtoMessage() {}

func (x *UpdateOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新退货原因表状态
type UpdateOrderReturnReasonStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //状态：0->不启用；1->启用
}

func (x *UpdateOrderReturnReasonStatusReq) Reset() {
	*x = UpdateOrderReturnReasonStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonStatusReq) ProtoMessage() {}

func (x *UpdateOrderReturnReasonStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateOrderReturnReasonStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateOrderReturnReasonStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateOrderReturnReasonStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderReturnReasonStatusResp) Reset() {
	*x = UpdateOrderReturnReasonStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonStatusResp) ProtoMessage() {}

func (x *UpdateOrderReturnReasonStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateOrderReturnReasonStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询退货原因表详情
type QueryOrderReturnReasonDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderReturnReasonDetailReq) Reset() {
	*x = QueryOrderReturnReasonDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonDetailReq) ProtoMessage() {}

func (x *QueryOrderReturnReasonDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{96}
}

func (x *QueryOrderReturnReasonDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderReturnReasonDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //添加时间
	Id         int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                  //
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               //退货类型
	Sort       int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`                              //排序
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                          //状态：0->不启用；1->启用
}

func (x *QueryOrderReturnReasonDetailResp) Reset() {
	*x = QueryOrderReturnReasonDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonDetailResp) ProtoMessage() {}

func (x *QueryOrderReturnReasonDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{97}
}

func (x *QueryOrderReturnReasonDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderReturnReasonDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryOrderReturnReasonDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 分页查询退货原因表列表
type QueryOrderReturnReasonListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                          //退货类型
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->不启用；1->启用
}

func (x *QueryOrderReturnReasonListReq) Reset() {
	*x = QueryOrderReturnReasonListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonListReq) ProtoMessage() {}

func (x *QueryOrderReturnReasonListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{98}
}

func (x *QueryOrderReturnReasonListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderReturnReasonListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOrderReturnReasonListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryOrderReturnReasonListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OrderReturnReasonListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //添加时间
	Id         int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                  //
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               //退货类型
	Sort       int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`                              //排序
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                          //状态：0->不启用；1->启用
}

func (x *OrderReturnReasonListData) Reset() {
	*x = OrderReturnReasonListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnReasonListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnReasonListData) ProtoMessage() {}

func (x *OrderReturnReasonListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnReasonListData.ProtoReflect.Descriptor instead.
func (*OrderReturnReasonListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{99}
}

func (x *OrderReturnReasonListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnReasonListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnReasonListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderReturnReasonListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OrderReturnReasonListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type QueryOrderReturnReasonListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderReturnReasonListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderReturnReasonListResp) Reset() {
	*x = QueryOrderReturnReasonListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonListResp) ProtoMessage() {}

func (x *QueryOrderReturnReasonListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{100}
}

func (x *QueryOrderReturnReasonListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderReturnReasonListResp) GetList() []*OrderReturnReasonListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单设置表
type AddOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentOvertime     int32 `protobuf:"varint,1,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	ConfirmOvertime     int32 `protobuf:"varint,2,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,3,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	FlashOrderOvertime  int32 `protobuf:"varint,4,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	Status              int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
	IsDefault           int32 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	NormalOrderOvertime int32 `protobuf:"varint,7,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
}

func (x *AddOrderSettingReq) Reset() {
	*x = AddOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderSettingReq) ProtoMessage() {}

func (x *AddOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderSettingReq.ProtoReflect.Descriptor instead.
func (*AddOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{101}
}

func (x *AddOrderSettingReq) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddOrderSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *AddOrderSettingReq) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

type AddOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderSettingResp) Reset() {
	*x = AddOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderSettingResp) ProtoMessage() {}

func (x *AddOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderSettingResp.ProtoReflect.Descriptor instead.
func (*AddOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{102}
}

func (x *AddOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除订单设置表
type DeleteOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderSettingReq) Reset() {
	*x = DeleteOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderSettingReq) ProtoMessage() {}

func (x *DeleteOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{103}
}

func (x *DeleteOrderSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderSettingResp) Reset() {
	*x = DeleteOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderSettingResp) ProtoMessage() {}

func (x *DeleteOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{104}
}

func (x *DeleteOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单设置表
type UpdateOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentOvertime     int32 `protobuf:"varint,1,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	ConfirmOvertime     int32 `protobuf:"varint,2,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,3,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	FlashOrderOvertime  int32 `protobuf:"varint,4,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	Id                  int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                                //
	NormalOrderOvertime int32 `protobuf:"varint,6,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
}

func (x *UpdateOrderSettingReq) Reset() {
	*x = UpdateOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingReq) ProtoMessage() {}

func (x *UpdateOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{105}
}

func (x *UpdateOrderSettingReq) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

type UpdateOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderSettingResp) Reset() {
	*x = UpdateOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingResp) ProtoMessage() {}

func (x *UpdateOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{106}
}

func (x *UpdateOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单设置表状态
type UpdateOrderSettingIsDefaultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //
	IsDefault int32 `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` //是否默认：0->否；1->是
}

func (x *UpdateOrderSettingIsDefaultReq) Reset() {
	*x = UpdateOrderSettingIsDefaultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingIsDefaultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingIsDefaultReq) ProtoMessage() {}

func (x *UpdateOrderSettingIsDefaultReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingIsDefaultReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingIsDefaultReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{107}
}

func (x *UpdateOrderSettingIsDefaultReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderSettingIsDefaultReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UpdateOrderSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"` //
	Status int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`  //状态：0->禁用；1->启用
}

func (x *UpdateOrderSettingStatusReq) Reset() {
	*x = UpdateOrderSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingStatusReq) ProtoMessage() {}

func (x *UpdateOrderSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{108}
}

func (x *UpdateOrderSettingStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateOrderSettingStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateOrderSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderSettingStatusResp) Reset() {
	*x = UpdateOrderSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingStatusResp) ProtoMessage() {}

func (x *UpdateOrderSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateOrderSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单设置表详情
type QueryOrderSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderSettingDetailReq) Reset() {
	*x = QueryOrderSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingDetailReq) ProtoMessage() {}

func (x *QueryOrderSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{110}
}

func (x *QueryOrderSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentOvertime     int32 `protobuf:"varint,1,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	ConfirmOvertime     int32 `protobuf:"varint,2,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,3,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	FlashOrderOvertime  int32 `protobuf:"varint,4,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	Id                  int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                                //
	IsDefault           int32 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	NormalOrderOvertime int32 `protobuf:"varint,7,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	Status              int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
}

func (x *QueryOrderSettingDetailResp) Reset() {
	*x = QueryOrderSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingDetailResp) ProtoMessage() {}

func (x *QueryOrderSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{111}
}

func (x *QueryOrderSettingDetailResp) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 分页查询订单设置表列表
type QueryOrderSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	Status   int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->禁用；1->启用
}

func (x *QueryOrderSettingListReq) Reset() {
	*x = QueryOrderSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingListReq) ProtoMessage() {}

func (x *QueryOrderSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{112}
}

func (x *QueryOrderSettingListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderSettingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOrderSettingListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OrderSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentOvertime     int32 `protobuf:"varint,1,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	ConfirmOvertime     int32 `protobuf:"varint,2,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,3,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	FlashOrderOvertime  int32 `protobuf:"varint,4,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	Id                  int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                                //
	IsDefault           int32 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	NormalOrderOvertime int32 `protobuf:"varint,7,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	Status              int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
}

func (x *OrderSettingListData) Reset() {
	*x = OrderSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettingListData) ProtoMessage() {}

func (x *OrderSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettingListData.ProtoReflect.Descriptor instead.
func (*OrderSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{113}
}

func (x *OrderSettingListData) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderSettingListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *OrderSettingListData) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type QueryOrderSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderSettingListResp) Reset() {
	*x = QueryOrderSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingListResp) ProtoMessage() {}

func (x *QueryOrderSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{114}
}

func (x *QueryOrderSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderSettingListResp) GetList() []*OrderSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_rpc_oms_oms_proto protoreflect.FileDescriptor

var file_rpc_oms_oms_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x6d, 0x73, 0x2f, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xa3,
	0x04, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6e, 0x22, 0x25, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb6, 0x04, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x64, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe,
	0x04, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x33, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xf7, 0x04, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5e,
	0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb7,
	0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x82, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5d, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x95, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x22, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x56, 0x0a, 0x0d, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x22, 0x24, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x0e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x98, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0xb8, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x22, 0x29, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x77, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x22,
	0x24, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb9, 0x0d, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a,
	0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x2f,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x73, 0x22, 0x82, 0x06, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67,
	0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xcb, 0x0d,
	0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a,
	0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a,
	0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xbd, 0x01, 0x0a, 0x17,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x98, 0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x26, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x44, 0x0a, 0x16, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5d, 0x0a, 0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46,
	0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x87, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x0f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x7d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x64, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x21, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x79, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0xf4, 0x05, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x29, 0x0a,
	0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x06,
	0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x12, 0x29, 0x0a, 0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x69, 0x66, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x86,
	0x06, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x19, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x1a, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x30, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x7c, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf4, 0x04, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x5f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x50, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x2d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x30, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x9a, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x30, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xa4, 0x07, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x1c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x9d, 0x07, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x50, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x2e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x6c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x37, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x01,
	0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x29, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x8c, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4f,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x47, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2c, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc9, 0x02, 0x0a, 0x1b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32,
	0x9e, 0x04, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x32, 0x96, 0x06, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x21, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7b,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x94, 0x0a, 0x0a, 0x0c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x59, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x44, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x12, 0x16, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a,
	0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1a, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x4f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x2b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x79, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x79, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x32, 0x9d, 0x02, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x32, 0xf2, 0x02, 0x0a, 0x1a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x67, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xb5, 0x04, 0x0a, 0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xc3, 0x05,
	0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x2b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x32, 0xd9, 0x05, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_oms_oms_proto_rawDescOnce sync.Once
	file_rpc_oms_oms_proto_rawDescData = file_rpc_oms_oms_proto_rawDesc
)

func file_rpc_oms_oms_proto_rawDescGZIP() []byte {
	file_rpc_oms_oms_proto_rawDescOnce.Do(func() {
		file_rpc_oms_oms_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_oms_oms_proto_rawDescData)
	})
	return file_rpc_oms_oms_proto_rawDescData
}

var file_rpc_oms_oms_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_rpc_oms_oms_proto_goTypes = []interface{}{
	(*AddCartItemReq)(nil),                       // 0: omsclient.AddCartItemReq
	(*AddCartItemResp)(nil),                      // 1: omsclient.AddCartItemResp
	(*DeleteCartItemReq)(nil),                    // 2: omsclient.DeleteCartItemReq
	(*DeleteCartItemResp)(nil),                   // 3: omsclient.DeleteCartItemResp
	(*UpdateCartItemReq)(nil),                    // 4: omsclient.UpdateCartItemReq
	(*UpdateCartItemResp)(nil),                   // 5: omsclient.UpdateCartItemResp
	(*UpdateCartItemQuantityReq)(nil),            // 6: omsclient.UpdateCartItemQuantityReq
	(*UpdateCartItemQuantityResp)(nil),           // 7: omsclient.UpdateCartItemQuantityResp
	(*QueryCartItemDetailReq)(nil),               // 8: omsclient.QueryCartItemDetailReq
	(*QueryCartItemDetailResp)(nil),              // 9: omsclient.QueryCartItemDetailResp
	(*QueryCartItemListReq)(nil),                 // 10: omsclient.QueryCartItemListReq
	(*CartItemListData)(nil),                     // 11: omsclient.CartItemListData
	(*QueryCartItemListResp)(nil),                // 12: omsclient.QueryCartItemListResp
	(*AddCompanyAddressReq)(nil),                 // 13: omsclient.AddCompanyAddressReq
	(*AddCompanyAddressResp)(nil),                // 14: omsclient.AddCompanyAddressResp
	(*DeleteCompanyAddressReq)(nil),              // 15: omsclient.DeleteCompanyAddressReq
	(*DeleteCompanyAddressResp)(nil),             // 16: omsclient.DeleteCompanyAddressResp
	(*UpdateCompanyAddressReq)(nil),              // 17: omsclient.UpdateCompanyAddressReq
	(*UpdateCompanyAddressResp)(nil),             // 18: omsclient.UpdateCompanyAddressResp
	(*UpdateCompanyAddressReceiveStatusReq)(nil), // 19: omsclient.UpdateCompanyAddressReceiveStatusReq
	(*UpdateCompanyAddressSendStatusReq)(nil),    // 20: omsclient.UpdateCompanyAddressSendStatusReq
	(*UpdateCompanyAddressStatusResp)(nil),       // 21: omsclient.UpdateCompanyAddressStatusResp
	(*QueryCompanyAddressDetailReq)(nil),         // 22: omsclient.QueryCompanyAddressDetailReq
	(*QueryCompanyAddressDetailResp)(nil),        // 23: omsclient.QueryCompanyAddressDetailResp
	(*QueryCompanyAddressListReq)(nil),           // 24: omsclient.QueryCompanyAddressListReq
	(*CompanyAddressListData)(nil),               // 25: omsclient.CompanyAddressListData
	(*QueryCompanyAddressListResp)(nil),          // 26: omsclient.QueryCompanyAddressListResp
	(*DeliveryReq)(nil),                          // 27: omsclient.DeliveryReq
	(*DeliveryResp)(nil),                         // 28: omsclient.DeliveryResp
	(*CloseOrderReq)(nil),                        // 29: omsclient.CloseOrderReq
	(*CloseOrderResp)(nil),                       // 30: omsclient.CloseOrderResp
	(*OrderDetailReq)(nil),                       // 31: omsclient.OrderDetailReq
	(*OrderDetailResp)(nil),                      // 32: omsclient.OrderDetailResp
	(*UpdateReceiverInfoReq)(nil),                // 33: omsclient.UpdateReceiverInfoReq
	(*UpdateReceiverInfoResp)(nil),               // 34: omsclient.UpdateReceiverInfoResp
	(*UpdateMoneyInfoReq)(nil),                   // 35: omsclient.UpdateMoneyInfoReq
	(*UpdateMoneyInfoResp)(nil),                  // 36: omsclient.UpdateMoneyInfoResp
	(*UpdateNoteReq)(nil),                        // 37: omsclient.UpdateNoteReq
	(*UpdateNoteResp)(nil),                       // 38: omsclient.UpdateNoteResp
	(*OrderAddReq)(nil),                          // 39: omsclient.OrderAddReq
	(*OrderItemData)(nil),                        // 40: omsclient.OrderItemData
	(*OrderAddResp)(nil),                         // 41: omsclient.OrderAddResp
	(*OrderListReq)(nil),                         // 42: omsclient.OrderListReq
	(*OrderListData)(nil),                        // 43: omsclient.OrderListData
	(*OrderOperateHistoryData)(nil),              // 44: omsclient.OrderOperateHistoryData
	(*OrderListResp)(nil),                        // 45: omsclient.OrderListResp
	(*OrderUpdateReq)(nil),                       // 46: omsclient.OrderUpdateReq
	(*OrderUpdateResp)(nil),                      // 47: omsclient.OrderUpdateResp
	(*OrderDeleteByIdReq)(nil),                   // 48: omsclient.OrderDeleteByIdReq
	(*OrderDeleteReq)(nil),                       // 49: omsclient.OrderDeleteReq
	(*OrderDeleteResp)(nil),                      // 50: omsclient.OrderDeleteResp
	(*OrderListByMemberIdReq)(nil),               // 51: omsclient.OrderListByMemberIdReq
	(*OrderListByMemberIdResp)(nil),              // 52: omsclient.OrderListByMemberIdResp
	(*OrderCancelReq)(nil),                       // 53: omsclient.OrderCancelReq
	(*ReleaseSkuStockLockData)(nil),              // 54: omsclient.ReleaseSkuStockLockData
	(*OrderCancelResp)(nil),                      // 55: omsclient.OrderCancelResp
	(*OrderConfirmReq)(nil),                      // 56: omsclient.OrderConfirmReq
	(*OrderConfirmResp)(nil),                     // 57: omsclient.OrderConfirmResp
	(*OrderRefundReq)(nil),                       // 58: omsclient.OrderRefundReq
	(*OrderRefundResp)(nil),                      // 59: omsclient.OrderRefundResp
	(*QueryOrderListReq)(nil),                    // 60: omsclient.QueryOrderListReq
	(*UpdateOrderStatusByOutTradeNoReq)(nil),     // 61: omsclient.UpdateOrderStatusByOutTradeNoReq
	(*UpdateOrderStatusByOutTradeNoResp)(nil),    // 62: omsclient.UpdateOrderStatusByOutTradeNoResp
	(*AddOrderItemReq)(nil),                      // 63: omsclient.AddOrderItemReq
	(*AddOrderItemResp)(nil),                     // 64: omsclient.AddOrderItemResp
	(*QueryOrderItemDetailReq)(nil),              // 65: omsclient.QueryOrderItemDetailReq
	(*QueryOrderItemDetailResp)(nil),             // 66: omsclient.QueryOrderItemDetailResp
	(*QueryOrderItemListReq)(nil),                // 67: omsclient.QueryOrderItemListReq
	(*OrderItemListData)(nil),                    // 68: omsclient.OrderItemListData
	(*QueryOrderItemListResp)(nil),               // 69: omsclient.QueryOrderItemListResp
	(*AddOrderOperateHistoryReq)(nil),            // 70: omsclient.AddOrderOperateHistoryReq
	(*AddOrderOperateHistoryResp)(nil),           // 71: omsclient.AddOrderOperateHistoryResp
	(*DeleteOrderOperateHistoryReq)(nil),         // 72: omsclient.DeleteOrderOperateHistoryReq
	(*DeleteOrderOperateHistoryResp)(nil),        // 73: omsclient.DeleteOrderOperateHistoryResp
	(*QueryOrderOperateHistoryListReq)(nil),      // 74: omsclient.QueryOrderOperateHistoryListReq
	(*OrderOperateHistoryListData)(nil),          // 75: omsclient.OrderOperateHistoryListData
	(*QueryOrderOperateHistoryListResp)(nil),     // 76: omsclient.QueryOrderOperateHistoryListResp
	(*AddOrderReturnApplyReq)(nil),               // 77: omsclient.AddOrderReturnApplyReq
	(*AddOrderReturnApplyResp)(nil),              // 78: omsclient.AddOrderReturnApplyResp
	(*DeleteOrderReturnApplyReq)(nil),            // 79: omsclient.DeleteOrderReturnApplyReq
	(*DeleteOrderReturnApplyResp)(nil),           // 80: omsclient.DeleteOrderReturnApplyResp
	(*UpdateOrderReturnApplyReq)(nil),            // 81: omsclient.UpdateOrderReturnApplyReq
	(*UpdateOrderReturnApplyResp)(nil),           // 82: omsclient.UpdateOrderReturnApplyResp
	(*QueryOrderReturnApplyDetailReq)(nil),       // 83: omsclient.QueryOrderReturnApplyDetailReq
	(*QueryOrderReturnApplyDetailResp)(nil),      // 84: omsclient.QueryOrderReturnApplyDetailResp
	(*QueryOrderReturnApplyListReq)(nil),         // 85: omsclient.QueryOrderReturnApplyListReq
	(*OrderReturnApplyListData)(nil),             // 86: omsclient.OrderReturnApplyListData
	(*QueryOrderReturnApplyListResp)(nil),        // 87: omsclient.QueryOrderReturnApplyListResp
	(*AddOrderReturnReasonReq)(nil),              // 88: omsclient.AddOrderReturnReasonReq
	(*AddOrderReturnReasonResp)(nil),             // 89: omsclient.AddOrderReturnReasonResp
	(*DeleteOrderReturnReasonReq)(nil),           // 90: omsclient.DeleteOrderReturnReasonReq
	(*DeleteOrderReturnReasonResp)(nil),          // 91: omsclient.DeleteOrderReturnReasonResp
	(*UpdateOrderReturnReasonReq)(nil),           // 92: omsclient.UpdateOrderReturnReasonReq
	(*UpdateOrderReturnReasonResp)(nil),          // 93: omsclient.UpdateOrderReturnReasonResp
	(*UpdateOrderReturnReasonStatusReq)(nil),     // 94: omsclient.UpdateOrderReturnReasonStatusReq
	(*UpdateOrderReturnReasonStatusResp)(nil),    // 95: omsclient.UpdateOrderReturnReasonStatusResp
	(*QueryOrderReturnReasonDetailReq)(nil),      // 96: omsclient.QueryOrderReturnReasonDetailReq
	(*QueryOrderReturnReasonDetailResp)(nil),     // 97: omsclient.QueryOrderReturnReasonDetailResp
	(*QueryOrderReturnReasonListReq)(nil),        // 98: omsclient.QueryOrderReturnReasonListReq
	(*OrderReturnReasonListData)(nil),            // 99: omsclient.OrderReturnReasonListData
	(*QueryOrderReturnReasonListResp)(nil),       // 100: omsclient.QueryOrderReturnReasonListResp
	(*AddOrderSettingReq)(nil),                   // 101: omsclient.AddOrderSettingReq
	(*AddOrderSettingResp)(nil),                  // 102: omsclient.AddOrderSettingResp
	(*DeleteOrderSettingReq)(nil),                // 103: omsclient.DeleteOrderSettingReq
	(*DeleteOrderSettingResp)(nil),               // 104: omsclient.DeleteOrderSettingResp
	(*UpdateOrderSettingReq)(nil),                // 105: omsclient.UpdateOrderSettingReq
	(*UpdateOrderSettingResp)(nil),               // 106: omsclient.UpdateOrderSettingResp
	(*UpdateOrderSettingIsDefaultReq)(nil),       // 107: omsclient.UpdateOrderSettingIsDefaultReq
	(*UpdateOrderSettingStatusReq)(nil),          // 108: omsclient.UpdateOrderSettingStatusReq
	(*UpdateOrderSettingStatusResp)(nil),         // 109: omsclient.UpdateOrderSettingStatusResp
	(*QueryOrderSettingDetailReq)(nil),           // 110: omsclient.QueryOrderSettingDetailReq
	(*QueryOrderSettingDetailResp)(nil),          // 111: omsclient.QueryOrderSettingDetailResp
	(*QueryOrderSettingListReq)(nil),             // 112: omsclient.QueryOrderSettingListReq
	(*OrderSettingListData)(nil),                 // 113: omsclient.OrderSettingListData
	(*QueryOrderSettingListResp)(nil),            // 114: omsclient.QueryOrderSettingListResp
}
var file_rpc_oms_oms_proto_depIdxs = []int32{
	11,  // 0: omsclient.QueryCartItemListResp.list:type_name -> omsclient.CartItemListData
	25,  // 1: omsclient.QueryCompanyAddressListResp.list:type_name -> omsclient.CompanyAddressListData
	43,  // 2: omsclient.OrderDetailResp.data:type_name -> omsclient.OrderListData
	40,  // 3: omsclient.OrderAddReq.orderItemList:type_name -> omsclient.OrderItemData
	40,  // 4: omsclient.OrderListData.itemListData:type_name -> omsclient.OrderItemData
	44,  // 5: omsclient.OrderListData.historyListData:type_name -> omsclient.OrderOperateHistoryData
	43,  // 6: omsclient.OrderListResp.list:type_name -> omsclient.OrderListData
	43,  // 7: omsclient.OrderListByMemberIdResp.data:type_name -> omsclient.OrderListData
	54,  // 8: omsclient.OrderCancelResp.data:type_name -> omsclient.ReleaseSkuStockLockData
	68,  // 9: omsclient.QueryOrderItemListResp.list:type_name -> omsclient.OrderItemListData
	75,  // 10: omsclient.QueryOrderOperateHistoryListResp.list:type_name -> omsclient.OrderOperateHistoryListData
	86,  // 11: omsclient.QueryOrderReturnApplyListResp.list:type_name -> omsclient.OrderReturnApplyListData
	99,  // 12: omsclient.QueryOrderReturnReasonListResp.list:type_name -> omsclient.OrderReturnReasonListData
	113, // 13: omsclient.QueryOrderSettingListResp.list:type_name -> omsclient.OrderSettingListData
	0,   // 14: omsclient.CartItemService.AddCartItem:input_type -> omsclient.AddCartItemReq
	2,   // 15: omsclient.CartItemService.DeleteCartItem:input_type -> omsclient.DeleteCartItemReq
	4,   // 16: omsclient.CartItemService.UpdateCartItem:input_type -> omsclient.UpdateCartItemReq
	6,   // 17: omsclient.CartItemService.UpdateCartItemQuantity:input_type -> omsclient.UpdateCartItemQuantityReq
	8,   // 18: omsclient.CartItemService.QueryCartItemDetail:input_type -> omsclient.QueryCartItemDetailReq
	10,  // 19: omsclient.CartItemService.QueryCartItemList:input_type -> omsclient.QueryCartItemListReq
	13,  // 20: omsclient.CompanyAddressService.AddCompanyAddress:input_type -> omsclient.AddCompanyAddressReq
	15,  // 21: omsclient.CompanyAddressService.DeleteCompanyAddress:input_type -> omsclient.DeleteCompanyAddressReq
	17,  // 22: omsclient.CompanyAddressService.UpdateCompanyAddress:input_type -> omsclient.UpdateCompanyAddressReq
	19,  // 23: omsclient.CompanyAddressService.UpdateCompanyAddressReceiveStatus:input_type -> omsclient.UpdateCompanyAddressReceiveStatusReq
	20,  // 24: omsclient.CompanyAddressService.UpdateCompanyAddressSendStatus:input_type -> omsclient.UpdateCompanyAddressSendStatusReq
	22,  // 25: omsclient.CompanyAddressService.QueryCompanyAddressDetail:input_type -> omsclient.QueryCompanyAddressDetailReq
	24,  // 26: omsclient.CompanyAddressService.QueryCompanyAddressList:input_type -> omsclient.QueryCompanyAddressListReq
	27,  // 27: omsclient.OrderService.Delivery:input_type -> omsclient.DeliveryReq
	29,  // 28: omsclient.OrderService.CloseOrder:input_type -> omsclient.CloseOrderReq
	31,  // 29: omsclient.OrderService.OrderDetail:input_type -> omsclient.OrderDetailReq
	33,  // 30: omsclient.OrderService.UpdateReceiverInfo:input_type -> omsclient.UpdateReceiverInfoReq
	35,  // 31: omsclient.OrderService.UpdateMoneyInfo:input_type -> omsclient.UpdateMoneyInfoReq
	37,  // 32: omsclient.OrderService.UpdateNote:input_type -> omsclient.UpdateNoteReq
	42,  // 33: omsclient.OrderService.OrderList:input_type -> omsclient.OrderListReq
	49,  // 34: omsclient.OrderService.OrderDelete:input_type -> omsclient.OrderDeleteReq
	39,  // 35: omsclient.OrderService.OrderAdd:input_type -> omsclient.OrderAddReq
	46,  // 36: omsclient.OrderService.OrderUpdate:input_type -> omsclient.OrderUpdateReq
	51,  // 37: omsclient.OrderService.OrderListByMemberId:input_type -> omsclient.OrderListByMemberIdReq
	53,  // 38: omsclient.OrderService.OrderCancel:input_type -> omsclient.OrderCancelReq
	56,  // 39: omsclient.OrderService.OrderConfirm:input_type -> omsclient.OrderConfirmReq
	58,  // 40: omsclient.OrderService.OrderRefund:input_type -> omsclient.OrderRefundReq
	48,  // 41: omsclient.OrderService.OrderDeleteById:input_type -> omsclient.OrderDeleteByIdReq
	60,  // 42: omsclient.OrderService.QueryOrderList:input_type -> omsclient.QueryOrderListReq
	61,  // 43: omsclient.OrderService.UpdateOrderStatusByOutTradeNo:input_type -> omsclient.UpdateOrderStatusByOutTradeNoReq
	63,  // 44: omsclient.OrderItemService.AddOrderItem:input_type -> omsclient.AddOrderItemReq
	65,  // 45: omsclient.OrderItemService.QueryOrderItemDetail:input_type -> omsclient.QueryOrderItemDetailReq
	67,  // 46: omsclient.OrderItemService.QueryOrderItemList:input_type -> omsclient.QueryOrderItemListReq
	70,  // 47: omsclient.OrderOperateHistoryService.AddOrderOperateHistory:input_type -> omsclient.AddOrderOperateHistoryReq
	72,  // 48: omsclient.OrderOperateHistoryService.DeleteOrderOperateHistory:input_type -> omsclient.DeleteOrderOperateHistoryReq
	74,  // 49: omsclient.OrderOperateHistoryService.QueryOrderOperateHistoryList:input_type -> omsclient.QueryOrderOperateHistoryListReq
	77,  // 50: omsclient.OrderReturnApplyService.AddOrderReturnApply:input_type -> omsclient.AddOrderReturnApplyReq
	79,  // 51: omsclient.OrderReturnApplyService.DeleteOrderReturnApply:input_type -> omsclient.DeleteOrderReturnApplyReq
	81,  // 52: omsclient.OrderReturnApplyService.UpdateOrderReturnApply:input_type -> omsclient.UpdateOrderReturnApplyReq
	83,  // 53: omsclient.OrderReturnApplyService.QueryOrderReturnApplyDetail:input_type -> omsclient.QueryOrderReturnApplyDetailReq
	85,  // 54: omsclient.OrderReturnApplyService.QueryOrderReturnApplyList:input_type -> omsclient.QueryOrderReturnApplyListReq
	88,  // 55: omsclient.OrderReturnReasonService.AddOrderReturnReason:input_type -> omsclient.AddOrderReturnReasonReq
	90,  // 56: omsclient.OrderReturnReasonService.DeleteOrderReturnReason:input_type -> omsclient.DeleteOrderReturnReasonReq
	92,  // 57: omsclient.OrderReturnReasonService.UpdateOrderReturnReason:input_type -> omsclient.UpdateOrderReturnReasonReq
	94,  // 58: omsclient.OrderReturnReasonService.UpdateOrderReturnReasonStatus:input_type -> omsclient.UpdateOrderReturnReasonStatusReq
	96,  // 59: omsclient.OrderReturnReasonService.QueryOrderReturnReasonDetail:input_type -> omsclient.QueryOrderReturnReasonDetailReq
	98,  // 60: omsclient.OrderReturnReasonService.QueryOrderReturnReasonList:input_type -> omsclient.QueryOrderReturnReasonListReq
	101, // 61: omsclient.OrderSettingService.AddOrderSetting:input_type -> omsclient.AddOrderSettingReq
	103, // 62: omsclient.OrderSettingService.DeleteOrderSetting:input_type -> omsclient.DeleteOrderSettingReq
	105, // 63: omsclient.OrderSettingService.UpdateOrderSetting:input_type -> omsclient.UpdateOrderSettingReq
	107, // 64: omsclient.OrderSettingService.UpdateOrderSettingIsDefault:input_type -> omsclient.UpdateOrderSettingIsDefaultReq
	108, // 65: omsclient.OrderSettingService.UpdateOrderSettingStatus:input_type -> omsclient.UpdateOrderSettingStatusReq
	110, // 66: omsclient.OrderSettingService.QueryOrderSettingDetail:input_type -> omsclient.QueryOrderSettingDetailReq
	112, // 67: omsclient.OrderSettingService.QueryOrderSettingList:input_type -> omsclient.QueryOrderSettingListReq
	1,   // 68: omsclient.CartItemService.AddCartItem:output_type -> omsclient.AddCartItemResp
	3,   // 69: omsclient.CartItemService.DeleteCartItem:output_type -> omsclient.DeleteCartItemResp
	5,   // 70: omsclient.CartItemService.UpdateCartItem:output_type -> omsclient.UpdateCartItemResp
	7,   // 71: omsclient.CartItemService.UpdateCartItemQuantity:output_type -> omsclient.UpdateCartItemQuantityResp
	9,   // 72: omsclient.CartItemService.QueryCartItemDetail:output_type -> omsclient.QueryCartItemDetailResp
	12,  // 73: omsclient.CartItemService.QueryCartItemList:output_type -> omsclient.QueryCartItemListResp
	14,  // 74: omsclient.CompanyAddressService.AddCompanyAddress:output_type -> omsclient.AddCompanyAddressResp
	16,  // 75: omsclient.CompanyAddressService.DeleteCompanyAddress:output_type -> omsclient.DeleteCompanyAddressResp
	18,  // 76: omsclient.CompanyAddressService.UpdateCompanyAddress:output_type -> omsclient.UpdateCompanyAddressResp
	21,  // 77: omsclient.CompanyAddressService.UpdateCompanyAddressReceiveStatus:output_type -> omsclient.UpdateCompanyAddressStatusResp
	21,  // 78: omsclient.CompanyAddressService.UpdateCompanyAddressSendStatus:output_type -> omsclient.UpdateCompanyAddressStatusResp
	23,  // 79: omsclient.CompanyAddressService.QueryCompanyAddressDetail:output_type -> omsclient.QueryCompanyAddressDetailResp
	26,  // 80: omsclient.CompanyAddressService.QueryCompanyAddressList:output_type -> omsclient.QueryCompanyAddressListResp
	28,  // 81: omsclient.OrderService.Delivery:output_type -> omsclient.DeliveryResp
	30,  // 82: omsclient.OrderService.CloseOrder:output_type -> omsclient.CloseOrderResp
	32,  // 83: omsclient.OrderService.OrderDetail:output_type -> omsclient.OrderDetailResp
	34,  // 84: omsclient.OrderService.UpdateReceiverInfo:output_type -> omsclient.UpdateReceiverInfoResp
	36,  // 85: omsclient.OrderService.UpdateMoneyInfo:output_type -> omsclient.UpdateMoneyInfoResp
	38,  // 86: omsclient.OrderService.UpdateNote:output_type -> omsclient.UpdateNoteResp
	45,  // 87: omsclient.OrderService.OrderList:output_type -> omsclient.OrderListResp
	50,  // 88: omsclient.OrderService.OrderDelete:output_type -> omsclient.OrderDeleteResp
	41,  // 89: omsclient.OrderService.OrderAdd:output_type -> omsclient.OrderAddResp
	47,  // 90: omsclient.OrderService.OrderUpdate:output_type -> omsclient.OrderUpdateResp
	52,  // 91: omsclient.OrderService.OrderListByMemberId:output_type -> omsclient.OrderListByMemberIdResp
	55,  // 92: omsclient.OrderService.OrderCancel:output_type -> omsclient.OrderCancelResp
	57,  // 93: omsclient.OrderService.OrderConfirm:output_type -> omsclient.OrderConfirmResp
	59,  // 94: omsclient.OrderService.OrderRefund:output_type -> omsclient.OrderRefundResp
	50,  // 95: omsclient.OrderService.OrderDeleteById:output_type -> omsclient.OrderDeleteResp
	45,  // 96: omsclient.OrderService.QueryOrderList:output_type -> omsclient.OrderListResp
	62,  // 97: omsclient.OrderService.UpdateOrderStatusByOutTradeNo:output_type -> omsclient.UpdateOrderStatusByOutTradeNoResp
	64,  // 98: omsclient.OrderItemService.AddOrderItem:output_type -> omsclient.AddOrderItemResp
	66,  // 99: omsclient.OrderItemService.QueryOrderItemDetail:output_type -> omsclient.QueryOrderItemDetailResp
	69,  // 100: omsclient.OrderItemService.QueryOrderItemList:output_type -> omsclient.QueryOrderItemListResp
	71,  // 101: omsclient.OrderOperateHistoryService.AddOrderOperateHistory:output_type -> omsclient.AddOrderOperateHistoryResp
	73,  // 102: omsclient.OrderOperateHistoryService.DeleteOrderOperateHistory:output_type -> omsclient.DeleteOrderOperateHistoryResp
	76,  // 103: omsclient.OrderOperateHistoryService.QueryOrderOperateHistoryList:output_type -> omsclient.QueryOrderOperateHistoryListResp
	78,  // 104: omsclient.OrderReturnApplyService.AddOrderReturnApply:output_type -> omsclient.AddOrderReturnApplyResp
	80,  // 105: omsclient.OrderReturnApplyService.DeleteOrderReturnApply:output_type -> omsclient.DeleteOrderReturnApplyResp
	82,  // 106: omsclient.OrderReturnApplyService.UpdateOrderReturnApply:output_type -> omsclient.UpdateOrderReturnApplyResp
	84,  // 107: omsclient.OrderReturnApplyService.QueryOrderReturnApplyDetail:output_type -> omsclient.QueryOrderReturnApplyDetailResp
	87,  // 108: omsclient.OrderReturnApplyService.QueryOrderReturnApplyList:output_type -> omsclient.QueryOrderReturnApplyListResp
	89,  // 109: omsclient.OrderReturnReasonService.AddOrderReturnReason:output_type -> omsclient.AddOrderReturnReasonResp
	91,  // 110: omsclient.OrderReturnReasonService.DeleteOrderReturnReason:output_type -> omsclient.DeleteOrderReturnReasonResp
	93,  // 111: omsclient.OrderReturnReasonService.UpdateOrderReturnReason:output_type -> omsclient.UpdateOrderReturnReasonResp
	95,  // 112: omsclient.OrderReturnReasonService.UpdateOrderReturnReasonStatus:output_type -> omsclient.UpdateOrderReturnReasonStatusResp
	97,  // 113: omsclient.OrderReturnReasonService.QueryOrderReturnReasonDetail:output_type -> omsclient.QueryOrderReturnReasonDetailResp
	100, // 114: omsclient.OrderReturnReasonService.QueryOrderReturnReasonList:output_type -> omsclient.QueryOrderReturnReasonListResp
	102, // 115: omsclient.OrderSettingService.AddOrderSetting:output_type -> omsclient.AddOrderSettingResp
	104, // 116: omsclient.OrderSettingService.DeleteOrderSetting:output_type -> omsclient.DeleteOrderSettingResp
	106, // 117: omsclient.OrderSettingService.UpdateOrderSetting:output_type -> omsclient.UpdateOrderSettingResp
	109, // 118: omsclient.OrderSettingService.UpdateOrderSettingIsDefault:output_type -> omsclient.UpdateOrderSettingStatusResp
	109, // 119: omsclient.OrderSettingService.UpdateOrderSettingStatus:output_type -> omsclient.UpdateOrderSettingStatusResp
	111, // 120: omsclient.OrderSettingService.QueryOrderSettingDetail:output_type -> omsclient.QueryOrderSettingDetailResp
	114, // 121: omsclient.OrderSettingService.QueryOrderSettingList:output_type -> omsclient.QueryOrderSettingListResp
	68,  // [68:122] is the sub-list for method output_type
	14,  // [14:68] is the sub-list for method input_type
	14,  // [14:14] is the sub-list for extension type_name
	14,  // [14:14] is the sub-list for extension extendee
	0,   // [0:14] is the sub-list for field type_name
}

func init() { file_rpc_oms_oms_proto_init() }
func file_rpc_oms_oms_proto_init() {
	if File_rpc_oms_oms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_oms_oms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCartItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCartItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemQuantityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemQuantityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItemListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressReceiveStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressSendStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAddressListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReceiverInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReceiverInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMoneyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMoneyInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOperateHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeleteByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListByMemberIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListByMemberIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSkuStockLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStatusByOutTradeNoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStatusByOutTradeNoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderItemDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderItemDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderItemListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderOperateHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderOperateHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderOperateHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderOperateHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderOperateHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOperateHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderOperateHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnApplyDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnApplyDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnApplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnApplyListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnApplyListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnReasonListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingIsDefaultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_oms_oms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_rpc_oms_oms_proto_goTypes,
		DependencyIndexes: file_rpc_oms_oms_proto_depIdxs,
		MessageInfos:      file_rpc_oms_oms_proto_msgTypes,
	}.Build()
	File_rpc_oms_oms_proto = out.File
	file_rpc_oms_oms_proto_rawDesc = nil
	file_rpc_oms_oms_proto_goTypes = nil
	file_rpc_oms_oms_proto_depIdxs = nil
}

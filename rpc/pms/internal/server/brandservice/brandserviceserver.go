// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/brandservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type BrandServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedBrandServiceServer
}

func NewBrandServiceServer(svcCtx *svc.ServiceContext) *BrandServiceServer {
	return &BrandServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加品牌表
func (s *BrandServiceServer) AddBrand(ctx context.Context, in *pmsclient.AddBrandReq) (*pmsclient.AddBrandResp, error) {
	l := brandservicelogic.NewAddBrandLogic(ctx, s.svcCtx)
	return l.AddBrand(in)
}

// 删除品牌表
func (s *BrandServiceServer) DeleteBrand(ctx context.Context, in *pmsclient.DeleteBrandReq) (*pmsclient.DeleteBrandResp, error) {
	l := brandservicelogic.NewDeleteBrandLogic(ctx, s.svcCtx)
	return l.DeleteBrand(in)
}

// 更新品牌表
func (s *BrandServiceServer) UpdateBrand(ctx context.Context, in *pmsclient.UpdateBrandReq) (*pmsclient.UpdateBrandResp, error) {
	l := brandservicelogic.NewUpdateBrandLogic(ctx, s.svcCtx)
	return l.UpdateBrand(in)
}

// 查询品牌表详情
func (s *BrandServiceServer) QueryBrandDetail(ctx context.Context, in *pmsclient.QueryBrandDetailReq) (*pmsclient.QueryBrandDetailResp, error) {
	l := brandservicelogic.NewQueryBrandDetailLogic(ctx, s.svcCtx)
	return l.QueryBrandDetail(in)
}

// 查询品牌表列表
func (s *BrandServiceServer) QueryBrandList(ctx context.Context, in *pmsclient.QueryBrandListReq) (*pmsclient.QueryBrandListResp, error) {
	l := brandservicelogic.NewQueryBrandListLogic(ctx, s.svcCtx)
	return l.QueryBrandList(in)
}

func (s *BrandServiceServer) QueryBrandListByIds(ctx context.Context, in *pmsclient.QueryBrandListByIdsReq) (*pmsclient.QueryBrandListResp, error) {
	l := brandservicelogic.NewQueryBrandListByIdsLogic(ctx, s.svcCtx)
	return l.QueryBrandListByIds(in)
}

// 更新品牌的显示状态
func (s *BrandServiceServer) UpdateBrandShowStatus(ctx context.Context, in *pmsclient.UpdateBrandShowStatusReq) (*pmsclient.UpdateBrandStatusResp, error) {
	l := brandservicelogic.NewUpdateBrandShowStatusLogic(ctx, s.svcCtx)
	return l.UpdateBrandShowStatus(in)
}

// 更新品牌是否为品牌制造商
func (s *BrandServiceServer) UpdateBrandFactoryStatus(ctx context.Context, in *pmsclient.UpdateBrandFactoryStatusReq) (*pmsclient.UpdateBrandStatusResp, error) {
	l := brandservicelogic.NewUpdateBrandFactoryStatusLogic(ctx, s.svcCtx)
	return l.UpdateBrandFactoryStatus(in)
}

// 更新品牌的推荐状态
func (s *BrandServiceServer) UpdateBrandRecommendStatus(ctx context.Context, in *pmsclient.UpdateBrandRecommendStatusReq) (*pmsclient.UpdateBrandStatusResp, error) {
	l := brandservicelogic.NewUpdateBrandRecommendStatusLogic(ctx, s.svcCtx)
	return l.UpdateBrandRecommendStatus(in)
}

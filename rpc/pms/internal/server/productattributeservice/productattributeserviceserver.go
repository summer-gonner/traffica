// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/productattributeservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type ProductAttributeServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedProductAttributeServiceServer
}

func NewProductAttributeServiceServer(svcCtx *svc.ServiceContext) *ProductAttributeServiceServer {
	return &ProductAttributeServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加商品属性参数表
func (s *ProductAttributeServiceServer) AddProductAttribute(ctx context.Context, in *pmsclient.AddProductAttributeReq) (*pmsclient.AddProductAttributeResp, error) {
	l := productattributeservicelogic.NewAddProductAttributeLogic(ctx, s.svcCtx)
	return l.AddProductAttribute(in)
}

// 删除商品属性参数表
func (s *ProductAttributeServiceServer) DeleteProductAttribute(ctx context.Context, in *pmsclient.DeleteProductAttributeReq) (*pmsclient.DeleteProductAttributeResp, error) {
	l := productattributeservicelogic.NewDeleteProductAttributeLogic(ctx, s.svcCtx)
	return l.DeleteProductAttribute(in)
}

// 查询商品属性参数表列表
func (s *ProductAttributeServiceServer) QueryProductAttributeList(ctx context.Context, in *pmsclient.QueryProductAttributeListReq) (*pmsclient.QueryProductAttributeListResp, error) {
	l := productattributeservicelogic.NewQueryProductAttributeListLogic(ctx, s.svcCtx)
	return l.QueryProductAttributeList(in)
}

// 根据商品分类的id获取商品属性及属性分类
func (s *ProductAttributeServiceServer) QueryByproductCategoryId(ctx context.Context, in *pmsclient.QueryByproductCategoryIdReq) (*pmsclient.QueryByproductCategoryIdResp, error) {
	l := productattributeservicelogic.NewQueryByproductCategoryIdLogic(ctx, s.svcCtx)
	return l.QueryByproductCategoryId(in)
}

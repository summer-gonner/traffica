syntax = "proto3";

package pmsclient;

option go_package = "./pmsclient";

// 添加品牌表
message AddBrandReq {
  string big_pic = 1; //专区大图
  string brand_story = 2; //品牌故事
  string create_by = 3; //创建者
  int32 sort = 4; //排序
  int32 factory_status = 5; //是否为品牌制造商：0->不是；1->是
  string first_letter = 6; //首字母
  int32 show_status = 7; //品牌显示状态
  string logo = 8; //品牌logo
  string name = 9; //品牌名称
  int32 product_comment_count = 10; //产品评论数量
  int32 product_count = 11; //产品数量
  int32 recommend_status = 12; //推荐状态

}

message AddBrandResp {
  string pong = 1;
}

// 删除品牌表
message DeleteBrandReq {
  repeated int64 ids = 1;
}

message DeleteBrandResp {
  string pong = 1;
}

// 更新品牌表
message UpdateBrandReq {
  string big_pic = 1; //专区大图
  string brand_story = 2; //品牌故事
  int32 sort = 3; //排序
  string update_by = 4; //更新者
  int32 factory_status = 5; //是否为品牌制造商：0->不是；1->是
  string first_letter = 6; //首字母
  int64 id = 7; //
  string logo = 8; //品牌logo
  string name = 9; //品牌名称
  int32 product_comment_count = 10; //产品评论数量
  int32 product_count = 11; //产品数量
  int32 recommend_status = 12; //推荐状态
  int32 show_status = 13; //品牌显示状态


}

message UpdateBrandResp {
  string pong = 1;
}



// 查询品牌表详情
message QueryBrandDetailReq {
    int64 id = 1;
}

message QueryBrandDetailResp {
  string big_pic = 1; //专区大图
  string brand_story = 2; //品牌故事
  string create_by = 3; //创建者
  string create_time = 4; //创建时间
  int32 factory_status = 5; //是否为品牌制造商：0->不是；1->是
  string first_letter = 6; //首字母
  int64 id = 7; //
  string logo = 8; //品牌logo
  string name = 9; //品牌名称
  int32 product_comment_count = 10; //产品评论数量
  int32 product_count = 11; //产品数量
  int32 recommend_status = 12; //推荐状态
  int32 show_status = 13; //品牌显示状态
  int32 sort = 14; //排序
  string update_by = 15; //更新者
  string update_time = 16; //更新时间

}

// 分页查询品牌表列表
message QueryBrandListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  int32 factory_status = 3; //是否为品牌制造商：0->不是；1->是
  int32 recommend_status = 4; //推荐状态
  int32 show_status = 5; //品牌显示状态
  string name = 6; //品牌名称
}

message BrandListData {
  string big_pic = 1; //专区大图
  string brand_story = 2; //品牌故事
  string create_by = 3; //创建者
  string create_time = 4; //创建时间
  int32 factory_status = 5; //是否为品牌制造商：0->不是；1->是
  string first_letter = 6; //首字母
  int64 id = 7; //
  string logo = 8; //品牌logo
  string name = 9; //品牌名称
  int32 product_comment_count = 10; //产品评论数量
  int32 product_count = 11; //产品数量
  int32 recommend_status = 12; //推荐状态
  int32 show_status = 13; //品牌显示状态
  int32 sort = 14; //排序
  string update_by = 15; //更新者
  string update_time = 16; //更新时间

}

message QueryBrandListResp {
  int64 total = 1;
  repeated  BrandListData list = 2;
}

message QueryBrandListByIdsReq {
  repeated int64 ids = 1;
}
message UpdateBrandShowStatusReq {
  repeated int64    Ids = 1;
  int32    ShowStatus = 2;
}


message UpdateBrandFactoryStatusReq {
  repeated int64    Ids = 1;
  int32    FactoryStatus = 2;
}

message UpdateBrandRecommendStatusReq {
  repeated int64    Ids = 1;
  int32    RecommendStatus = 2;
}

message UpdateBrandStatusResp {
  string pong = 1;
}

// 品牌表
service BrandService {
  // 添加品牌表
  rpc AddBrand(AddBrandReq) returns (AddBrandResp){}
  // 删除品牌表
  rpc DeleteBrand(DeleteBrandReq) returns (DeleteBrandResp){}
  // 更新品牌表
  rpc UpdateBrand(UpdateBrandReq) returns (UpdateBrandResp ){}
  // 查询品牌表详情
   rpc QueryBrandDetail(QueryBrandDetailReq) returns (QueryBrandDetailResp){}
  // 查询品牌表列表
  rpc QueryBrandList(QueryBrandListReq) returns (QueryBrandListResp){}

  rpc QueryBrandListByIds(QueryBrandListByIdsReq) returns(QueryBrandListResp);
  //更新品牌的显示状态
  rpc UpdateBrandShowStatus(UpdateBrandShowStatusReq) returns(UpdateBrandStatusResp);
  //更新品牌是否为品牌制造商
  rpc UpdateBrandFactoryStatus(UpdateBrandFactoryStatusReq) returns(UpdateBrandStatusResp);
  //更新品牌的推荐状态
  rpc UpdateBrandRecommendStatus(UpdateBrandRecommendStatusReq) returns(UpdateBrandStatusResp);

}


// 添加商品评价表
message AddCommentReq {
  int32 collect_count = 1; //
  string content = 2; //
  int32 star = 3; //评价星数：0->5
  int32 show_status = 4; //
  string member_icon = 5; //评论用户头像
  string member_ip = 6; //评价的ip
  string member_nick_name = 7; //
  string pics = 8; //上传图片地址，以逗号隔开
  string product_attribute = 9; //购买时的商品属性
  int64 product_id = 10; //
  string product_name = 11; //
  int32 read_count = 12; //
  int32 replay_count = 13; //


}

message AddCommentResp {
  string pong = 1;
}

// 删除商品评价表
message DeleteCommentReq {
  repeated int64 ids = 1;
}

message DeleteCommentResp {
  string pong = 1;
}

// 更新商品评价表
message UpdateCommentReq {
  int32 collect_count = 1; //
  string content = 2; //
  int32 star = 3; //评价星数：0->5
  int64 id = 4; //
  string member_icon = 5; //评论用户头像
  string member_ip = 6; //评价的ip
  string member_nick_name = 7; //
  string pics = 8; //上传图片地址，以逗号隔开
  string product_attribute = 9; //购买时的商品属性
  int64 product_id = 10; //
  string product_name = 11; //
  int32 read_count = 12; //
  int32 replay_count = 13; //
  int32 show_status = 14; //


}

message UpdateCommentResp {
  string pong = 1;
}


// 查询商品评价表详情
message QueryCommentDetailReq {
    int64 id = 1;
}

message QueryCommentDetailResp {
  int32 collect_count = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //评论用户头像
  string member_ip = 6; //评价的ip
  string member_nick_name = 7; //
  string pics = 8; //上传图片地址，以逗号隔开
  string product_attribute = 9; //购买时的商品属性
  int64 product_id = 10; //
  string product_name = 11; //
  int32 read_count = 12; //
  int32 replay_count = 13; //
  int32 show_status = 14; //
  int32 star = 15; //评价星数：0->5

}

// 分页查询商品评价表列表
message QueryCommentListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  int64 product_id = 3; //


}

message CommentListData {
  int32 collect_count = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //评论用户头像
  string member_ip = 6; //评价的ip
  string member_nick_name = 7; //
  string pics = 8; //上传图片地址，以逗号隔开
  string product_attribute = 9; //购买时的商品属性
  int64 product_id = 10; //
  string product_name = 11; //
  int32 read_count = 12; //
  int32 replay_count = 13; //
  int32 show_status = 14; //
  int32 star = 15; //评价星数：0->5

}

message QueryCommentListResp {
  int64 total = 1;
  repeated  CommentListData list = 2;
}

// 商品评价表
service CommentService {
  // 添加商品评价表
  rpc AddComment(AddCommentReq) returns (AddCommentResp){}
  // 删除商品评价表
  rpc DeleteComment(DeleteCommentReq) returns (DeleteCommentResp){}
  // 更新商品评价表
  rpc UpdateComment(UpdateCommentReq) returns (UpdateCommentResp ){}
  // 查询商品评价表详情
   rpc QueryCommentDetail(QueryCommentDetailReq) returns (QueryCommentDetailResp){}
  // 查询商品评价表列表
  rpc QueryCommentList(QueryCommentListReq) returns (QueryCommentListResp){}


}


// 添加产品评价回复表
message AddCommentReplayReq {
  int64 comment_id = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //
  string member_nick_name = 6; //
  int32 type = 7; //评论人员类型；0->会员；1->管理员

}

message AddCommentReplayResp {
  string pong = 1;
}

// 删除产品评价回复表
message DeleteCommentReplayReq {
  repeated int64 ids = 1;
}

message DeleteCommentReplayResp {
  string pong = 1;
}

// 更新产品评价回复表
message UpdateCommentReplayReq {
  int64 comment_id = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //
  string member_nick_name = 6; //
  int32 type = 7; //评论人员类型；0->会员；1->管理员

}

message UpdateCommentReplayResp {
  string pong = 1;
}
// 查询产品评价回复表详情
message QueryCommentReplayDetailReq {
    int64 id = 1;
}

message QueryCommentReplayDetailResp {
  int64 comment_id = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //
  string member_nick_name = 6; //
  int32 type = 7; //评论人员类型；0->会员；1->管理员

}

// 分页查询产品评价回复表列表
message QueryCommentReplayListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  int64 comment_id = 3; //

}

message CommentReplayListData {
  int64 comment_id = 1; //
  string content = 2; //
  string create_time = 3; //
  int64 id = 4; //
  string member_icon = 5; //
  string member_nick_name = 6; //
  int32 type = 7; //评论人员类型；0->会员；1->管理员

}

message QueryCommentReplayListResp {
  int64 total = 1;
  repeated  CommentReplayListData list = 2;
}

// 产品评价回复表
service CommentReplayService {
  // 添加产品评价回复表
  rpc AddCommentReplay(AddCommentReplayReq) returns (AddCommentReplayResp){}
  // 删除产品评价回复表
  rpc DeleteCommentReplay(DeleteCommentReplayReq) returns (DeleteCommentReplayResp){}
  // 更新产品评价回复表
  rpc UpdateCommentReplay(UpdateCommentReplayReq) returns (UpdateCommentReplayResp ){}
  // 查询产品评价回复表详情
   rpc QueryCommentReplayDetail(QueryCommentReplayDetailReq) returns (QueryCommentReplayDetailResp){}
  // 查询产品评价回复表列表
  rpc QueryCommentReplayList(QueryCommentReplayListReq) returns (QueryCommentReplayListResp){}


}


// 添加运费模版
message AddFeightTemplateReq {
  int32 charge_type = 1; //计费类型:0->按重量；1->按件数
  int64 continue_fee = 2; //
  int64 continue_weight = 3; //
  string dest = 4; //目的地（省、市）
  int64 first_fee = 5; //首费（元）
  int64 first_weight = 6; //首重kg
  int64 id = 7; //
  string name = 8; //运费模版名称

}

message AddFeightTemplateResp {
  string pong = 1;
}

// 删除运费模版
message DeleteFeightTemplateReq {
  repeated int64 ids = 1;
}

message DeleteFeightTemplateResp {
  string pong = 1;
}

// 更新运费模版
message UpdateFeightTemplateReq {
  int32 charge_type = 1; //计费类型:0->按重量；1->按件数
  int64 continue_fee = 2; //
  int64 continue_weight = 3; //
  string dest = 4; //目的地（省、市）
  int64 first_fee = 5; //首费（元）
  int64 first_weight = 6; //首重kg
  int64 id = 7; //
  string name = 8; //运费模版名称

}

message UpdateFeightTemplateResp {
  string pong = 1;
}


// 查询运费模版详情
message QueryFeightTemplateDetailReq {
    int64 id = 1;
}

message QueryFeightTemplateDetailResp {
  int32 charge_type = 1; //计费类型:0->按重量；1->按件数
  int64 continue_fee = 2; //
  int64 continue_weight = 3; //
  string dest = 4; //目的地（省、市）
  int64 first_fee = 5; //首费（元）
  int64 first_weight = 6; //首重kg
  int64 id = 7; //
  string name = 8; //运费模版名称

}

// 分页查询运费模版列表
message QueryFeightTemplateListReq {
 int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
}

message FeightTemplateListData {
  int32 charge_type = 1; //计费类型:0->按重量；1->按件数
  int64 continue_fee = 2; //
  int64 continue_weight = 3; //
  string dest = 4; //目的地（省、市）
  int64 first_fee = 5; //首费（元）
  int64 first_weight = 6; //首重kg
  int64 id = 7; //
  string name = 8; //运费模版名称

}

message QueryFeightTemplateListResp {
  int64 total = 1;
  repeated  FeightTemplateListData list = 2;
}

// 运费模版
service FeightTemplateService {
  // 添加运费模版
  rpc AddFeightTemplate(AddFeightTemplateReq) returns (AddFeightTemplateResp){}
  // 删除运费模版
  rpc DeleteFeightTemplate(DeleteFeightTemplateReq) returns (DeleteFeightTemplateResp){}
  // 更新运费模版
  rpc UpdateFeightTemplate(UpdateFeightTemplateReq) returns (UpdateFeightTemplateResp ){}
  // 查询运费模版详情
   rpc QueryFeightTemplateDetail(QueryFeightTemplateDetailReq) returns (QueryFeightTemplateDetailResp){}
  // 查询运费模版列表
  rpc QueryFeightTemplateList(QueryFeightTemplateListReq) returns (QueryFeightTemplateListResp){}


}



message MemberPriceList {
  int64    MemberLevelId = 1;
  int64  MemberPrice = 2;
  string    MemberLevelName = 3;
}
message ProductAttributeValueList {
  int64    ProductAttributeId = 1;
  string  AttributeValues = 2;
}
message ProductFullReductionList {
  int64  FullPrice = 1;
  int64  ReducePrice = 2;
}
message ProductLadderList {
  int32    Count = 2;
  int64  Discount = 3;
  int64  Price = 4;
}
message SkuStockList {
  string    SkuCode = 1;
  int64  Price = 2;
  int32    Stock = 3;
  int32    LowStock = 4;
  string    Pic = 5;
  int32    Sale = 6;
  int64  PromotionPrice = 7;
  int32    LockStock = 8;
  string    SpData = 9;
}
message AddProductReq {
  string album_pics = 1; //画册图片，连产品图片限制为5张，以逗号分割
  int64 brand_id = 2; //品牌id
  string brand_name = 3; //品牌名称
  int32 delete_status = 4; //删除状态：0->未删除；1->已删除
  string description = 5; //商品描述
  string detail_desc = 6; //详情描述
  string detail_html = 7; //产品详情网页内容
  string detail_mobile_html = 8; //移动端网页详情
  string detail_title = 9; //详情标题
  int64 feight_template_id = 10; //商品运费模板id
  int32 gift_growth = 11; //赠送的成长值
  int32 gift_point = 12; //赠送的积分
  int64 weight = 13; //商品重量，默认为克
  string keywords = 14; //搜索关键字
  int32 low_stock = 15; //库存预警值
  string name = 16; //商品名称
  int32 new_status = 17; //新品状态:0->不是新品；1->新品
  string note = 18; //备注
  int64 original_price = 19; //市场价
  string pic = 20; //商品图片
  int32 preview_status = 21; //是否为预告商品：0->不是；1->是
  int64 price = 22; //商品价格
  int64 product_attribute_category_id = 23; //商品属性分类id
  int64 product_category_id = 24; //商品分类id
  string product_category_id_array = 25; //商品分类id字符串
  string product_category_name = 26; //商品分类名称
  string product_sn = 27; //货号
  string promotion_end_time = 28; //促销结束时间
  int32 promotion_per_limit = 29; //活动限购数量
  int64 promotion_price = 30; //促销价格
  string promotion_start_time = 31; //促销开始时间
  int32 promotion_type = 32; //促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
  int32 publish_status = 33; //上架状态：0->下架；1->上架
  int32 recommand_status = 34; //推荐状态；0->不推荐；1->推荐
  int32 sale = 35; //销量
  string service_ids = 36; //以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
  int32 sort = 37; //排序
  int32 stock = 38; //库存
  string sub_title = 39; //副标题
  string unit = 40; //单位
  int32 use_point_limit = 41; //限制使用的积分数
  int32 verify_status = 42; //审核状态：0->未审核；1->审核通过
  repeated MemberPriceList      MemberPriceList = 43;
  repeated ProductAttributeValueList      ProductAttributeValueList = 44;
  repeated ProductFullReductionList      ProductFullReductionList = 45;
  repeated ProductLadderList      ProductLadderList = 46;
  repeated SkuStockList      SkuStockList = 47;
}

message AddProductResp {
  int64 productId = 1;
}

message QueryProductListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string Name = 3;
  int32  VerifyStatus = 4;
  int64  ProductCategoryId = 5;
  int32       PublishStatus = 6;
  int32       DeleteStatus = 7;
  int64       BrandId = 8;
  string ProductSn = 9;
}

message QueryProductByIdsReq {
  repeated int64  Ids = 1;
}

message ProductListData{
  string album_pics = 1; //画册图片，连产品图片限制为5张，以逗号分割
  int64 brand_id = 2; //品牌id
  string brand_name = 3; //品牌名称
  int32 delete_status = 4; //删除状态：0->未删除；1->已删除
  string description = 5; //商品描述
  string detail_desc = 6; //详情描述
  string detail_html = 7; //产品详情网页内容
  string detail_mobile_html = 8; //移动端网页详情
  string detail_title = 9; //详情标题
  int64 feight_template_id = 10; //商品运费模板id
  int32 gift_growth = 11; //赠送的成长值
  int32 gift_point = 12; //赠送的积分
  int64 id = 13; //
  string keywords = 14; //搜索关键字
  int32 low_stock = 15; //库存预警值
  string name = 16; //商品名称
  int32 new_status = 17; //新品状态:0->不是新品；1->新品
  string note = 18; //备注
  int64 original_price = 19; //市场价
  string pic = 20; //商品图片
  int32 preview_status = 21; //是否为预告商品：0->不是；1->是
  int64 price = 22; //商品价格
  int64 product_attribute_category_id = 23; //商品属性分类id
  int64 product_category_id = 24; //商品分类id
  string product_category_id_array = 25; //商品分类id字符串
  string product_category_name = 26; //商品分类名称
  string product_sn = 27; //货号
  string promotion_end_time = 28; //促销结束时间
  int32 promotion_per_limit = 29; //活动限购数量
  int64 promotion_price = 30; //促销价格
  string promotion_start_time = 31; //促销开始时间
  int32 promotion_type = 32; //促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
  int32 publish_status = 33; //上架状态：0->下架；1->上架
  int32 recommand_status = 34; //推荐状态；0->不推荐；1->推荐
  int32 sale = 35; //销量
  string service_ids = 36; //以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
  int32 sort = 37; //排序
  int32 stock = 38; //库存
  string sub_title = 39; //副标题
  string unit = 40; //单位
  int32 use_point_limit = 41; //限制使用的积分数
  int32 verify_status = 42; //审核状态：0->未审核；1->审核通过
  int64 weight = 43; //商品重量，默认为克

}

message QueryProductListResp {
  int64 total = 1;
  repeated  ProductListData list = 2;
}

message UpdateProductReq {
  string album_pics = 1; //画册图片，连产品图片限制为5张，以逗号分割
  int64 brand_id = 2; //品牌id
  string brand_name = 3; //品牌名称
  int32 delete_status = 4; //删除状态：0->未删除；1->已删除
  string description = 5; //商品描述
  string detail_desc = 6; //详情描述
  string detail_html = 7; //产品详情网页内容
  string detail_mobile_html = 8; //移动端网页详情
  string detail_title = 9; //详情标题
  int64 feight_template_id = 10; //商品运费模板id
  int32 gift_growth = 11; //赠送的成长值
  int32 gift_point = 12; //赠送的积分
  int64 id = 13; //
  string keywords = 14; //搜索关键字
  int32 low_stock = 15; //库存预警值
  string name = 16; //商品名称
  int32 new_status = 17; //新品状态:0->不是新品；1->新品
  string note = 18; //备注
  int64 original_price = 19; //市场价
  string pic = 20; //商品图片
  int32 preview_status = 21; //是否为预告商品：0->不是；1->是
  int64 price = 22; //商品价格
  int64 product_attribute_category_id = 23; //商品属性分类id
  int64 product_category_id = 24; //商品分类id
  string product_category_id_array = 25; //商品分类id字符串
  string product_category_name = 26; //商品分类名称
  string product_sn = 27; //货号
  string promotion_end_time = 28; //促销结束时间
  int32 promotion_per_limit = 29; //活动限购数量
  int64 promotion_price = 30; //促销价格
  string promotion_start_time = 31; //促销开始时间
  int32 promotion_type = 32; //促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
  int32 publish_status = 33; //上架状态：0->下架；1->上架
  int32 recommand_status = 34; //推荐状态；0->不推荐；1->推荐
  int32 sale = 35; //销量
  string service_ids = 36; //以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
  int32 sort = 37; //排序
  int32 stock = 38; //库存
  string sub_title = 39; //副标题
  string unit = 40; //单位
  int32 use_point_limit = 41; //限制使用的积分数
  int32 verify_status = 42; //审核状态：0->未审核；1->审核通过
  int64 weight = 43; //商品重量，默认为克
  repeated MemberPriceList      MemberPriceList = 44;
  repeated ProductAttributeValueList      ProductAttributeValueList = 45;
  repeated ProductFullReductionList      ProductFullReductionList = 46;
  repeated ProductLadderList      ProductLadderList = 47;
  repeated SkuStockList      SkuStockList = 48;
}

message UpdateProductResp {
  string pong = 1;
}

message DeleteProductReq {
  repeated int64 ids = 1;
}

message DeleteProductResp {
  string pong = 1;
}

message QueryProductDetailByIdReq {
  int64 id = 1;
}

message BrandData {
  string big_pic = 1; //专区大图
  string brand_story = 2; //品牌故事
  string create_by = 3; //创建者
  string create_time = 4; //创建时间
  int32 factory_status = 5; //是否为品牌制造商：0->不是；1->是
  string first_letter = 6; //首字母
  int64 id = 7; //
  string logo = 8; //品牌logo
  string name = 9; //品牌名称
  int32 product_comment_count = 10; //产品评论数量
  int32 product_count = 11; //产品数量
  int32 recommend_status = 12; //推荐状态
  int32 show_status = 13; //品牌显示状态
  int32 sort = 14; //排序
  string update_by = 15; //更新者
  string update_time = 16; //更新时间

}
message ProductAttributeDataList {
  int32 filter_type = 1; //分类筛选样式：1->普通；1->颜色
  int32 hand_add_status = 2; //是否支持手动新增；0->不支持；1->支持
  int64 id = 3; //
  string input_list = 4; //可选值列表，以逗号隔开
  int32 input_type = 5; //属性录入方式：0->手工录入；1->从列表中选取
  string name = 6; //
  int64 product_attribute_category_id = 7; //
  int32 related_status = 8; //相同属性产品是否关联；0->不关联；1->关联
  int32 search_type = 9; //检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
  int32 select_type = 10; //属性选择类型：0->唯一；1->单选；2->多选
  int32 sort = 11; //排序字段：最高的可以单独上传图片
  int32 type = 12; //属性的类型；0->规格；1->参数

}
message ProductAttributeValueData {
  int64 id = 1; //
  int64 product_attribute_id = 2; //
  int64 product_id = 3; //
  string value = 4; //手动添加规格或参数的值，参数单值，规格有多个时以逗号隔开

}
message SkuStockData {
  int64 id = 1; //
  int32 lock_stock = 2; //锁定库存
  int32 low_stock = 3; //预警库存
  string pic = 4; //展示图片
  int64 price = 5; //
  int64 product_id = 6; //
  int64 promotion_price = 7; //单品促销价格
  int32 sale = 8; //销量
  string sku_code = 9; //sku编码
  string sp_data = 10; //商品销售属性，json格式
  int32 stock = 11; //库存

}
message ProductLadderData {
  int32 count = 1; //满足的商品数量
  int64 discount = 2; //折扣
  int64 id = 3; //
  int64 price = 4; //折后价格
  int64 product_id = 5; //

}
message ProductFullReductionData {
  int64 full_price = 1; //
  int64 id = 2; //
  int64 product_id = 3; //
  int64 reduce_price = 4; //

}
message MemberPriceListData {
  int64 id = 1; //
  int64 member_level_id = 2; //会员等级id
  string member_level_name = 3; //会员等级名称
  int64 member_price = 4; //会员价格
  int64 product_id = 5; //商品id

}

message QueryProductDetailByIdResp{
  ProductListData       Product = 1;
  BrandData       Brand = 2;
  repeated ProductAttributeDataList       ProductAttributeList = 3;
  repeated ProductAttributeValueData       ProductAttributeValueList = 4;
  repeated SkuStockData      SkuStockList = 5;
  repeated ProductLadderData      ProductLadderList = 6;
  repeated ProductFullReductionData      ProductFullReductionList = 7;
  repeated MemberPriceListData      MemberPriceList = 8;
}

message UpdateProductStatusReq {
  repeated int64 ids = 1;
  int32 status = 2;
  string detail = 3;
  string vertifyMan = 4;
}

message UpdateProductStatusResp {
  string pong = 1;
}

service ProductService {

  rpc AddProduct(AddProductReq) returns(AddProductResp);
  //查询商品列表
  rpc QueryProductList(QueryProductListReq) returns(QueryProductListResp);
  rpc QueryProductListByIds(QueryProductByIdsReq) returns(QueryProductListResp);
  rpc UpdateProduct(UpdateProductReq) returns(UpdateProductResp);
  rpc DeleteProduct(DeleteProductReq) returns(DeleteProductResp);

  //查询商品详情
  rpc QueryProductDetailById(QueryProductDetailByIdReq) returns(QueryProductDetailByIdResp);

  //批量修改审核状态
  rpc UpdateVerifyStatus(UpdateProductStatusReq) returns(UpdateProductStatusResp);
  //批量上下架商品
  rpc UpdatePublishStatus(UpdateProductStatusReq) returns(UpdateProductStatusResp);
  //批量推荐商品
  rpc UpdateRecommendStatus(UpdateProductStatusReq) returns(UpdateProductStatusResp);
  //批量设为新品
  rpc UpdateNewStatus(UpdateProductStatusReq) returns(UpdateProductStatusResp);
  //批量修改删除状态
  rpc UpdateDeleteStatus(UpdateProductStatusReq) returns(UpdateProductStatusResp);


}



// 添加商品属性参数表
message AddProductAttributeReq {
  int32 filter_type = 1; //分类筛选样式：1->普通；1->颜色
  int32 hand_add_status = 2; //是否支持手动新增；0->不支持；1->支持
  int64 id = 3; //
  string input_list = 4; //可选值列表，以逗号隔开
  int32 input_type = 5; //属性录入方式：0->手工录入；1->从列表中选取
  string name = 6; //
  int64 product_attribute_category_id = 7; //
  int32 related_status = 8; //相同属性产品是否关联；0->不关联；1->关联
  int32 search_type = 9; //检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
  int32 select_type = 10; //属性选择类型：0->唯一；1->单选；2->多选
  int32 sort = 11; //排序字段：最高的可以单独上传图片
  int32 type = 12; //属性的类型；0->规格；1->参数

}

message AddProductAttributeResp {
  string pong = 1;
}

// 删除商品属性参数表
message DeleteProductAttributeReq {
  repeated int64 ids = 1;
}

message DeleteProductAttributeResp {
  string pong = 1;
}



// 分页查询商品属性参数表列表
message QueryProductAttributeListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  string name = 3; //
  int64 product_attribute_category_id = 4; //
  int32 type = 5; //属性的类型；0->规格；1->参数

}

message ProductAttributeListData {
  int32 filter_type = 1; //分类筛选样式：1->普通；1->颜色
  int32 hand_add_status = 2; //是否支持手动新增；0->不支持；1->支持
  int64 id = 3; //
  string input_list = 4; //可选值列表，以逗号隔开
  int32 input_type = 5; //属性录入方式：0->手工录入；1->从列表中选取
  string name = 6; //
  int64 product_attribute_category_id = 7; //
  int32 related_status = 8; //相同属性产品是否关联；0->不关联；1->关联
  int32 search_type = 9; //检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
  int32 select_type = 10; //属性选择类型：0->唯一；1->单选；2->多选
  int32 sort = 11; //排序字段：最高的可以单独上传图片
  int32 type = 12; //属性的类型；0->规格；1->参数

}

message QueryProductAttributeListResp {
  int64 total = 1;
  repeated  ProductAttributeListData list = 2;
}

message QueryByproductCategoryIdReq {
  int64 ProductCategoryId = 1;
}
message QueryByproductCategoryIdData{
  int64    AttributeId = 1;
  int64    AttributeCategoryId = 2;

}
message QueryByproductCategoryIdResp {
  repeated  QueryByproductCategoryIdData list = 1;
}

// 商品属性参数表
service ProductAttributeService {
  // 添加商品属性参数表
  rpc AddProductAttribute(AddProductAttributeReq) returns (AddProductAttributeResp){}
  // 删除商品属性参数表
  rpc DeleteProductAttribute(DeleteProductAttributeReq) returns (DeleteProductAttributeResp){}
  // 查询商品属性参数表列表
  rpc QueryProductAttributeList(QueryProductAttributeListReq) returns (QueryProductAttributeListResp){}

  //根据商品分类的id获取商品属性及属性分类
  rpc QueryByproductCategoryId(QueryByproductCategoryIdReq) returns(QueryByproductCategoryIdResp);

}


// 添加产品属性分类表
message AddProductAttributeCategoryReq {
  string name = 1; //

}

message AddProductAttributeCategoryResp {
  string pong = 1;
}

// 删除产品属性分类表
message DeleteProductAttributeCategoryReq {
  repeated int64 ids = 1;
}

message DeleteProductAttributeCategoryResp {
  string pong = 1;
}

// 更新产品属性分类表
message UpdateProductAttributeCategoryReq {
  int32 attribute_count = 1; //属性数量
  int64 id = 2; //
  string name = 3; //
  int32 param_count = 4; //参数数量

}

message UpdateProductAttributeCategoryResp {
  string pong = 1;
}


// 分页查询产品属性分类表列表
message QueryProductAttributeCategoryListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  string name = 3; //

}

message ProductAttributeCategoryListData {
  int32 attribute_count = 1; //属性数量
  int64 id = 2; //
  string name = 3; //
  int32 param_count = 4; //参数数量
  repeated ProductAttributeData ProductAttributeList=5;
}
message ProductAttributeData {
  int32 filter_type = 1; //分类筛选样式：1->普通；1->颜色
  int32 hand_add_status = 2; //是否支持手动新增；0->不支持；1->支持
  int64 id = 3; //
  string input_list = 4; //可选值列表，以逗号隔开
  int32 input_type = 5; //属性录入方式：0->手工录入；1->从列表中选取
  string name = 6; //
  int64 product_attribute_category_id = 7; //
  int32 related_status = 8; //相同属性产品是否关联；0->不关联；1->关联
  int32 search_type = 9; //检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
  int32 select_type = 10; //属性选择类型：0->唯一；1->单选；2->多选
  int32 sort = 11; //排序字段：最高的可以单独上传图片
  int32 type = 12; //属性的类型；0->规格；1->参数

}
message QueryProductAttributeCategoryListResp {
  int64 total = 1;
  repeated  ProductAttributeCategoryListData list = 2;
}

// 产品属性分类表
service ProductAttributeCategoryService {
  // 添加产品属性分类表
  rpc AddProductAttributeCategory(AddProductAttributeCategoryReq) returns (AddProductAttributeCategoryResp){}
  // 删除产品属性分类表
  rpc DeleteProductAttributeCategory(DeleteProductAttributeCategoryReq) returns (DeleteProductAttributeCategoryResp){}
  // 更新产品属性分类表
  rpc UpdateProductAttributeCategory(UpdateProductAttributeCategoryReq) returns (UpdateProductAttributeCategoryResp ){}
  // 查询产品属性分类表列表
  rpc QueryProductAttributeCategoryList(QueryProductAttributeCategoryListReq) returns (QueryProductAttributeCategoryListResp){}

  //获取所有商品属性分类及其下属性
  rpc queryCategoryWithAttrList(QueryProductAttributeCategoryListReq) returns(QueryProductAttributeCategoryListResp);

}


// 添加存储产品参数信息的表
message AddProductAttributeValueReq {
  int64 product_attribute_id = 1; //
  int64 product_id = 2; //
  string value = 3; //手动添加规格或参数的值，参数单值，规格有多个时以逗号隔开

}

message AddProductAttributeValueResp {
  string pong = 1;
}

// 删除存储产品参数信息的表
message DeleteProductAttributeValueReq {
  repeated int64 ids = 1;
}

message DeleteProductAttributeValueResp {
  string pong = 1;
}

// 更新存储产品参数信息的表
message UpdateProductAttributeValueReq {
  int64 id = 1; //
  int64 product_attribute_id = 2; //
  int64 product_id = 3; //
  string value = 4; //手动添加规格或参数的值，参数单值，规格有多个时以逗号隔开

}

message UpdateProductAttributeValueResp {
  string pong = 1;
}


// 分页查询存储产品参数信息的表列表
message QueryProductAttributeValueListReq {
  int64 product_id = 1; //

}

message ProductAttributeValueListData {
  int64 id = 1; //
  int64 product_attribute_id = 2; //
  int64 product_id = 3; //
  string value = 4; //手动添加规格或参数的值，参数单值，规格有多个时以逗号隔开

}

message QueryProductAttributeValueListResp {
  int64 total = 1;
  repeated  ProductAttributeValueListData list = 2;
}

// 存储产品参数信息的表
service ProductAttributeValueService {
  // 添加存储产品参数信息的表
  rpc AddProductAttributeValue(AddProductAttributeValueReq) returns (AddProductAttributeValueResp){}
  // 删除存储产品参数信息的表
  rpc DeleteProductAttributeValue(DeleteProductAttributeValueReq) returns (DeleteProductAttributeValueResp){}
  // 更新存储产品参数信息的表
  rpc UpdateProductAttributeValue(UpdateProductAttributeValueReq) returns (UpdateProductAttributeValueResp ){}
  // 查询存储产品参数信息的表列表
  rpc QueryProductAttributeValueList(QueryProductAttributeValueListReq) returns (QueryProductAttributeValueListResp){}


}


// 添加产品分类
message AddProductCategoryReq {
  string description = 1; //描述
  string icon = 2; //图标
  int64 id = 3; //
  string keywords = 4; //
  int32 level = 5; //分类级别：0->1级；1->2级
  string name = 6; //
  int32 nav_status = 7; //是否显示在导航栏：0->不显示；1->显示
  int64 parent_id = 8; //上机分类的编号：0表示一级分类
  int32 product_count = 9; //
  string product_unit = 10; //
  int32 show_status = 11; //显示状态：0->不显示；1->显示
  int32 sort = 12; //
  repeated int64 ProductAttributeIdList = 13;
}

message AddProductCategoryResp {
  string pong = 1;
}

// 删除产品分类
message DeleteProductCategoryReq {
  repeated int64 ids = 1;
}

message DeleteProductCategoryResp {
  string pong = 1;
}

// 更新产品分类
message UpdateProductCategoryReq {
  string description = 1; //描述
  string icon = 2; //图标
  int64 id = 3; //
  string keywords = 4; //
  int32 level = 5; //分类级别：0->1级；1->2级
  string name = 6; //
  int32 nav_status = 7; //是否显示在导航栏：0->不显示；1->显示
  int64 parent_id = 8; //上机分类的编号：0表示一级分类
  int32 product_count = 9; //
  string product_unit = 10; //
  int32 show_status = 11; //显示状态：0->不显示；1->显示
  int32 sort = 12; //
  repeated int64 ProductAttributeIdList = 13;
}

message UpdateProductCategoryResp {
  string pong = 1;
}

// 更新产品分类状态
message UpdateProductCategoryStatusReq {
  repeated int64 ids = 1; //
  int32 status = 2;


}

message UpdateProductCategoryStatusResp {
  string pong = 1;
}

// 查询产品分类详情
message QueryProductCategoryDetailReq {
    int64 id = 1;
}

message QueryProductCategoryDetailResp {
  string description = 1; //描述
  string icon = 2; //图标
  int64 id = 3; //
  string keywords = 4; //
  int32 level = 5; //分类级别：0->1级；1->2级
  string name = 6; //
  int32 nav_status = 7; //是否显示在导航栏：0->不显示；1->显示
  int64 parent_id = 8; //上机分类的编号：0表示一级分类
  int32 product_count = 9; //
  string product_unit = 10; //
  int32 show_status = 11; //显示状态：0->不显示；1->显示
  int32 sort = 12; //

}

// 分页查询产品分类列表
message QueryProductCategoryListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  string name = 3; //
  int32 nav_status = 4; //是否显示在导航栏：0->不显示；1->显示
  int32 show_status = 5; //显示状态：0->不显示；1->显示
  int64 parent_id = 6; //上机分类的编号：0表示一级分类
}

message ProductCategoryListData {
  string description = 1; //描述
  string icon = 2; //图标
  int64 id = 3; //
  string keywords = 4; //
  int32 level = 5; //分类级别：0->1级；1->2级
  string name = 6; //
  int32 nav_status = 7; //是否显示在导航栏：0->不显示；1->显示
  int64 parent_id = 8; //上机分类的编号：0表示一级分类
  int32 product_count = 9; //
  string product_unit = 10; //
  int32 show_status = 11; //显示状态：0->不显示；1->显示
  int32 sort = 12; //

}

message QueryProductCategoryListResp {
  int64 total = 1;
  repeated  ProductCategoryListData list = 2;
}

message QueryProductCategoryTreeListReq {

}
message QueryProductCategoryListTreeData{
  int64    Id = 1;
  string  Name = 2;
  string  ImageUrl = 3;
  repeated QueryProductCategoryListTreeData  Children = 4;
}
message QueryProductCategoryListTreeResp {
  repeated  QueryProductCategoryListTreeData list = 1;
}

// 产品分类
service ProductCategoryService {
  // 添加产品分类
  rpc AddProductCategory(AddProductCategoryReq) returns (AddProductCategoryResp){}
  // 删除产品分类
  rpc DeleteProductCategory(DeleteProductCategoryReq) returns (DeleteProductCategoryResp){}
  // 更新产品分类
  rpc UpdateProductCategory(UpdateProductCategoryReq) returns (UpdateProductCategoryResp ){}
  //更新商品分类导航显示状态
  rpc UpdateCategoryNavStatus(UpdateProductCategoryStatusReq) returns(UpdateProductCategoryStatusResp);
  //更新商品分类显示状态
  rpc UpdateCategoryShowStatus(UpdateProductCategoryStatusReq) returns(UpdateProductCategoryStatusResp);
  // 查询产品分类详情
   rpc QueryProductCategoryDetail(QueryProductCategoryDetailReq) returns (QueryProductCategoryDetailResp){}
  // 查询产品分类列表
  rpc QueryProductCategoryList(QueryProductCategoryListReq) returns (QueryProductCategoryListResp){}

  //查询商品分类（tree）
  rpc QueryProductCategoryTreeList(QueryProductCategoryTreeListReq) returns(QueryProductCategoryListTreeResp);

}


// 添加产品的分类和属性的关系表，用于设置分类筛选条件（只支持一级分类）
message AddProductCategoryAttributeRelationReq {
  int64 product_attribute_id = 1; //
  int64 product_category_id = 2; //

}

message AddProductCategoryAttributeRelationResp {
  string pong = 1;
}


// 分页查询产品的分类和属性的关系表，用于设置分类筛选条件（只支持一级分类）列表
message QueryProductCategoryAttributeRelationListReq {
 int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
}

message ProductCategoryAttributeRelationListData {
  int64 id = 1; //
  int64 product_attribute_id = 2; //
  int64 product_category_id = 3; //

}

message QueryProductCategoryAttributeRelationListResp {
  int64 total = 1;
  repeated  ProductCategoryAttributeRelationListData list = 2;
}

// 产品的分类和属性的关系表，用于设置分类筛选条件（只支持一级分类）
service ProductCategoryAttributeRelationService {
  // 添加产品的分类和属性的关系表，用于设置分类筛选条件（只支持一级分类）
  rpc AddProductCategoryAttributeRelation(AddProductCategoryAttributeRelationReq) returns (AddProductCategoryAttributeRelationResp){}
  // 查询产品的分类和属性的关系表，用于设置分类筛选条件（只支持一级分类）列表
  rpc QueryProductCategoryAttributeRelationList(QueryProductCategoryAttributeRelationListReq) returns (QueryProductCategoryAttributeRelationListResp){}


}


// 添加收藏表
message AddProductCollectReq {
  string add_time = 1; //创建时间
  int32 collect_type = 2; //收藏类型，如果type=0，则是商品ID；如果type=1，则是专题ID
  int32 deleted = 3; //逻辑删除
  int32 id = 4; //
  string update_time = 5; //更新时间
  int32 user_id = 6; //用户表的用户ID
  int32 value_id = 7; //如果type=0，则是商品ID；如果type=1，则是专题ID

}

message AddProductCollectResp {
  string pong = 1;
}

// 删除收藏表
message DeleteProductCollectReq {
  repeated int64 ids = 1;
}

message DeleteProductCollectResp {
  string pong = 1;
}

// 查询收藏表详情
message QueryProductCollectDetailReq {
    int64 id = 1;
}

message QueryProductCollectDetailResp {
  string add_time = 1; //创建时间
  int32 collect_type = 2; //收藏类型，如果type=0，则是商品ID；如果type=1，则是专题ID
  int32 deleted = 3; //逻辑删除
  int32 id = 4; //
  string update_time = 5; //更新时间
  int32 user_id = 6; //用户表的用户ID
  int32 value_id = 7; //如果type=0，则是商品ID；如果type=1，则是专题ID

}

// 分页查询收藏表列表
message QueryProductCollectListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  int32 user_id = 3; //用户表的用户ID


}

message ProductCollectListData {
  string add_time = 1; //创建时间
  int32 collect_type = 2; //收藏类型，如果type=0，则是商品ID；如果type=1，则是专题ID
  int32 deleted = 3; //逻辑删除
  int32 id = 4; //
  string update_time = 5; //更新时间
  int32 user_id = 6; //用户表的用户ID
  int32 value_id = 7; //如果type=0，则是商品ID；如果type=1，则是专题ID

}

message QueryProductCollectListResp {
  int64 total = 1;
  repeated  ProductCollectListData list = 2;
}

// 收藏表
service ProductCollectService {
  // 添加收藏表
  rpc AddProductCollect(AddProductCollectReq) returns (AddProductCollectResp){}
  // 删除收藏表
  rpc DeleteProductCollect(DeleteProductCollectReq) returns (DeleteProductCollectResp){}
  // 查询收藏表详情
   rpc QueryProductCollectDetail(QueryProductCollectDetailReq) returns (QueryProductCollectDetailResp){}
  // 查询收藏表列表
  rpc QueryProductCollectList(QueryProductCollectListReq) returns (QueryProductCollectListResp){}


}


// 添加产品满减表(只针对同商品)
message AddProductFullReductionReq {
  int64 full_price = 1; //
  int64 product_id = 2; //
  int64 reduce_price = 3; //

}

message AddProductFullReductionResp {
  string pong = 1;
}

// 删除产品满减表(只针对同商品)
message DeleteProductFullReductionReq {
  repeated int64 ids = 1;
}

message DeleteProductFullReductionResp {
  string pong = 1;
}

// 分页查询产品满减表(只针对同商品)列表
message QueryProductFullReductionListReq {
  int64 product_id = 1; //
}

message ProductFullReductionListData {
  int64 full_price = 1; //
  int64 id = 2; //
  int64 product_id = 3; //
  int64 reduce_price = 4; //

}

message QueryProductFullReductionListResp {
  int64 total = 1;
  repeated  ProductFullReductionListData list = 2;
}

// 产品满减表(只针对同商品)
service ProductFullReductionService {
  // 添加产品满减表(只针对同商品)
  rpc AddProductFullReduction(AddProductFullReductionReq) returns (AddProductFullReductionResp){}
  // 删除产品满减表(只针对同商品)
  rpc DeleteProductFullReduction(DeleteProductFullReductionReq) returns (DeleteProductFullReductionResp){}
  // 查询产品满减表(只针对同商品)列表
  rpc QueryProductFullReductionList(QueryProductFullReductionListReq) returns (QueryProductFullReductionListResp){}


}


// 添加产品阶梯价格表(只针对同商品)
message AddProductLadderReq {
  int32 count = 1; //满足的商品数量
  int64 discount = 2; //折扣
  int64 product_id = 3; //
  int64 price = 4; //折后价格


}

message AddProductLadderResp {
  string pong = 1;
}

// 删除产品阶梯价格表(只针对同商品)
message DeleteProductLadderReq {
  repeated int64 ids = 1;
}

message DeleteProductLadderResp {
  string pong = 1;
}

// 更新产品阶梯价格表(只针对同商品)
message UpdateProductLadderReq {
  int32 count = 1; //满足的商品数量
  int64 discount = 2; //折扣
  int64 id = 3; //
  int64 price = 4; //折后价格
  int64 product_id = 5; //

}

message UpdateProductLadderResp {
  string pong = 1;
}

// 查询产品阶梯价格表(只针对同商品)详情
message QueryProductLadderDetailReq {
    int64 id = 1;
}

message QueryProductLadderDetailResp {
  int32 count = 1; //满足的商品数量
  int64 discount = 2; //折扣
  int64 id = 3; //
  int64 price = 4; //折后价格
  int64 product_id = 5; //

}

// 分页查询产品阶梯价格表(只针对同商品)列表
message QueryProductLadderListReq {
  int64 product_id = 1; //
}

message ProductLadderListData {
  int32 count = 1; //满足的商品数量
  int64 discount = 2; //折扣
  int64 id = 3; //
  int64 price = 4; //折后价格
  int64 product_id = 5; //

}

message QueryProductLadderListResp {
  int64 total = 1;
  repeated  ProductLadderListData list = 2;
}

// 产品阶梯价格表(只针对同商品)
service ProductLadderService {
  // 添加产品阶梯价格表(只针对同商品)
  rpc AddProductLadder(AddProductLadderReq) returns (AddProductLadderResp){}
  // 删除产品阶梯价格表(只针对同商品)
  rpc DeleteProductLadder(DeleteProductLadderReq) returns (DeleteProductLadderResp){}
  // 更新产品阶梯价格表(只针对同商品)
  rpc UpdateProductLadder(UpdateProductLadderReq) returns (UpdateProductLadderResp ){}
  // 查询产品阶梯价格表(只针对同商品)详情
   rpc QueryProductLadderDetail(QueryProductLadderDetailReq) returns (QueryProductLadderDetailResp){}
  // 查询产品阶梯价格表(只针对同商品)列表
  rpc QueryProductLadderList(QueryProductLadderListReq) returns (QueryProductLadderListResp){}


}


// 添加
message AddProductOperateLogReq {
  string create_time = 1; //
  int32 gift_point_new = 2; //
  int32 gift_point_old = 3; //赠送的积分
  int32 use_point_limit_old = 4; //
  string operate_man = 5; //操作人
  int64 price_new = 6; //
  int64 price_old = 7; //
  int64 product_id = 8; //
  int64 sale_price_new = 9; //
  int64 sale_price_old = 10; //
  int32 use_point_limit_new = 11; //


}

message AddProductOperateLogResp {
  string pong = 1;
}

// 删除
message DeleteProductOperateLogReq {
  repeated int64 ids = 1;
}

message DeleteProductOperateLogResp {
  string pong = 1;
}

// 查询详情
message QueryProductOperateLogDetailReq {
    int64 id = 1;
}

message QueryProductOperateLogDetailResp {
  string create_time = 1; //
  int32 gift_point_new = 2; //
  int32 gift_point_old = 3; //赠送的积分
  int64 id = 4; //
  string operate_man = 5; //操作人
  int64 price_new = 6; //
  int64 price_old = 7; //
  int64 product_id = 8; //
  int64 sale_price_new = 9; //
  int64 sale_price_old = 10; //
  int32 use_point_limit_new = 11; //
  int32 use_point_limit_old = 12; //

}

// 分页查询列表
message QueryProductOperateLogListReq {
 int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
}

message ProductOperateLogListData {
  string create_time = 1; //
  int32 gift_point_new = 2; //
  int32 gift_point_old = 3; //赠送的积分
  int64 id = 4; //
  string operate_man = 5; //操作人
  int64 price_new = 6; //
  int64 price_old = 7; //
  int64 product_id = 8; //
  int64 sale_price_new = 9; //
  int64 sale_price_old = 10; //
  int32 use_point_limit_new = 11; //
  int32 use_point_limit_old = 12; //

}

message QueryProductOperateLogListResp {
  int64 total = 1;
  repeated  ProductOperateLogListData list = 2;
}

// 
service ProductOperateLogService {
  // 添加
  rpc AddProductOperateLog(AddProductOperateLogReq) returns (AddProductOperateLogResp){}
  // 删除
  rpc DeleteProductOperateLog(DeleteProductOperateLogReq) returns (DeleteProductOperateLogResp){}
  // 查询详情
   rpc QueryProductOperateLogDetail(QueryProductOperateLogDetailReq) returns (QueryProductOperateLogDetailResp){}
  // 查询列表
  rpc QueryProductOperateLogList(QueryProductOperateLogListReq) returns (QueryProductOperateLogListResp){}


}


// 添加商品审核记录
message AddProductVertifyRecordReq {
  string create_time = 1; //
  string detail = 2; //反馈详情
  string vertify_man = 3; //审核人
  int64 product_id = 4; //
  int32 status = 5; //

}

message AddProductVertifyRecordResp {
  string pong = 1;
}

// 删除商品审核记录
message DeleteProductVertifyRecordReq {
  repeated int64 ids = 1;
}

message DeleteProductVertifyRecordResp {
  string pong = 1;
}

// 更新商品审核记录
message UpdateProductVertifyRecordReq {
  string create_time = 1; //
  string detail = 2; //反馈详情
  int64 id = 3; //
  int64 product_id = 4; //
  int32 status = 5; //
  string vertify_man = 6; //审核人

}

message UpdateProductVertifyRecordResp {
  string pong = 1;
}

// 更新商品审核记录状态
message UpdateProductVertifyRecordStatusReq {
  string create_time = 1; //
  string detail = 2; //反馈详情
  int64 id = 3; //
  int64 product_id = 4; //
  int32 status = 5; //
  string vertify_man = 6; //审核人

}

message UpdateProductVertifyRecordStatusResp {
  string pong = 1;
}

// 查询商品审核记录详情
message QueryProductVertifyRecordDetailReq {
    int64 id = 1;
}

message QueryProductVertifyRecordDetailResp {
  string create_time = 1; //
  string detail = 2; //反馈详情
  int64 id = 3; //
  int64 product_id = 4; //
  int32 status = 5; //
  string vertify_man = 6; //审核人

}

// 分页查询商品审核记录列表
message QueryProductVertifyRecordListReq {
 int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
}

message ProductVertifyRecordListData {
  string create_time = 1; //
  string detail = 2; //反馈详情
  int64 id = 3; //
  int64 product_id = 4; //
  int32 status = 5; //
  string vertify_man = 6; //审核人

}

message QueryProductVertifyRecordListResp {
  int64 total = 1;
  repeated  ProductVertifyRecordListData list = 2;
}

// 商品审核记录
service ProductVertifyRecordService {
  // 添加商品审核记录
  rpc AddProductVertifyRecord(AddProductVertifyRecordReq) returns (AddProductVertifyRecordResp){}
  // 删除商品审核记录
  rpc DeleteProductVertifyRecord(DeleteProductVertifyRecordReq) returns (DeleteProductVertifyRecordResp){}
  // 更新商品审核记录
  rpc UpdateProductVertifyRecord(UpdateProductVertifyRecordReq) returns (UpdateProductVertifyRecordResp ){}
  // 更新商品审核记录状态
  rpc UpdateProductVertifyRecordStatus(UpdateProductVertifyRecordStatusReq) returns (UpdateProductVertifyRecordStatusResp ){}
  // 查询商品审核记录详情
   rpc QueryProductVertifyRecordDetail(QueryProductVertifyRecordDetailReq) returns (QueryProductVertifyRecordDetailResp){}
  // 查询商品审核记录列表
  rpc QueryProductVertifyRecordList(QueryProductVertifyRecordListReq) returns (QueryProductVertifyRecordListResp){}


}


// 添加sku的库存
message AddSkuStockReq {
  int32 stock = 1; //库存
  int32 lock_stock = 2; //锁定库存
  int32 low_stock = 3; //预警库存
  string pic = 4; //展示图片
  int64 price = 5; //
  int64 product_id = 6; //
  int64 promotion_price = 7; //单品促销价格
  int32 sale = 8; //销量
  string sku_code = 9; //sku编码
  string sp_data = 10; //商品销售属性，json格式


}

message AddSkuStockResp {
  string pong = 1;
}

// 删除sku的库存
message DeleteSkuStockReq {
  repeated int64 ids = 1;
}

message DeleteSkuStockResp {
  string pong = 1;
}

// 更新sku的库存
message UpdateSkuStockReq {
  repeated UpdateSkuStockData    SkuStockList = 1;

}
message UpdateSkuStockData {
  int64 id = 1; //
  int32 lock_stock = 2; //锁定库存
  int32 low_stock = 3; //预警库存
  string pic = 4; //展示图片
  int64 price = 5; //
  int64 product_id = 6; //
  int64 promotion_price = 7; //单品促销价格
  int32 sale = 8; //销量
  string sku_code = 9; //sku编码
  string sp_data = 10; //商品销售属性，json格式
  int32 stock = 11; //库存

}


message UpdateSkuStockResp {
  string pong = 1;
}

// 查询sku的库存详情
message QuerySkuStockDetailReq {
    int64 id = 1;
}

message QuerySkuStockDetailResp {
  int64 id = 1; //
  int32 lock_stock = 2; //锁定库存
  int32 low_stock = 3; //预警库存
  string pic = 4; //展示图片
  int64 price = 5; //
  int64 product_id = 6; //
  int64 promotion_price = 7; //单品促销价格
  int32 sale = 8; //销量
  string sku_code = 9; //sku编码
  string sp_data = 10; //商品销售属性，json格式
  int32 stock = 11; //库存

}

// 分页查询sku的库存列表
message QuerySkuStockListReq {
  int64 product_id = 1; //
  string sku_code = 2; //sku编码

}

message SkuStockListData {
  int64 id = 1; //
  int32 lock_stock = 2; //锁定库存
  int32 low_stock = 3; //预警库存
  string pic = 4; //展示图片
  int64 price = 5; //
  int64 product_id = 6; //
  int64 promotion_price = 7; //单品促销价格
  int32 sale = 8; //销量
  string sku_code = 9; //sku编码
  string sp_data = 10; //商品销售属性，json格式
  int32 stock = 11; //库存

}

message QuerySkuStockListResp {
  int64 total = 1;
  repeated  SkuStockListData list = 2;
}

message ReleaseSkuStockLockReq {
  repeated ReleaseSkuStockLockData data = 1;
}

message ReleaseSkuStockLockData {
  int64    ProductSkuId = 1;
  int32    ProductQuantity = 2;
}
message ReleaseSkuStockLockResp {
  string pong = 1;
}

message LockSkuStockLockReq {
  repeated LockSkuStockLockData data = 1;
}

message LockSkuStockLockData {
  int64    ProductSkuId = 1;
  int32    ProductQuantity = 2;
}
message LockSkuStockLockResp {
  string pong = 1;
}

message QuerySkuStockByProductSkuIdReq {
  int64    ProductSkuId = 1;
}

// sku的库存
service SkuStockService {
  // 添加sku的库存
  rpc AddSkuStock(AddSkuStockReq) returns (AddSkuStockResp){}
  // 删除sku的库存
  rpc DeleteSkuStock(DeleteSkuStockReq) returns (DeleteSkuStockResp){}
  // 更新sku的库存
  rpc UpdateSkuStock(UpdateSkuStockReq) returns (UpdateSkuStockResp ){}
  // 查询sku的库存详情
   rpc QuerySkuStockDetail(QuerySkuStockDetailReq) returns (QuerySkuStockDetailResp){}
  // 查询sku的库存列表
  rpc QuerySkuStockList(QuerySkuStockListReq) returns (QuerySkuStockListResp){}


  //取消订单的时候,释放库存
  rpc ReleaseSkuStockLock(ReleaseSkuStockLockReq) returns(ReleaseSkuStockLockResp);
  //下单的时候,锁定库存
  rpc LockSkuStockLock(LockSkuStockLockReq) returns(LockSkuStockLockResp);
  //根据ProductSkuId查询sku
  rpc QuerySkuStockByProductSkuId(QuerySkuStockByProductSkuIdReq) returns(SkuStockListData);

}

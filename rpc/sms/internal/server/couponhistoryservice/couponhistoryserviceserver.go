// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/couponhistoryservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type CouponHistoryServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedCouponHistoryServiceServer
}

func NewCouponHistoryServiceServer(svcCtx *svc.ServiceContext) *CouponHistoryServiceServer {
	return &CouponHistoryServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加优惠券使用、领取历史表
func (s *CouponHistoryServiceServer) AddCouponHistory(ctx context.Context, in *smsclient.AddCouponHistoryReq) (*smsclient.AddCouponHistoryResp, error) {
	l := couponhistoryservicelogic.NewAddCouponHistoryLogic(ctx, s.svcCtx)
	return l.AddCouponHistory(in)
}

// 删除优惠券使用、领取历史表
func (s *CouponHistoryServiceServer) DeleteCouponHistory(ctx context.Context, in *smsclient.DeleteCouponHistoryReq) (*smsclient.DeleteCouponHistoryResp, error) {
	l := couponhistoryservicelogic.NewDeleteCouponHistoryLogic(ctx, s.svcCtx)
	return l.DeleteCouponHistory(in)
}

// 更新优惠券使用、领取历史表
func (s *CouponHistoryServiceServer) UpdateCouponHistory(ctx context.Context, in *smsclient.UpdateCouponHistoryReq) (*smsclient.UpdateCouponHistoryResp, error) {
	l := couponhistoryservicelogic.NewUpdateCouponHistoryLogic(ctx, s.svcCtx)
	return l.UpdateCouponHistory(in)
}

// 更新优惠券使用、领取历史表状态
func (s *CouponHistoryServiceServer) UpdateCouponHistoryStatus(ctx context.Context, in *smsclient.UpdateCouponHistoryStatusReq) (*smsclient.UpdateCouponHistoryStatusResp, error) {
	l := couponhistoryservicelogic.NewUpdateCouponHistoryStatusLogic(ctx, s.svcCtx)
	return l.UpdateCouponHistoryStatus(in)
}

// 查询优惠券使用、领取历史表详情
func (s *CouponHistoryServiceServer) QueryCouponHistoryDetail(ctx context.Context, in *smsclient.QueryCouponHistoryDetailReq) (*smsclient.QueryCouponHistoryDetailResp, error) {
	l := couponhistoryservicelogic.NewQueryCouponHistoryDetailLogic(ctx, s.svcCtx)
	return l.QueryCouponHistoryDetail(in)
}

// 查询优惠券使用、领取历史表列表
func (s *CouponHistoryServiceServer) QueryCouponHistoryList(ctx context.Context, in *smsclient.QueryCouponHistoryListReq) (*smsclient.QueryCouponHistoryListResp, error) {
	l := couponhistoryservicelogic.NewQueryCouponHistoryListLogic(ctx, s.svcCtx)
	return l.QueryCouponHistoryList(in)
}

// 登录时获取用户还没有使用的获取优惠券数量
func (s *CouponHistoryServiceServer) QueryCouponCount(ctx context.Context, in *smsclient.QueryCouponCountReq) (*smsclient.QueryCouponCountResp, error) {
	l := couponhistoryservicelogic.NewQueryCouponCountLogic(ctx, s.svcCtx)
	return l.QueryCouponCount(in)
}

// 获取会员优惠券
func (s *CouponHistoryServiceServer) QueryMemberCouponList(ctx context.Context, in *smsclient.QueryMemberCouponListReq) (*smsclient.QueryMemberCouponListResp, error) {
	l := couponhistoryservicelogic.NewQueryMemberCouponListLogic(ctx, s.svcCtx)
	return l.QueryMemberCouponList(in)
}

// 获取该用户所有优惠券(包括商品和优惠券,商品分类和优惠券的关联关糸)
func (s *CouponHistoryServiceServer) QueryCouponHistoryDetailList(ctx context.Context, in *smsclient.QueryCouponHistoryDetailListReq) (*smsclient.CouponHistoryDetailListResp, error) {
	l := couponhistoryservicelogic.NewQueryCouponHistoryDetailListLogic(ctx, s.svcCtx)
	return l.QueryCouponHistoryDetailList(in)
}

// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/couponservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type CouponServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedCouponServiceServer
}

func NewCouponServiceServer(svcCtx *svc.ServiceContext) *CouponServiceServer {
	return &CouponServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加优惠券
func (s *CouponServiceServer) AddCoupon(ctx context.Context, in *smsclient.AddOrUpdateCouponReq) (*smsclient.AddOrUpdateCouponResp, error) {
	l := couponservicelogic.NewAddCouponLogic(ctx, s.svcCtx)
	return l.AddCoupon(in)
}

// 查询优惠券
func (s *CouponServiceServer) QueryCouponList(ctx context.Context, in *smsclient.QueryCouponListReq) (*smsclient.QueryCouponListResp, error) {
	l := couponservicelogic.NewQueryCouponListLogic(ctx, s.svcCtx)
	return l.QueryCouponList(in)
}

// 更新优惠券
func (s *CouponServiceServer) UpdateCoupon(ctx context.Context, in *smsclient.AddOrUpdateCouponReq) (*smsclient.AddOrUpdateCouponResp, error) {
	l := couponservicelogic.NewUpdateCouponLogic(ctx, s.svcCtx)
	return l.UpdateCoupon(in)
}

// 删除优惠券
func (s *CouponServiceServer) DeleteCoupon(ctx context.Context, in *smsclient.DeleteCouponReq) (*smsclient.DeleteCouponResp, error) {
	l := couponservicelogic.NewDeleteCouponLogic(ctx, s.svcCtx)
	return l.DeleteCoupon(in)
}

// 根据优惠券id查询优惠券
func (s *CouponServiceServer) QueryCouponFindById(ctx context.Context, in *smsclient.QueryCouponFindByIdReq) (*smsclient.QueryCouponFindByIdResp, error) {
	l := couponservicelogic.NewQueryCouponFindByIdLogic(ctx, s.svcCtx)
	return l.QueryCouponFindById(in)
}

// 根据优惠券ids查询优惠券
func (s *CouponServiceServer) QueryCouponFindByIds(ctx context.Context, in *smsclient.QueryCouponFindByIdsReq) (*smsclient.QueryCouponFindByIdsResp, error) {
	l := couponservicelogic.NewQueryCouponFindByIdsLogic(ctx, s.svcCtx)
	return l.QueryCouponFindByIds(in)
}

// 根据商品Id和分类id查询可用的优惠券(app)
func (s *CouponServiceServer) QueryCouponFindByProductIdAndProductCategoryId(ctx context.Context, in *smsclient.CouponFindByProductIdAndProductCategoryIdReq) (*smsclient.CouponFindByProductIdAndProductCategoryIdResp, error) {
	l := couponservicelogic.NewQueryCouponFindByProductIdAndProductCategoryIdLogic(ctx, s.svcCtx)
	return l.QueryCouponFindByProductIdAndProductCategoryId(in)
}

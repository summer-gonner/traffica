// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: rpc/sms/sms.proto

package smsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CouponProductCategoryRelationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CouponId            int64  `protobuf:"varint,2,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	ProductCategoryId   int64  `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	ProductCategoryName string `protobuf:"bytes,4,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
	ParentCategoryName  string `protobuf:"bytes,5,opt,name=ParentCategoryName,proto3" json:"ParentCategoryName,omitempty"`
}

func (x *CouponProductCategoryRelationData) Reset() {
	*x = CouponProductCategoryRelationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponProductCategoryRelationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponProductCategoryRelationData) ProtoMessage() {}

func (x *CouponProductCategoryRelationData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponProductCategoryRelationData.ProtoReflect.Descriptor instead.
func (*CouponProductCategoryRelationData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{0}
}

func (x *CouponProductCategoryRelationData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponProductCategoryRelationData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponProductCategoryRelationData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CouponProductCategoryRelationData) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *CouponProductCategoryRelationData) GetParentCategoryName() string {
	if x != nil {
		return x.ParentCategoryName
	}
	return ""
}

type CouponProductRelationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CouponId    int64  `protobuf:"varint,2,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	ProductId   int64  `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	ProductName string `protobuf:"bytes,4,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	ProductSn   string `protobuf:"bytes,5,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
}

func (x *CouponProductRelationData) Reset() {
	*x = CouponProductRelationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponProductRelationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponProductRelationData) ProtoMessage() {}

func (x *CouponProductRelationData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponProductRelationData.ProtoReflect.Descriptor instead.
func (*CouponProductRelationData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{1}
}

func (x *CouponProductRelationData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponProductRelationData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponProductRelationData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CouponProductRelationData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CouponProductRelationData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type AddOrUpdateCouponReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                int64                                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                               //
	Type                              int32                                `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                                                           //优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name                              string                               `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                                                            //名称
	Platform                          int32                                `protobuf:"varint,4,opt,name=Platform,proto3" json:"Platform,omitempty"`                                                   //使用平台：0->全部；1->移动；2->PC
	MemberLevel                       int32                                `protobuf:"varint,5,opt,name=MemberLevel,proto3" json:"MemberLevel,omitempty"`                                             //可领取的会员类型：0->无限时
	Amount                            int64                                `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`                                                       //金额
	PerLimit                          int32                                `protobuf:"varint,7,opt,name=PerLimit,proto3" json:"PerLimit,omitempty"`                                                   //每人限领张数
	MinPoint                          int64                                `protobuf:"varint,8,opt,name=MinPoint,proto3" json:"MinPoint,omitempty"`                                                   //使用门槛；0表示无门槛
	StartTime                         string                               `protobuf:"bytes,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                                                  //开始时间
	EndTime                           string                               `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                                                     //结束时间
	UseType                           int32                                `protobuf:"varint,11,opt,name=UseType,proto3" json:"UseType,omitempty"`                                                    //使用类型：0->全场通用；1->指定分类；2->指定商品
	Note                              string                               `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`                                                           //备注
	PublishCount                      int32                                `protobuf:"varint,13,opt,name=PublishCount,proto3" json:"PublishCount,omitempty"`                                          //发行数量
	UseCount                          int32                                `protobuf:"varint,14,opt,name=UseCount,proto3" json:"UseCount,omitempty"`                                                  //已使用数量
	ReceiveCount                      int32                                `protobuf:"varint,15,opt,name=ReceiveCount,proto3" json:"ReceiveCount,omitempty"`                                          //领取数量
	EnableTime                        string                               `protobuf:"bytes,16,opt,name=EnableTime,proto3" json:"EnableTime,omitempty"`                                               //可以领取的日期
	Code                              string                               `protobuf:"bytes,17,opt,name=Code,proto3" json:"Code,omitempty"`                                                           //优惠码
	CouponProductRelationList         []*CouponProductRelationData         `protobuf:"bytes,18,rep,name=CouponProductRelationList,proto3" json:"CouponProductRelationList,omitempty"`                 //优惠券绑定的商品
	CouponProductCategoryRelationList []*CouponProductCategoryRelationData `protobuf:"bytes,19,rep,name=CouponProductCategoryRelationList,proto3" json:"CouponProductCategoryRelationList,omitempty"` //优惠券绑定的商品分类
}

func (x *AddOrUpdateCouponReq) Reset() {
	*x = AddOrUpdateCouponReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateCouponReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateCouponReq) ProtoMessage() {}

func (x *AddOrUpdateCouponReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateCouponReq.ProtoReflect.Descriptor instead.
func (*AddOrUpdateCouponReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{2}
}

func (x *AddOrUpdateCouponReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetMemberLevel() int32 {
	if x != nil {
		return x.MemberLevel
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetPerLimit() int32 {
	if x != nil {
		return x.PerLimit
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetMinPoint() int64 {
	if x != nil {
		return x.MinPoint
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetPublishCount() int32 {
	if x != nil {
		return x.PublishCount
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetReceiveCount() int32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

func (x *AddOrUpdateCouponReq) GetEnableTime() string {
	if x != nil {
		return x.EnableTime
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddOrUpdateCouponReq) GetCouponProductRelationList() []*CouponProductRelationData {
	if x != nil {
		return x.CouponProductRelationList
	}
	return nil
}

func (x *AddOrUpdateCouponReq) GetCouponProductCategoryRelationList() []*CouponProductCategoryRelationData {
	if x != nil {
		return x.CouponProductCategoryRelationList
	}
	return nil
}

type AddOrUpdateCouponResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrUpdateCouponResp) Reset() {
	*x = AddOrUpdateCouponResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateCouponResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateCouponResp) ProtoMessage() {}

func (x *AddOrUpdateCouponResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateCouponResp.ProtoReflect.Descriptor instead.
func (*AddOrUpdateCouponResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{3}
}

func (x *AddOrUpdateCouponResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type DeleteCouponReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteCouponReq) Reset() {
	*x = DeleteCouponReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCouponReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponReq) ProtoMessage() {}

func (x *DeleteCouponReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponReq.ProtoReflect.Descriptor instead.
func (*DeleteCouponReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCouponReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteCouponResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteCouponResp) Reset() {
	*x = DeleteCouponResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCouponResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponResp) ProtoMessage() {}

func (x *DeleteCouponResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponResp.ProtoReflect.Descriptor instead.
func (*DeleteCouponResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCouponResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryCouponListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Type      int32  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`          //优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name      string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`           //名称
	Platform  int32  `protobuf:"varint,5,opt,name=Platform,proto3" json:"Platform,omitempty"`  //使用平台：0->全部；1->移动；2->PC
	StartTime string `protobuf:"bytes,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //开始时间
	EndTime   string `protobuf:"bytes,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //结束时间
	UseType   int32  `protobuf:"varint,8,opt,name=UseType,proto3" json:"UseType,omitempty"`    //使用类型：0->全场通用；1->指定分类；2->指定商品
}

func (x *QueryCouponListReq) Reset() {
	*x = QueryCouponListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponListReq) ProtoMessage() {}

func (x *QueryCouponListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponListReq.ProtoReflect.Descriptor instead.
func (*QueryCouponListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{6}
}

func (x *QueryCouponListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *QueryCouponListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryCouponListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryCouponListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCouponListReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *QueryCouponListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryCouponListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryCouponListReq) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

type QueryCouponListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                      //
	Type         int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                  //优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                   //名称
	Platform     int32  `protobuf:"varint,4,opt,name=Platform,proto3" json:"Platform,omitempty"`          //使用平台：0->全部；1->移动；2->PC
	Count        int32  `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                //数量
	Amount       int64  `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`              //金额
	PerLimit     int32  `protobuf:"varint,7,opt,name=PerLimit,proto3" json:"PerLimit,omitempty"`          //每人限领张数
	MinPoint     int64  `protobuf:"varint,8,opt,name=MinPoint,proto3" json:"MinPoint,omitempty"`          //使用门槛；0表示无门槛
	StartTime    string `protobuf:"bytes,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`         //开始时间
	EndTime      string `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`            //结束时间
	UseType      int32  `protobuf:"varint,11,opt,name=UseType,proto3" json:"UseType,omitempty"`           //使用类型：0->全场通用；1->指定分类；2->指定商品
	Note         string `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`                  //备注
	PublishCount int32  `protobuf:"varint,13,opt,name=PublishCount,proto3" json:"PublishCount,omitempty"` //发行数量
	UseCount     int32  `protobuf:"varint,14,opt,name=UseCount,proto3" json:"UseCount,omitempty"`         //已使用数量
	ReceiveCount int32  `protobuf:"varint,15,opt,name=ReceiveCount,proto3" json:"ReceiveCount,omitempty"` //领取数量
	EnableTime   string `protobuf:"bytes,16,opt,name=EnableTime,proto3" json:"EnableTime,omitempty"`      //可以领取的日期
	Code         string `protobuf:"bytes,17,opt,name=Code,proto3" json:"Code,omitempty"`                  //优惠码
	MemberLevel  int32  `protobuf:"varint,18,opt,name=MemberLevel,proto3" json:"MemberLevel,omitempty"`   //可领取的会员类型：0->无限时
}

func (x *QueryCouponListData) Reset() {
	*x = QueryCouponListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponListData) ProtoMessage() {}

func (x *QueryCouponListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponListData.ProtoReflect.Descriptor instead.
func (*QueryCouponListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCouponListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponListData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryCouponListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCouponListData) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *QueryCouponListData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryCouponListData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QueryCouponListData) GetPerLimit() int32 {
	if x != nil {
		return x.PerLimit
	}
	return 0
}

func (x *QueryCouponListData) GetMinPoint() int64 {
	if x != nil {
		return x.MinPoint
	}
	return 0
}

func (x *QueryCouponListData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryCouponListData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryCouponListData) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *QueryCouponListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *QueryCouponListData) GetPublishCount() int32 {
	if x != nil {
		return x.PublishCount
	}
	return 0
}

func (x *QueryCouponListData) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *QueryCouponListData) GetReceiveCount() int32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

func (x *QueryCouponListData) GetEnableTime() string {
	if x != nil {
		return x.EnableTime
	}
	return ""
}

func (x *QueryCouponListData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryCouponListData) GetMemberLevel() int32 {
	if x != nil {
		return x.MemberLevel
	}
	return 0
}

type QueryCouponListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryCouponListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCouponListResp) Reset() {
	*x = QueryCouponListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponListResp) ProtoMessage() {}

func (x *QueryCouponListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponListResp.ProtoReflect.Descriptor instead.
func (*QueryCouponListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCouponListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCouponListResp) GetList() []*QueryCouponListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryCouponFindByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId int64 `protobuf:"varint,1,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
}

func (x *QueryCouponFindByIdReq) Reset() {
	*x = QueryCouponFindByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponFindByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponFindByIdReq) ProtoMessage() {}

func (x *QueryCouponFindByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponFindByIdReq.ProtoReflect.Descriptor instead.
func (*QueryCouponFindByIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{9}
}

func (x *QueryCouponFindByIdReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

type QueryCouponFindByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                int64                                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                               //
	Type                              int32                                `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                                                           //优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name                              string                               `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                                                            //名称
	Platform                          int32                                `protobuf:"varint,4,opt,name=Platform,proto3" json:"Platform,omitempty"`                                                   //使用平台：0->全部；1->移动；2->PC
	Count                             int32                                `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                                                         //数量
	Amount                            int64                                `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`                                                       //金额
	PerLimit                          int32                                `protobuf:"varint,7,opt,name=PerLimit,proto3" json:"PerLimit,omitempty"`                                                   //每人限领张数
	MinPoint                          int64                                `protobuf:"varint,8,opt,name=MinPoint,proto3" json:"MinPoint,omitempty"`                                                   //使用门槛；0表示无门槛
	StartTime                         string                               `protobuf:"bytes,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                                                  //开始时间
	EndTime                           string                               `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                                                     //结束时间
	UseType                           int32                                `protobuf:"varint,11,opt,name=UseType,proto3" json:"UseType,omitempty"`                                                    //使用类型：0->全场通用；1->指定分类；2->指定商品
	Note                              string                               `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`                                                           //备注
	PublishCount                      int32                                `protobuf:"varint,13,opt,name=PublishCount,proto3" json:"PublishCount,omitempty"`                                          //发行数量
	UseCount                          int32                                `protobuf:"varint,14,opt,name=UseCount,proto3" json:"UseCount,omitempty"`                                                  //已使用数量
	ReceiveCount                      int32                                `protobuf:"varint,15,opt,name=ReceiveCount,proto3" json:"ReceiveCount,omitempty"`                                          //领取数量
	EnableTime                        string                               `protobuf:"bytes,16,opt,name=EnableTime,proto3" json:"EnableTime,omitempty"`                                               //可以领取的日期
	Code                              string                               `protobuf:"bytes,17,opt,name=Code,proto3" json:"Code,omitempty"`                                                           //优惠码
	MemberLevel                       int32                                `protobuf:"varint,18,opt,name=MemberLevel,proto3" json:"MemberLevel,omitempty"`                                            //可领取的会员类型：0->无限时
	CouponProductRelationList         []*CouponProductRelationData         `protobuf:"bytes,19,rep,name=CouponProductRelationList,proto3" json:"CouponProductRelationList,omitempty"`                 //优惠券绑定的商品
	CouponProductCategoryRelationList []*CouponProductCategoryRelationData `protobuf:"bytes,20,rep,name=CouponProductCategoryRelationList,proto3" json:"CouponProductCategoryRelationList,omitempty"` //优惠券绑定的商品分类
}

func (x *QueryCouponFindByIdResp) Reset() {
	*x = QueryCouponFindByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponFindByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponFindByIdResp) ProtoMessage() {}

func (x *QueryCouponFindByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponFindByIdResp.ProtoReflect.Descriptor instead.
func (*QueryCouponFindByIdResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{10}
}

func (x *QueryCouponFindByIdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetPerLimit() int32 {
	if x != nil {
		return x.PerLimit
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetMinPoint() int64 {
	if x != nil {
		return x.MinPoint
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetPublishCount() int32 {
	if x != nil {
		return x.PublishCount
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetReceiveCount() int32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetEnableTime() string {
	if x != nil {
		return x.EnableTime
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryCouponFindByIdResp) GetMemberLevel() int32 {
	if x != nil {
		return x.MemberLevel
	}
	return 0
}

func (x *QueryCouponFindByIdResp) GetCouponProductRelationList() []*CouponProductRelationData {
	if x != nil {
		return x.CouponProductRelationList
	}
	return nil
}

func (x *QueryCouponFindByIdResp) GetCouponProductCategoryRelationList() []*CouponProductCategoryRelationData {
	if x != nil {
		return x.CouponProductCategoryRelationList
	}
	return nil
}

type QueryCouponFindByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponIds []int64 `protobuf:"varint,1,rep,packed,name=CouponIds,proto3" json:"CouponIds,omitempty"`
}

func (x *QueryCouponFindByIdsReq) Reset() {
	*x = QueryCouponFindByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponFindByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponFindByIdsReq) ProtoMessage() {}

func (x *QueryCouponFindByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponFindByIdsReq.ProtoReflect.Descriptor instead.
func (*QueryCouponFindByIdsReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{11}
}

func (x *QueryCouponFindByIdsReq) GetCouponIds() []int64 {
	if x != nil {
		return x.CouponIds
	}
	return nil
}

type QueryCouponFindByIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryCouponListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCouponFindByIdsResp) Reset() {
	*x = QueryCouponFindByIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponFindByIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponFindByIdsResp) ProtoMessage() {}

func (x *QueryCouponFindByIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponFindByIdsResp.ProtoReflect.Descriptor instead.
func (*QueryCouponFindByIdsResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{12}
}

func (x *QueryCouponFindByIdsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCouponFindByIdsResp) GetList() []*QueryCouponListData {
	if x != nil {
		return x.List
	}
	return nil
}

type CouponFindByProductIdAndProductCategoryIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId         int64 `protobuf:"varint,1,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductCategoryId int64 `protobuf:"varint,2,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
}

func (x *CouponFindByProductIdAndProductCategoryIdReq) Reset() {
	*x = CouponFindByProductIdAndProductCategoryIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponFindByProductIdAndProductCategoryIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponFindByProductIdAndProductCategoryIdReq) ProtoMessage() {}

func (x *CouponFindByProductIdAndProductCategoryIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponFindByProductIdAndProductCategoryIdReq.ProtoReflect.Descriptor instead.
func (*CouponFindByProductIdAndProductCategoryIdReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{13}
}

func (x *CouponFindByProductIdAndProductCategoryIdReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CouponFindByProductIdAndProductCategoryIdReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

type CouponFindByProductIdAndProductCategoryIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryCouponListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CouponFindByProductIdAndProductCategoryIdResp) Reset() {
	*x = CouponFindByProductIdAndProductCategoryIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponFindByProductIdAndProductCategoryIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponFindByProductIdAndProductCategoryIdResp) ProtoMessage() {}

func (x *CouponFindByProductIdAndProductCategoryIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponFindByProductIdAndProductCategoryIdResp.ProtoReflect.Descriptor instead.
func (*CouponFindByProductIdAndProductCategoryIdResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{14}
}

func (x *CouponFindByProductIdAndProductCategoryIdResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CouponFindByProductIdAndProductCategoryIdResp) GetList() []*QueryCouponListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加优惠券使用、领取历史表
type AddCouponHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponCode     string `protobuf:"bytes,1,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`             //优惠码
	CouponId       int64  `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                  //优惠券id
	GetType        int32  `protobuf:"varint,3,opt,name=get_type,json=getType,proto3" json:"get_type,omitempty"`                     //获取类型：0->后台赠送；1->主动获取
	MemberId       int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                  //会员id
	MemberNickname string `protobuf:"bytes,5,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"` //领取人昵称
	UseStatus      int32  `protobuf:"varint,6,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`               //使用状态：0->未使用；1->已使用；2->已过期
}

func (x *AddCouponHistoryReq) Reset() {
	*x = AddCouponHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCouponHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCouponHistoryReq) ProtoMessage() {}

func (x *AddCouponHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCouponHistoryReq.ProtoReflect.Descriptor instead.
func (*AddCouponHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{15}
}

func (x *AddCouponHistoryReq) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *AddCouponHistoryReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *AddCouponHistoryReq) GetGetType() int32 {
	if x != nil {
		return x.GetType
	}
	return 0
}

func (x *AddCouponHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddCouponHistoryReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *AddCouponHistoryReq) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type AddCouponHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddCouponHistoryResp) Reset() {
	*x = AddCouponHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCouponHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCouponHistoryResp) ProtoMessage() {}

func (x *AddCouponHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCouponHistoryResp.ProtoReflect.Descriptor instead.
func (*AddCouponHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{16}
}

func (x *AddCouponHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除优惠券使用、领取历史表
type DeleteCouponHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteCouponHistoryReq) Reset() {
	*x = DeleteCouponHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCouponHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponHistoryReq) ProtoMessage() {}

func (x *DeleteCouponHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteCouponHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteCouponHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteCouponHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteCouponHistoryResp) Reset() {
	*x = DeleteCouponHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCouponHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponHistoryResp) ProtoMessage() {}

func (x *DeleteCouponHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteCouponHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCouponHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新优惠券使用、领取历史表
type UpdateCouponHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponCode     string `protobuf:"bytes,1,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`             //优惠码
	CouponId       int64  `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                  //优惠券id
	CreateTime     string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             //领取时间
	GetType        int32  `protobuf:"varint,4,opt,name=get_type,json=getType,proto3" json:"get_type,omitempty"`                     //获取类型：0->后台赠送；1->主动获取
	Id             int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                              //
	MemberId       int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                  //会员id
	MemberNickname string `protobuf:"bytes,7,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"` //领取人昵称
	OrderId        int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                     //订单编号
	OrderSn        string `protobuf:"bytes,9,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                      //订单号码
	UseStatus      int32  `protobuf:"varint,10,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`              //使用状态：0->未使用；1->已使用；2->已过期
	UseTime        string `protobuf:"bytes,11,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                     //使用时间
}

func (x *UpdateCouponHistoryReq) Reset() {
	*x = UpdateCouponHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCouponHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponHistoryReq) ProtoMessage() {}

func (x *UpdateCouponHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponHistoryReq.ProtoReflect.Descriptor instead.
func (*UpdateCouponHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateCouponHistoryReq) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *UpdateCouponHistoryReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UpdateCouponHistoryReq) GetGetType() int32 {
	if x != nil {
		return x.GetType
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *UpdateCouponHistoryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *UpdateCouponHistoryReq) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

func (x *UpdateCouponHistoryReq) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

type UpdateCouponHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCouponHistoryResp) Reset() {
	*x = UpdateCouponHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCouponHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponHistoryResp) ProtoMessage() {}

func (x *UpdateCouponHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponHistoryResp.ProtoReflect.Descriptor instead.
func (*UpdateCouponHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateCouponHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新优惠券使用、领取历史表状态
type UpdateCouponHistoryStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId  int64 `protobuf:"varint,1,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`    //优惠券id
	MemberId  int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
	UseStatus int32 `protobuf:"varint,3,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` //使用状态：0->未使用；1->已使用；2->已过期
}

func (x *UpdateCouponHistoryStatusReq) Reset() {
	*x = UpdateCouponHistoryStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCouponHistoryStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponHistoryStatusReq) ProtoMessage() {}

func (x *UpdateCouponHistoryStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponHistoryStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateCouponHistoryStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateCouponHistoryStatusReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *UpdateCouponHistoryStatusReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateCouponHistoryStatusReq) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type UpdateCouponHistoryStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCouponHistoryStatusResp) Reset() {
	*x = UpdateCouponHistoryStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCouponHistoryStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponHistoryStatusResp) ProtoMessage() {}

func (x *UpdateCouponHistoryStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponHistoryStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateCouponHistoryStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateCouponHistoryStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询优惠券使用、领取历史表详情
type QueryCouponHistoryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryCouponHistoryDetailReq) Reset() {
	*x = QueryCouponHistoryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponHistoryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponHistoryDetailReq) ProtoMessage() {}

func (x *QueryCouponHistoryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponHistoryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryCouponHistoryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{23}
}

func (x *QueryCouponHistoryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryCouponHistoryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponCode     string `protobuf:"bytes,1,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`             //优惠码
	CouponId       int64  `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                  //优惠券id
	CreateTime     string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             //领取时间
	GetType        int32  `protobuf:"varint,4,opt,name=get_type,json=getType,proto3" json:"get_type,omitempty"`                     //获取类型：0->后台赠送；1->主动获取
	Id             int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                              //
	MemberId       int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                  //会员id
	MemberNickname string `protobuf:"bytes,7,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"` //领取人昵称
	OrderId        int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                     //订单编号
	OrderSn        string `protobuf:"bytes,9,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                      //订单号码
	UseStatus      int32  `protobuf:"varint,10,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`              //使用状态：0->未使用；1->已使用；2->已过期
	UseTime        string `protobuf:"bytes,11,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                     //使用时间
}

func (x *QueryCouponHistoryDetailResp) Reset() {
	*x = QueryCouponHistoryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponHistoryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponHistoryDetailResp) ProtoMessage() {}

func (x *QueryCouponHistoryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponHistoryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryCouponHistoryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{24}
}

func (x *QueryCouponHistoryDetailResp) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *QueryCouponHistoryDetailResp) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryCouponHistoryDetailResp) GetGetType() int32 {
	if x != nil {
		return x.GetType
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *QueryCouponHistoryDetailResp) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *QueryCouponHistoryDetailResp) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

func (x *QueryCouponHistoryDetailResp) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

// 分页查询优惠券使用、领取历史表列表
type QueryCouponHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
	CouponId  int64  `protobuf:"varint,3,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`    //优惠券id
	MemberId  int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
	OrderSn   string `protobuf:"bytes,5,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`        //订单号码
	UseStatus int32  `protobuf:"varint,6,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` //使用状态：0->未使用；1->已使用；2->已过期
}

func (x *QueryCouponHistoryListReq) Reset() {
	*x = QueryCouponHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponHistoryListReq) ProtoMessage() {}

func (x *QueryCouponHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryCouponHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{25}
}

func (x *QueryCouponHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryCouponHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryCouponHistoryListReq) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *QueryCouponHistoryListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryCouponHistoryListReq) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *QueryCouponHistoryListReq) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type CouponHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponCode     string `protobuf:"bytes,1,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`             //优惠码
	CouponId       int64  `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                  //优惠券id
	CreateTime     string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             //领取时间
	GetType        int32  `protobuf:"varint,4,opt,name=get_type,json=getType,proto3" json:"get_type,omitempty"`                     //获取类型：0->后台赠送；1->主动获取
	Id             int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                              //
	MemberId       int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                  //会员id
	MemberNickname string `protobuf:"bytes,7,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"` //领取人昵称
	OrderId        int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                     //订单编号
	OrderSn        string `protobuf:"bytes,9,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`                      //订单号码
	UseStatus      int32  `protobuf:"varint,10,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`              //使用状态：0->未使用；1->已使用；2->已过期
	UseTime        string `protobuf:"bytes,11,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                     //使用时间
}

func (x *CouponHistoryListData) Reset() {
	*x = CouponHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponHistoryListData) ProtoMessage() {}

func (x *CouponHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponHistoryListData.ProtoReflect.Descriptor instead.
func (*CouponHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{26}
}

func (x *CouponHistoryListData) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CouponHistoryListData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CouponHistoryListData) GetGetType() int32 {
	if x != nil {
		return x.GetType
	}
	return 0
}

func (x *CouponHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponHistoryListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CouponHistoryListData) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *CouponHistoryListData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CouponHistoryListData) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *CouponHistoryListData) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

func (x *CouponHistoryListData) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

type QueryCouponHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*CouponHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCouponHistoryListResp) Reset() {
	*x = QueryCouponHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponHistoryListResp) ProtoMessage() {}

func (x *QueryCouponHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryCouponHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{27}
}

func (x *QueryCouponHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCouponHistoryListResp) GetList() []*CouponHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryCouponCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
}

func (x *QueryCouponCountReq) Reset() {
	*x = QueryCouponCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponCountReq) ProtoMessage() {}

func (x *QueryCouponCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponCountReq.ProtoReflect.Descriptor instead.
func (*QueryCouponCountReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{28}
}

func (x *QueryCouponCountReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryCouponCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryCouponCountResp) Reset() {
	*x = QueryCouponCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponCountResp) ProtoMessage() {}

func (x *QueryCouponCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponCountResp.ProtoReflect.Descriptor instead.
func (*QueryCouponCountResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{29}
}

func (x *QueryCouponCountResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryMemberCouponListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId  int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	UseStatus int32 `protobuf:"varint,2,opt,name=UseStatus,proto3" json:"UseStatus,omitempty"`
}

func (x *QueryMemberCouponListReq) Reset() {
	*x = QueryMemberCouponListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberCouponListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberCouponListReq) ProtoMessage() {}

func (x *QueryMemberCouponListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberCouponListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberCouponListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{30}
}

func (x *QueryMemberCouponListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberCouponListReq) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type QueryCouponData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                      //
	Type         int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                  //优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                   //名称
	Platform     int32  `protobuf:"varint,4,opt,name=Platform,proto3" json:"Platform,omitempty"`          //使用平台：0->全部；1->移动；2->PC
	Count        int32  `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                //数量
	Amount       int64  `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`              //金额
	PerLimit     int32  `protobuf:"varint,7,opt,name=PerLimit,proto3" json:"PerLimit,omitempty"`          //每人限领张数
	MinPoint     int64  `protobuf:"varint,8,opt,name=MinPoint,proto3" json:"MinPoint,omitempty"`          //使用门槛；0表示无门槛
	StartTime    string `protobuf:"bytes,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`         //开始时间
	EndTime      string `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`            //结束时间
	UseType      int32  `protobuf:"varint,11,opt,name=UseType,proto3" json:"UseType,omitempty"`           //使用类型：0->全场通用；1->指定分类；2->指定商品
	Note         string `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`                  //备注
	PublishCount int32  `protobuf:"varint,13,opt,name=PublishCount,proto3" json:"PublishCount,omitempty"` //发行数量
	UseCount     int32  `protobuf:"varint,14,opt,name=UseCount,proto3" json:"UseCount,omitempty"`         //已使用数量
	ReceiveCount int32  `protobuf:"varint,15,opt,name=ReceiveCount,proto3" json:"ReceiveCount,omitempty"` //领取数量
	EnableTime   string `protobuf:"bytes,16,opt,name=EnableTime,proto3" json:"EnableTime,omitempty"`      //可以领取的日期
	Code         string `protobuf:"bytes,17,opt,name=Code,proto3" json:"Code,omitempty"`                  //优惠码
	MemberLevel  int32  `protobuf:"varint,18,opt,name=MemberLevel,proto3" json:"MemberLevel,omitempty"`   //可领取的会员类型：0->无限时
}

func (x *QueryCouponData) Reset() {
	*x = QueryCouponData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponData) ProtoMessage() {}

func (x *QueryCouponData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponData.ProtoReflect.Descriptor instead.
func (*QueryCouponData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{31}
}

func (x *QueryCouponData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryCouponData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCouponData) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *QueryCouponData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *QueryCouponData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QueryCouponData) GetPerLimit() int32 {
	if x != nil {
		return x.PerLimit
	}
	return 0
}

func (x *QueryCouponData) GetMinPoint() int64 {
	if x != nil {
		return x.MinPoint
	}
	return 0
}

func (x *QueryCouponData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryCouponData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryCouponData) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *QueryCouponData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *QueryCouponData) GetPublishCount() int32 {
	if x != nil {
		return x.PublishCount
	}
	return 0
}

func (x *QueryCouponData) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *QueryCouponData) GetReceiveCount() int32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

func (x *QueryCouponData) GetEnableTime() string {
	if x != nil {
		return x.EnableTime
	}
	return ""
}

func (x *QueryCouponData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryCouponData) GetMemberLevel() int32 {
	if x != nil {
		return x.MemberLevel
	}
	return 0
}

type QueryMemberCouponListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*QueryCouponData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberCouponListResp) Reset() {
	*x = QueryMemberCouponListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberCouponListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberCouponListResp) ProtoMessage() {}

func (x *QueryMemberCouponListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberCouponListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberCouponListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{32}
}

func (x *QueryMemberCouponListResp) GetList() []*QueryCouponData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryCouponHistoryDetailListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
}

func (x *QueryCouponHistoryDetailListReq) Reset() {
	*x = QueryCouponHistoryDetailListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponHistoryDetailListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponHistoryDetailListReq) ProtoMessage() {}

func (x *QueryCouponHistoryDetailListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponHistoryDetailListReq.ProtoReflect.Descriptor instead.
func (*QueryCouponHistoryDetailListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{33}
}

func (x *QueryCouponHistoryDetailListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryCouponProductCategoryRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CouponId            int64  `protobuf:"varint,2,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	ProductCategoryId   int64  `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	ProductCategoryName string `protobuf:"bytes,4,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
	ParentCategoryName  string `protobuf:"bytes,5,opt,name=ParentCategoryName,proto3" json:"ParentCategoryName,omitempty"`
}

func (x *QueryCouponProductCategoryRelationListData) Reset() {
	*x = QueryCouponProductCategoryRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponProductCategoryRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponProductCategoryRelationListData) ProtoMessage() {}

func (x *QueryCouponProductCategoryRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponProductCategoryRelationListData.ProtoReflect.Descriptor instead.
func (*QueryCouponProductCategoryRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{34}
}

func (x *QueryCouponProductCategoryRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponProductCategoryRelationListData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *QueryCouponProductCategoryRelationListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *QueryCouponProductCategoryRelationListData) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *QueryCouponProductCategoryRelationListData) GetParentCategoryName() string {
	if x != nil {
		return x.ParentCategoryName
	}
	return ""
}

type QueryCouponProductRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CouponId    int64  `protobuf:"varint,2,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	ProductId   int64  `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	ProductName string `protobuf:"bytes,4,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	ProductSn   string `protobuf:"bytes,5,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
}

func (x *QueryCouponProductRelationListData) Reset() {
	*x = QueryCouponProductRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCouponProductRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCouponProductRelationListData) ProtoMessage() {}

func (x *QueryCouponProductRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCouponProductRelationListData.ProtoReflect.Descriptor instead.
func (*QueryCouponProductRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{35}
}

func (x *QueryCouponProductRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCouponProductRelationListData) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *QueryCouponProductRelationListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryCouponProductRelationListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryCouponProductRelationListData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type CouponHistoryDetailListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponHistoryListData *CouponHistoryListData                        `protobuf:"bytes,1,opt,name=couponHistoryListData,proto3" json:"couponHistoryListData,omitempty"` //用户领取的优惠券
	CouponListData        *QueryCouponData                              `protobuf:"bytes,2,opt,name=couponListData,proto3" json:"couponListData,omitempty"`               //优惠券
	ProductRelationList   []*QueryCouponProductRelationListData         `protobuf:"bytes,3,rep,name=productRelationList,proto3" json:"productRelationList,omitempty"`     //商品和优惠券的关联关糸
	CategoryRelationList  []*QueryCouponProductCategoryRelationListData `protobuf:"bytes,4,rep,name=categoryRelationList,proto3" json:"categoryRelationList,omitempty"`   //商品分类和优惠券的关联关糸
}

func (x *CouponHistoryDetailListData) Reset() {
	*x = CouponHistoryDetailListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponHistoryDetailListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponHistoryDetailListData) ProtoMessage() {}

func (x *CouponHistoryDetailListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponHistoryDetailListData.ProtoReflect.Descriptor instead.
func (*CouponHistoryDetailListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{36}
}

func (x *CouponHistoryDetailListData) GetCouponHistoryListData() *CouponHistoryListData {
	if x != nil {
		return x.CouponHistoryListData
	}
	return nil
}

func (x *CouponHistoryDetailListData) GetCouponListData() *QueryCouponData {
	if x != nil {
		return x.CouponListData
	}
	return nil
}

func (x *CouponHistoryDetailListData) GetProductRelationList() []*QueryCouponProductRelationListData {
	if x != nil {
		return x.ProductRelationList
	}
	return nil
}

func (x *CouponHistoryDetailListData) GetCategoryRelationList() []*QueryCouponProductCategoryRelationListData {
	if x != nil {
		return x.CategoryRelationList
	}
	return nil
}

type CouponHistoryDetailListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CouponHistoryDetailListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CouponHistoryDetailListResp) Reset() {
	*x = CouponHistoryDetailListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponHistoryDetailListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponHistoryDetailListResp) ProtoMessage() {}

func (x *CouponHistoryDetailListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponHistoryDetailListResp.ProtoReflect.Descriptor instead.
func (*CouponHistoryDetailListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{37}
}

func (x *CouponHistoryDetailListResp) GetList() []*CouponHistoryDetailListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加限时购表
type AddFlashPromotionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndDate   string `protobuf:"bytes,1,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       //结束日期
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` //开始日期
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                       //上下线状态
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                          //标题
}

func (x *AddFlashPromotionReq) Reset() {
	*x = AddFlashPromotionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionReq) ProtoMessage() {}

func (x *AddFlashPromotionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionReq.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{38}
}

func (x *AddFlashPromotionReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AddFlashPromotionReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AddFlashPromotionReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddFlashPromotionReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddFlashPromotionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddFlashPromotionResp) Reset() {
	*x = AddFlashPromotionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionResp) ProtoMessage() {}

func (x *AddFlashPromotionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionResp.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{39}
}

func (x *AddFlashPromotionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除限时购表
type DeleteFlashPromotionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteFlashPromotionReq) Reset() {
	*x = DeleteFlashPromotionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionReq) ProtoMessage() {}

func (x *DeleteFlashPromotionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionReq.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteFlashPromotionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteFlashPromotionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteFlashPromotionResp) Reset() {
	*x = DeleteFlashPromotionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionResp) ProtoMessage() {}

func (x *DeleteFlashPromotionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionResp.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteFlashPromotionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新限时购表
type UpdateFlashPromotionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                          //标题
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       //结束日期
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                               //编号
	StartDate string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` //开始日期
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                       //上下线状态
}

func (x *UpdateFlashPromotionReq) Reset() {
	*x = UpdateFlashPromotionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionReq) ProtoMessage() {}

func (x *UpdateFlashPromotionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionReq.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateFlashPromotionReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateFlashPromotionReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdateFlashPromotionReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFlashPromotionReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateFlashPromotionReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateFlashPromotionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateFlashPromotionResp) Reset() {
	*x = UpdateFlashPromotionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionResp) ProtoMessage() {}

func (x *UpdateFlashPromotionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionResp.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateFlashPromotionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新限时购表状态
type UpdateFlashPromotionStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"` //编号
	Status int32   `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`  //上下线状态
}

func (x *UpdateFlashPromotionStatusReq) Reset() {
	*x = UpdateFlashPromotionStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionStatusReq) ProtoMessage() {}

func (x *UpdateFlashPromotionStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateFlashPromotionStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateFlashPromotionStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateFlashPromotionStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateFlashPromotionStatusResp) Reset() {
	*x = UpdateFlashPromotionStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionStatusResp) ProtoMessage() {}

func (x *UpdateFlashPromotionStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateFlashPromotionStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询限时购表详情
type QueryFlashPromotionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryFlashPromotionDetailReq) Reset() {
	*x = QueryFlashPromotionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionDetailReq) ProtoMessage() {}

func (x *QueryFlashPromotionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{46}
}

func (x *QueryFlashPromotionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryFlashPromotionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	EndDate    string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`          //结束日期
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                  //编号
	StartDate  string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`    //开始日期
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态
	Title      string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                             //标题
}

func (x *QueryFlashPromotionDetailResp) Reset() {
	*x = QueryFlashPromotionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionDetailResp) ProtoMessage() {}

func (x *QueryFlashPromotionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{47}
}

func (x *QueryFlashPromotionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryFlashPromotionDetailResp) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *QueryFlashPromotionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryFlashPromotionDetailResp) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *QueryFlashPromotionDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryFlashPromotionDetailResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 分页查询限时购表列表
type QueryFlashPromotionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`      //第几页
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   //每页的数量
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       //结束日期
	StartDate string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` //开始日期
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                       //上下线状态
	Title     string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                          //标题
}

func (x *QueryFlashPromotionListReq) Reset() {
	*x = QueryFlashPromotionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionListReq) ProtoMessage() {}

func (x *QueryFlashPromotionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionListReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{48}
}

func (x *QueryFlashPromotionListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryFlashPromotionListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryFlashPromotionListReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *QueryFlashPromotionListReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *QueryFlashPromotionListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryFlashPromotionListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type FlashPromotionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	EndDate    string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`          //结束日期
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                  //编号
	StartDate  string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`    //开始日期
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态
	Title      string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                             //标题
}

func (x *FlashPromotionListData) Reset() {
	*x = FlashPromotionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashPromotionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashPromotionListData) ProtoMessage() {}

func (x *FlashPromotionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashPromotionListData.ProtoReflect.Descriptor instead.
func (*FlashPromotionListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{49}
}

func (x *FlashPromotionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *FlashPromotionListData) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *FlashPromotionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlashPromotionListData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *FlashPromotionListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FlashPromotionListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type QueryFlashPromotionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*FlashPromotionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionListResp) Reset() {
	*x = QueryFlashPromotionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionListResp) ProtoMessage() {}

func (x *QueryFlashPromotionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionListResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{50}
}

func (x *QueryFlashPromotionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryFlashPromotionListResp) GetList() []*FlashPromotionListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryFlashPromotionListByDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDate string `protobuf:"bytes,1,opt,name=currentDate,proto3" json:"currentDate,omitempty"`
}

func (x *QueryFlashPromotionListByDateReq) Reset() {
	*x = QueryFlashPromotionListByDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionListByDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionListByDateReq) ProtoMessage() {}

func (x *QueryFlashPromotionListByDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionListByDateReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionListByDateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{51}
}

func (x *QueryFlashPromotionListByDateReq) GetCurrentDate() string {
	if x != nil {
		return x.CurrentDate
	}
	return ""
}

type QueryFlashPromotionListByDateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FlashPromotionListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionListByDateResp) Reset() {
	*x = QueryFlashPromotionListByDateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionListByDateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionListByDateResp) ProtoMessage() {}

func (x *QueryFlashPromotionListByDateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionListByDateResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionListByDateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{52}
}

func (x *QueryFlashPromotionListByDateResp) GetList() []*FlashPromotionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加限时购通知记录
type AddFlashPromotionLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscribeTime string `protobuf:"bytes,1,opt,name=subscribe_time,json=subscribeTime,proto3" json:"subscribe_time,omitempty"` //会员订阅时间
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员id
	MemberPhone   string `protobuf:"bytes,3,opt,name=member_phone,json=memberPhone,proto3" json:"member_phone,omitempty"`       //会员电话
	ProductId     int64  `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`            //商品id
	ProductName   string `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`       //商品名称
	SendTime      string `protobuf:"bytes,6,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                //发送时间
}

func (x *AddFlashPromotionLogReq) Reset() {
	*x = AddFlashPromotionLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionLogReq) ProtoMessage() {}

func (x *AddFlashPromotionLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionLogReq.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{53}
}

func (x *AddFlashPromotionLogReq) GetSubscribeTime() string {
	if x != nil {
		return x.SubscribeTime
	}
	return ""
}

func (x *AddFlashPromotionLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddFlashPromotionLogReq) GetMemberPhone() string {
	if x != nil {
		return x.MemberPhone
	}
	return ""
}

func (x *AddFlashPromotionLogReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddFlashPromotionLogReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddFlashPromotionLogReq) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

type AddFlashPromotionLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddFlashPromotionLogResp) Reset() {
	*x = AddFlashPromotionLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionLogResp) ProtoMessage() {}

func (x *AddFlashPromotionLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionLogResp.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{54}
}

func (x *AddFlashPromotionLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除限时购通知记录
type DeleteFlashPromotionLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteFlashPromotionLogReq) Reset() {
	*x = DeleteFlashPromotionLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionLogReq) ProtoMessage() {}

func (x *DeleteFlashPromotionLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionLogReq.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteFlashPromotionLogReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteFlashPromotionLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteFlashPromotionLogResp) Reset() {
	*x = DeleteFlashPromotionLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionLogResp) ProtoMessage() {}

func (x *DeleteFlashPromotionLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionLogResp.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteFlashPromotionLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询限时购通知记录详情
type QueryFlashPromotionLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryFlashPromotionLogDetailReq) Reset() {
	*x = QueryFlashPromotionLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionLogDetailReq) ProtoMessage() {}

func (x *QueryFlashPromotionLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionLogDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{57}
}

func (x *QueryFlashPromotionLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryFlashPromotionLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员id
	MemberPhone   string `protobuf:"bytes,3,opt,name=member_phone,json=memberPhone,proto3" json:"member_phone,omitempty"`       //会员电话
	ProductId     int64  `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`            //商品id
	ProductName   string `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`       //商品名称
	SendTime      string `protobuf:"bytes,6,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                //发送时间
	SubscribeTime string `protobuf:"bytes,7,opt,name=subscribe_time,json=subscribeTime,proto3" json:"subscribe_time,omitempty"` //会员订阅时间
}

func (x *QueryFlashPromotionLogDetailResp) Reset() {
	*x = QueryFlashPromotionLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionLogDetailResp) ProtoMessage() {}

func (x *QueryFlashPromotionLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionLogDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{58}
}

func (x *QueryFlashPromotionLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryFlashPromotionLogDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryFlashPromotionLogDetailResp) GetMemberPhone() string {
	if x != nil {
		return x.MemberPhone
	}
	return ""
}

func (x *QueryFlashPromotionLogDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryFlashPromotionLogDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryFlashPromotionLogDetailResp) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *QueryFlashPromotionLogDetailResp) GetSubscribeTime() string {
	if x != nil {
		return x.SubscribeTime
	}
	return ""
}

// 分页查询限时购通知记录列表
type QueryFlashPromotionLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum     int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`            //第几页
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         //每页的数量
	MemberPhone string `protobuf:"bytes,3,opt,name=member_phone,json=memberPhone,proto3" json:"member_phone,omitempty"` //会员电话
	ProductName string `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"` //商品名称
}

func (x *QueryFlashPromotionLogListReq) Reset() {
	*x = QueryFlashPromotionLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionLogListReq) ProtoMessage() {}

func (x *QueryFlashPromotionLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionLogListReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{59}
}

func (x *QueryFlashPromotionLogListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryFlashPromotionLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryFlashPromotionLogListReq) GetMemberPhone() string {
	if x != nil {
		return x.MemberPhone
	}
	return ""
}

func (x *QueryFlashPromotionLogListReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type FlashPromotionLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员id
	MemberPhone   string `protobuf:"bytes,3,opt,name=member_phone,json=memberPhone,proto3" json:"member_phone,omitempty"`       //会员电话
	ProductId     int64  `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`            //商品id
	ProductName   string `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`       //商品名称
	SendTime      string `protobuf:"bytes,6,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                //发送时间
	SubscribeTime string `protobuf:"bytes,7,opt,name=subscribe_time,json=subscribeTime,proto3" json:"subscribe_time,omitempty"` //会员订阅时间
}

func (x *FlashPromotionLogListData) Reset() {
	*x = FlashPromotionLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashPromotionLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashPromotionLogListData) ProtoMessage() {}

func (x *FlashPromotionLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashPromotionLogListData.ProtoReflect.Descriptor instead.
func (*FlashPromotionLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{60}
}

func (x *FlashPromotionLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlashPromotionLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *FlashPromotionLogListData) GetMemberPhone() string {
	if x != nil {
		return x.MemberPhone
	}
	return ""
}

func (x *FlashPromotionLogListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *FlashPromotionLogListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *FlashPromotionLogListData) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *FlashPromotionLogListData) GetSubscribeTime() string {
	if x != nil {
		return x.SubscribeTime
	}
	return ""
}

type QueryFlashPromotionLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*FlashPromotionLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionLogListResp) Reset() {
	*x = QueryFlashPromotionLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionLogListResp) ProtoMessage() {}

func (x *QueryFlashPromotionLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionLogListResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{61}
}

func (x *QueryFlashPromotionLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryFlashPromotionLogListResp) GetList() []*FlashPromotionLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加商品限时购与商品关系表
type AddFlashPromotionProductRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FlashPromotionProductRelationAddData `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AddFlashPromotionProductRelationReq) Reset() {
	*x = AddFlashPromotionProductRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionProductRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionProductRelationReq) ProtoMessage() {}

func (x *AddFlashPromotionProductRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionProductRelationReq.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionProductRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{62}
}

func (x *AddFlashPromotionProductRelationReq) GetData() []*FlashPromotionProductRelationAddData {
	if x != nil {
		return x.Data
	}
	return nil
}

type FlashPromotionProductRelationAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashPromotionId        int64 `protobuf:"varint,1,opt,name=FlashPromotionId,proto3" json:"FlashPromotionId,omitempty"`               //限时购id
	FlashPromotionSessionId int64 `protobuf:"varint,2,opt,name=FlashPromotionSessionId,proto3" json:"FlashPromotionSessionId,omitempty"` //编号
	ProductId               int64 `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`                             //商品id
	FlashPromotionPrice     int64 `protobuf:"varint,4,opt,name=FlashPromotionPrice,proto3" json:"FlashPromotionPrice,omitempty"`         //限时购价格
	FlashPromotionCount     int32 `protobuf:"varint,5,opt,name=FlashPromotionCount,proto3" json:"FlashPromotionCount,omitempty"`         //限时购数量
	FlashPromotionLimit     int32 `protobuf:"varint,6,opt,name=FlashPromotionLimit,proto3" json:"FlashPromotionLimit,omitempty"`         //每人限购数量
	Sort                    int32 `protobuf:"varint,7,opt,name=Sort,proto3" json:"Sort,omitempty"`                                       //排序
}

func (x *FlashPromotionProductRelationAddData) Reset() {
	*x = FlashPromotionProductRelationAddData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashPromotionProductRelationAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashPromotionProductRelationAddData) ProtoMessage() {}

func (x *FlashPromotionProductRelationAddData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashPromotionProductRelationAddData.ProtoReflect.Descriptor instead.
func (*FlashPromotionProductRelationAddData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{63}
}

func (x *FlashPromotionProductRelationAddData) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetFlashPromotionSessionId() int64 {
	if x != nil {
		return x.FlashPromotionSessionId
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetFlashPromotionPrice() int64 {
	if x != nil {
		return x.FlashPromotionPrice
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetFlashPromotionCount() int32 {
	if x != nil {
		return x.FlashPromotionCount
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetFlashPromotionLimit() int32 {
	if x != nil {
		return x.FlashPromotionLimit
	}
	return 0
}

func (x *FlashPromotionProductRelationAddData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddFlashPromotionProductRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddFlashPromotionProductRelationResp) Reset() {
	*x = AddFlashPromotionProductRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionProductRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionProductRelationResp) ProtoMessage() {}

func (x *AddFlashPromotionProductRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionProductRelationResp.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionProductRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{64}
}

func (x *AddFlashPromotionProductRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除商品限时购与商品关系表
type DeleteFlashPromotionProductRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids              []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	FlashPromotionId int64   `protobuf:"varint,2,opt,name=FlashPromotionId,proto3" json:"FlashPromotionId,omitempty"`
}

func (x *DeleteFlashPromotionProductRelationReq) Reset() {
	*x = DeleteFlashPromotionProductRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionProductRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionProductRelationReq) ProtoMessage() {}

func (x *DeleteFlashPromotionProductRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionProductRelationReq.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionProductRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteFlashPromotionProductRelationReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteFlashPromotionProductRelationReq) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

type DeleteFlashPromotionProductRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteFlashPromotionProductRelationResp) Reset() {
	*x = DeleteFlashPromotionProductRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionProductRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionProductRelationResp) ProtoMessage() {}

func (x *DeleteFlashPromotionProductRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionProductRelationResp.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionProductRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteFlashPromotionProductRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新商品限时购与商品关系表
type UpdateFlashPromotionProductRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashPromotionCount     int32 `protobuf:"varint,1,opt,name=flash_promotion_count,json=flashPromotionCount,proto3" json:"flash_promotion_count,omitempty"`               //限时购数量
	FlashPromotionId        int64 `protobuf:"varint,2,opt,name=flash_promotion_id,json=flashPromotionId,proto3" json:"flash_promotion_id,omitempty"`                        //限时购id
	FlashPromotionLimit     int32 `protobuf:"varint,3,opt,name=flash_promotion_limit,json=flashPromotionLimit,proto3" json:"flash_promotion_limit,omitempty"`               //每人限购数量
	FlashPromotionPrice     int64 `protobuf:"varint,4,opt,name=flash_promotion_price,json=flashPromotionPrice,proto3" json:"flash_promotion_price,omitempty"`               //限时购价格
	FlashPromotionSessionId int64 `protobuf:"varint,5,opt,name=flash_promotion_session_id,json=flashPromotionSessionId,proto3" json:"flash_promotion_session_id,omitempty"` //编号
	Id                      int64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                                              //编号
	ProductId               int64 `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                                               //商品id
	Sort                    int32 `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                                                                          //排序
}

func (x *UpdateFlashPromotionProductRelationReq) Reset() {
	*x = UpdateFlashPromotionProductRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionProductRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionProductRelationReq) ProtoMessage() {}

func (x *UpdateFlashPromotionProductRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionProductRelationReq.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionProductRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateFlashPromotionProductRelationReq) GetFlashPromotionCount() int32 {
	if x != nil {
		return x.FlashPromotionCount
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetFlashPromotionLimit() int32 {
	if x != nil {
		return x.FlashPromotionLimit
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetFlashPromotionPrice() int64 {
	if x != nil {
		return x.FlashPromotionPrice
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetFlashPromotionSessionId() int64 {
	if x != nil {
		return x.FlashPromotionSessionId
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateFlashPromotionProductRelationReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateFlashPromotionProductRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateFlashPromotionProductRelationResp) Reset() {
	*x = UpdateFlashPromotionProductRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionProductRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionProductRelationResp) ProtoMessage() {}

func (x *UpdateFlashPromotionProductRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionProductRelationResp.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionProductRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateFlashPromotionProductRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询商品限时购与商品关系表详情
type QueryFlashPromotionProductRelationDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品id
}

func (x *QueryFlashPromotionProductRelationDetailReq) Reset() {
	*x = QueryFlashPromotionProductRelationDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionProductRelationDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionProductRelationDetailReq) ProtoMessage() {}

func (x *QueryFlashPromotionProductRelationDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionProductRelationDetailReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionProductRelationDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{69}
}

func (x *QueryFlashPromotionProductRelationDetailReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type QueryFlashPromotionProductRelationDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashPromotionCount     int32 `protobuf:"varint,1,opt,name=flash_promotion_count,json=flashPromotionCount,proto3" json:"flash_promotion_count,omitempty"`               //限时购数量
	FlashPromotionId        int64 `protobuf:"varint,2,opt,name=flash_promotion_id,json=flashPromotionId,proto3" json:"flash_promotion_id,omitempty"`                        //限时购id
	FlashPromotionLimit     int32 `protobuf:"varint,3,opt,name=flash_promotion_limit,json=flashPromotionLimit,proto3" json:"flash_promotion_limit,omitempty"`               //每人限购数量
	FlashPromotionPrice     int64 `protobuf:"varint,4,opt,name=flash_promotion_price,json=flashPromotionPrice,proto3" json:"flash_promotion_price,omitempty"`               //限时购价格
	FlashPromotionSessionId int64 `protobuf:"varint,5,opt,name=flash_promotion_session_id,json=flashPromotionSessionId,proto3" json:"flash_promotion_session_id,omitempty"` //编号
	Id                      int64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                                              //编号
	ProductId               int64 `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                                               //商品id
	Sort                    int32 `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                                                                          //排序
}

func (x *QueryFlashPromotionProductRelationDetailResp) Reset() {
	*x = QueryFlashPromotionProductRelationDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionProductRelationDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionProductRelationDetailResp) ProtoMessage() {}

func (x *QueryFlashPromotionProductRelationDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionProductRelationDetailResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionProductRelationDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{70}
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetFlashPromotionCount() int32 {
	if x != nil {
		return x.FlashPromotionCount
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetFlashPromotionLimit() int32 {
	if x != nil {
		return x.FlashPromotionLimit
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetFlashPromotionPrice() int64 {
	if x != nil {
		return x.FlashPromotionPrice
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetFlashPromotionSessionId() int64 {
	if x != nil {
		return x.FlashPromotionSessionId
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 分页查询商品限时购与商品关系表列表
type QueryFlashPromotionProductRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum                 int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                                                     //第几页
	PageSize                int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                                  //每页的数量
	FlashPromotionId        int64 `protobuf:"varint,3,opt,name=flash_promotion_id,json=flashPromotionId,proto3" json:"flash_promotion_id,omitempty"`                        //限时购id
	FlashPromotionSessionId int64 `protobuf:"varint,4,opt,name=flash_promotion_session_id,json=flashPromotionSessionId,proto3" json:"flash_promotion_session_id,omitempty"` //编号
}

func (x *QueryFlashPromotionProductRelationListReq) Reset() {
	*x = QueryFlashPromotionProductRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionProductRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionProductRelationListReq) ProtoMessage() {}

func (x *QueryFlashPromotionProductRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionProductRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionProductRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{71}
}

func (x *QueryFlashPromotionProductRelationListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationListReq) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationListReq) GetFlashPromotionSessionId() int64 {
	if x != nil {
		return x.FlashPromotionSessionId
	}
	return 0
}

type FlashPromotionProductRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashPromotionCount     int32 `protobuf:"varint,1,opt,name=flash_promotion_count,json=flashPromotionCount,proto3" json:"flash_promotion_count,omitempty"`               //限时购数量
	FlashPromotionId        int64 `protobuf:"varint,2,opt,name=flash_promotion_id,json=flashPromotionId,proto3" json:"flash_promotion_id,omitempty"`                        //限时购id
	FlashPromotionLimit     int32 `protobuf:"varint,3,opt,name=flash_promotion_limit,json=flashPromotionLimit,proto3" json:"flash_promotion_limit,omitempty"`               //每人限购数量
	FlashPromotionPrice     int64 `protobuf:"varint,4,opt,name=flash_promotion_price,json=flashPromotionPrice,proto3" json:"flash_promotion_price,omitempty"`               //限时购价格
	FlashPromotionSessionId int64 `protobuf:"varint,5,opt,name=flash_promotion_session_id,json=flashPromotionSessionId,proto3" json:"flash_promotion_session_id,omitempty"` //编号
	Id                      int64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                                              //编号
	ProductId               int64 `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                                               //商品id
	Sort                    int32 `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                                                                          //排序
}

func (x *FlashPromotionProductRelationListData) Reset() {
	*x = FlashPromotionProductRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashPromotionProductRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashPromotionProductRelationListData) ProtoMessage() {}

func (x *FlashPromotionProductRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashPromotionProductRelationListData.ProtoReflect.Descriptor instead.
func (*FlashPromotionProductRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{72}
}

func (x *FlashPromotionProductRelationListData) GetFlashPromotionCount() int32 {
	if x != nil {
		return x.FlashPromotionCount
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetFlashPromotionId() int64 {
	if x != nil {
		return x.FlashPromotionId
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetFlashPromotionLimit() int32 {
	if x != nil {
		return x.FlashPromotionLimit
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetFlashPromotionPrice() int64 {
	if x != nil {
		return x.FlashPromotionPrice
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetFlashPromotionSessionId() int64 {
	if x != nil {
		return x.FlashPromotionSessionId
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *FlashPromotionProductRelationListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type QueryFlashPromotionProductRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*FlashPromotionProductRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionProductRelationListResp) Reset() {
	*x = QueryFlashPromotionProductRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionProductRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionProductRelationListResp) ProtoMessage() {}

func (x *QueryFlashPromotionProductRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionProductRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionProductRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{73}
}

func (x *QueryFlashPromotionProductRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryFlashPromotionProductRelationListResp) GetList() []*FlashPromotionProductRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加限时购场次表
type AddFlashPromotionSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //每日开始时间
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //每日结束时间
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                       //启用状态：0->不启用；1->启用
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                            //场次名称
}

func (x *AddFlashPromotionSessionReq) Reset() {
	*x = AddFlashPromotionSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionSessionReq) ProtoMessage() {}

func (x *AddFlashPromotionSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionSessionReq.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionSessionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{74}
}

func (x *AddFlashPromotionSessionReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddFlashPromotionSessionReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddFlashPromotionSessionReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddFlashPromotionSessionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddFlashPromotionSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddFlashPromotionSessionResp) Reset() {
	*x = AddFlashPromotionSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFlashPromotionSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFlashPromotionSessionResp) ProtoMessage() {}

func (x *AddFlashPromotionSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFlashPromotionSessionResp.ProtoReflect.Descriptor instead.
func (*AddFlashPromotionSessionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{75}
}

func (x *AddFlashPromotionSessionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除限时购场次表
type DeleteFlashPromotionSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteFlashPromotionSessionReq) Reset() {
	*x = DeleteFlashPromotionSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionSessionReq) ProtoMessage() {}

func (x *DeleteFlashPromotionSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionSessionReq.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionSessionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{76}
}

func (x *DeleteFlashPromotionSessionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteFlashPromotionSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteFlashPromotionSessionResp) Reset() {
	*x = DeleteFlashPromotionSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlashPromotionSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlashPromotionSessionResp) ProtoMessage() {}

func (x *DeleteFlashPromotionSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlashPromotionSessionResp.ProtoReflect.Descriptor instead.
func (*DeleteFlashPromotionSessionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteFlashPromotionSessionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新限时购场次表
type UpdateFlashPromotionSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                       //启用状态：0->不启用；1->启用
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //每日结束时间
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                               //编号
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                            //场次名称
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //每日开始时间
}

func (x *UpdateFlashPromotionSessionReq) Reset() {
	*x = UpdateFlashPromotionSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionSessionReq) ProtoMessage() {}

func (x *UpdateFlashPromotionSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionSessionReq.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionSessionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateFlashPromotionSessionReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateFlashPromotionSessionReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateFlashPromotionSessionReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFlashPromotionSessionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFlashPromotionSessionReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type UpdateFlashPromotionSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateFlashPromotionSessionResp) Reset() {
	*x = UpdateFlashPromotionSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionSessionResp) ProtoMessage() {}

func (x *UpdateFlashPromotionSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionSessionResp.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionSessionResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateFlashPromotionSessionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新限时购场次表状态
type UpdateFlashPromotionSessionStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"` //编号
	Status int32   `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`  //上下线状态
}

func (x *UpdateFlashPromotionSessionStatusReq) Reset() {
	*x = UpdateFlashPromotionSessionStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionSessionStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionSessionStatusReq) ProtoMessage() {}

func (x *UpdateFlashPromotionSessionStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionSessionStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionSessionStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateFlashPromotionSessionStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateFlashPromotionSessionStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateFlashPromotionSessionStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateFlashPromotionSessionStatusResp) Reset() {
	*x = UpdateFlashPromotionSessionStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashPromotionSessionStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashPromotionSessionStatusResp) ProtoMessage() {}

func (x *UpdateFlashPromotionSessionStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashPromotionSessionStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateFlashPromotionSessionStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateFlashPromotionSessionStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询限时购场次表详情
type QueryFlashPromotionSessionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryFlashPromotionSessionDetailReq) Reset() {
	*x = QueryFlashPromotionSessionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionDetailReq) ProtoMessage() {}

func (x *QueryFlashPromotionSessionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{82}
}

func (x *QueryFlashPromotionSessionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryFlashPromotionSessionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`          //每日结束时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                  //编号
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                               //场次名称
	StartTime  string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`    //每日开始时间
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                          //启用状态：0->不启用；1->启用
}

func (x *QueryFlashPromotionSessionDetailResp) Reset() {
	*x = QueryFlashPromotionSessionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionDetailResp) ProtoMessage() {}

func (x *QueryFlashPromotionSessionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{83}
}

func (x *QueryFlashPromotionSessionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryFlashPromotionSessionDetailResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryFlashPromotionSessionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryFlashPromotionSessionDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryFlashPromotionSessionDetailResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryFlashPromotionSessionDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 分页查询限时购场次表列表
type QueryFlashPromotionSessionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`      //第几页
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   //每页的数量
	EndTime   string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //每日结束时间
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                            //场次名称
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //每日开始时间
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                       //启用状态：0->不启用；1->启用
}

func (x *QueryFlashPromotionSessionListReq) Reset() {
	*x = QueryFlashPromotionSessionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionListReq) ProtoMessage() {}

func (x *QueryFlashPromotionSessionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionListReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{84}
}

func (x *QueryFlashPromotionSessionListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryFlashPromotionSessionListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryFlashPromotionSessionListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryFlashPromotionSessionListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryFlashPromotionSessionListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryFlashPromotionSessionListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FlashPromotionSessionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`          //每日结束时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                  //编号
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                               //场次名称
	StartTime  string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`    //每日开始时间
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                          //启用状态：0->不启用；1->启用
}

func (x *FlashPromotionSessionListData) Reset() {
	*x = FlashPromotionSessionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashPromotionSessionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashPromotionSessionListData) ProtoMessage() {}

func (x *FlashPromotionSessionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashPromotionSessionListData.ProtoReflect.Descriptor instead.
func (*FlashPromotionSessionListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{85}
}

func (x *FlashPromotionSessionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *FlashPromotionSessionListData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *FlashPromotionSessionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlashPromotionSessionListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlashPromotionSessionListData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *FlashPromotionSessionListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type QueryFlashPromotionSessionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*FlashPromotionSessionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionSessionListResp) Reset() {
	*x = QueryFlashPromotionSessionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionListResp) ProtoMessage() {}

func (x *QueryFlashPromotionSessionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionListResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{86}
}

func (x *QueryFlashPromotionSessionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryFlashPromotionSessionListResp) GetList() []*FlashPromotionSessionListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryFlashPromotionSessionListByTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTIme string `protobuf:"bytes,1,opt,name=currentTIme,proto3" json:"currentTIme,omitempty"`
}

func (x *QueryFlashPromotionSessionListByTimeReq) Reset() {
	*x = QueryFlashPromotionSessionListByTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionListByTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionListByTimeReq) ProtoMessage() {}

func (x *QueryFlashPromotionSessionListByTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionListByTimeReq.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionListByTimeReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{87}
}

func (x *QueryFlashPromotionSessionListByTimeReq) GetCurrentTIme() string {
	if x != nil {
		return x.CurrentTIme
	}
	return ""
}

type QueryFlashPromotionSessionListByTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FlashPromotionSessionListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryFlashPromotionSessionListByTimeResp) Reset() {
	*x = QueryFlashPromotionSessionListByTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlashPromotionSessionListByTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlashPromotionSessionListByTimeResp) ProtoMessage() {}

func (x *QueryFlashPromotionSessionListByTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlashPromotionSessionListByTimeResp.ProtoReflect.Descriptor instead.
func (*QueryFlashPromotionSessionListByTimeResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{88}
}

func (x *QueryFlashPromotionSessionListByTimeResp) GetList() []*FlashPromotionSessionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加首页轮播广告表
type AddHomeAdvertiseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClickCount int32  `protobuf:"varint,1,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"` //点击数
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`           //结束时间
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                  //链接地址
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                //名称
	Note       string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`                                //备注
	OrderCount int32  `protobuf:"varint,6,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"` //下单数
	Pic        string `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`                                  //图片地址
	Sort       int32  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                               //排序
	StartTime  string `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     //开始时间
	Status     int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态：0->下线；1->上线
	Type       int32  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`                              //轮播位置：0->PC首页轮播；1->app首页轮播
}

func (x *AddHomeAdvertiseReq) Reset() {
	*x = AddHomeAdvertiseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeAdvertiseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeAdvertiseReq) ProtoMessage() {}

func (x *AddHomeAdvertiseReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeAdvertiseReq.ProtoReflect.Descriptor instead.
func (*AddHomeAdvertiseReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{89}
}

func (x *AddHomeAdvertiseReq) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *AddHomeAdvertiseReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *AddHomeAdvertiseReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddHomeAdvertiseReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddHomeAdvertiseReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddHomeAdvertiseReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AddHomeAdvertiseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHomeAdvertiseResp) Reset() {
	*x = AddHomeAdvertiseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeAdvertiseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeAdvertiseResp) ProtoMessage() {}

func (x *AddHomeAdvertiseResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeAdvertiseResp.ProtoReflect.Descriptor instead.
func (*AddHomeAdvertiseResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{90}
}

func (x *AddHomeAdvertiseResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除首页轮播广告表
type DeleteHomeAdvertiseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHomeAdvertiseReq) Reset() {
	*x = DeleteHomeAdvertiseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeAdvertiseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeAdvertiseReq) ProtoMessage() {}

func (x *DeleteHomeAdvertiseReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeAdvertiseReq.ProtoReflect.Descriptor instead.
func (*DeleteHomeAdvertiseReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{91}
}

func (x *DeleteHomeAdvertiseReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHomeAdvertiseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteHomeAdvertiseResp) Reset() {
	*x = DeleteHomeAdvertiseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeAdvertiseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeAdvertiseResp) ProtoMessage() {}

func (x *DeleteHomeAdvertiseResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeAdvertiseResp.ProtoReflect.Descriptor instead.
func (*DeleteHomeAdvertiseResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{92}
}

func (x *DeleteHomeAdvertiseResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新首页轮播广告表
type UpdateHomeAdvertiseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClickCount int32  `protobuf:"varint,1,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"` //点击数
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`           //结束时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                //名称
	Note       string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`                                //备注
	OrderCount int32  `protobuf:"varint,6,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"` //下单数
	Pic        string `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`                                  //图片地址
	Sort       int32  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                               //排序
	StartTime  string `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     //开始时间
	Status     int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态：0->下线；1->上线
	Type       int32  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`                              //轮播位置：0->PC首页轮播；1->app首页轮播
	Url        string `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`                                 //链接地址
}

func (x *UpdateHomeAdvertiseReq) Reset() {
	*x = UpdateHomeAdvertiseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeAdvertiseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeAdvertiseReq) ProtoMessage() {}

func (x *UpdateHomeAdvertiseReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeAdvertiseReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeAdvertiseReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateHomeAdvertiseReq) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateHomeAdvertiseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHomeAdvertiseReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *UpdateHomeAdvertiseReq) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *UpdateHomeAdvertiseReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateHomeAdvertiseReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateHomeAdvertiseReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateHomeAdvertiseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeAdvertiseResp) Reset() {
	*x = UpdateHomeAdvertiseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeAdvertiseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeAdvertiseResp) ProtoMessage() {}

func (x *UpdateHomeAdvertiseResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeAdvertiseResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeAdvertiseResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateHomeAdvertiseResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新首页轮播广告表状态
type UpdateHomeAdvertiseStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"` //
	Status int32   `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`  //上下线状态：0->下线；1->上线
}

func (x *UpdateHomeAdvertiseStatusReq) Reset() {
	*x = UpdateHomeAdvertiseStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeAdvertiseStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeAdvertiseStatusReq) ProtoMessage() {}

func (x *UpdateHomeAdvertiseStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeAdvertiseStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeAdvertiseStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateHomeAdvertiseStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateHomeAdvertiseStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateHomeAdvertiseStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeAdvertiseStatusResp) Reset() {
	*x = UpdateHomeAdvertiseStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeAdvertiseStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeAdvertiseStatusResp) ProtoMessage() {}

func (x *UpdateHomeAdvertiseStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeAdvertiseStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeAdvertiseStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateHomeAdvertiseStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询首页轮播广告表详情
type QueryHomeAdvertiseDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryHomeAdvertiseDetailReq) Reset() {
	*x = QueryHomeAdvertiseDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeAdvertiseDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeAdvertiseDetailReq) ProtoMessage() {}

func (x *QueryHomeAdvertiseDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeAdvertiseDetailReq.ProtoReflect.Descriptor instead.
func (*QueryHomeAdvertiseDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{97}
}

func (x *QueryHomeAdvertiseDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryHomeAdvertiseDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClickCount int32  `protobuf:"varint,1,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"` //点击数
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`           //结束时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                //名称
	Note       string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`                                //备注
	OrderCount int32  `protobuf:"varint,6,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"` //下单数
	Pic        string `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`                                  //图片地址
	Sort       int32  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                               //排序
	StartTime  string `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     //开始时间
	Status     int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态：0->下线；1->上线
	Type       int32  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`                              //轮播位置：0->PC首页轮播；1->app首页轮播
	Url        string `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`                                 //链接地址
}

func (x *QueryHomeAdvertiseDetailResp) Reset() {
	*x = QueryHomeAdvertiseDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeAdvertiseDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeAdvertiseDetailResp) ProtoMessage() {}

func (x *QueryHomeAdvertiseDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeAdvertiseDetailResp.ProtoReflect.Descriptor instead.
func (*QueryHomeAdvertiseDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{98}
}

func (x *QueryHomeAdvertiseDetailResp) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryHomeAdvertiseDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryHomeAdvertiseDetailResp) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *QueryHomeAdvertiseDetailResp) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *QueryHomeAdvertiseDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryHomeAdvertiseDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryHomeAdvertiseDetailResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 分页查询首页轮播广告表列表
type QueryHomeAdvertiseListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`      //第几页
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   //每页的数量
	EndTime   string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //结束时间
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                            //名称
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //开始时间
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                       //上下线状态：0->下线；1->上线
	Type      int32  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`                           //轮播位置：0->PC首页轮播；1->app首页轮播
}

func (x *QueryHomeAdvertiseListReq) Reset() {
	*x = QueryHomeAdvertiseListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeAdvertiseListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeAdvertiseListReq) ProtoMessage() {}

func (x *QueryHomeAdvertiseListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeAdvertiseListReq.ProtoReflect.Descriptor instead.
func (*QueryHomeAdvertiseListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{99}
}

func (x *QueryHomeAdvertiseListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryHomeAdvertiseListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryHomeAdvertiseListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryHomeAdvertiseListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryHomeAdvertiseListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryHomeAdvertiseListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryHomeAdvertiseListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type HomeAdvertiseListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClickCount int32  `protobuf:"varint,1,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"` //点击数
	EndTime    string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`           //结束时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                //名称
	Note       string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`                                //备注
	OrderCount int32  `protobuf:"varint,6,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"` //下单数
	Pic        string `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`                                  //图片地址
	Sort       int32  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                               //排序
	StartTime  string `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     //开始时间
	Status     int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                          //上下线状态：0->下线；1->上线
	Type       int32  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`                              //轮播位置：0->PC首页轮播；1->app首页轮播
	Url        string `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`                                 //链接地址
}

func (x *HomeAdvertiseListData) Reset() {
	*x = HomeAdvertiseListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeAdvertiseListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeAdvertiseListData) ProtoMessage() {}

func (x *HomeAdvertiseListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeAdvertiseListData.ProtoReflect.Descriptor instead.
func (*HomeAdvertiseListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{100}
}

func (x *HomeAdvertiseListData) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *HomeAdvertiseListData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *HomeAdvertiseListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeAdvertiseListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeAdvertiseListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *HomeAdvertiseListData) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *HomeAdvertiseListData) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *HomeAdvertiseListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *HomeAdvertiseListData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *HomeAdvertiseListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HomeAdvertiseListData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *HomeAdvertiseListData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type QueryHomeAdvertiseListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*HomeAdvertiseListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryHomeAdvertiseListResp) Reset() {
	*x = QueryHomeAdvertiseListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeAdvertiseListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeAdvertiseListResp) ProtoMessage() {}

func (x *QueryHomeAdvertiseListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeAdvertiseListResp.ProtoReflect.Descriptor instead.
func (*QueryHomeAdvertiseListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{101}
}

func (x *QueryHomeAdvertiseListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryHomeAdvertiseListResp) GetList() []*HomeAdvertiseListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加首页推荐品牌表
type AddHomeBrandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandAddData []*HomeBrandAddData `protobuf:"bytes,1,rep,name=BrandAddData,proto3" json:"BrandAddData,omitempty"` //
}

func (x *AddHomeBrandReq) Reset() {
	*x = AddHomeBrandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeBrandReq) ProtoMessage() {}

func (x *AddHomeBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeBrandReq.ProtoReflect.Descriptor instead.
func (*AddHomeBrandReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{102}
}

func (x *AddHomeBrandReq) GetBrandAddData() []*HomeBrandAddData {
	if x != nil {
		return x.BrandAddData
	}
	return nil
}

type HomeBrandAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId         int64  `protobuf:"varint,1,opt,name=BrandId,proto3" json:"BrandId,omitempty"`                 //商品品牌id
	BrandName       string `protobuf:"bytes,2,opt,name=BrandName,proto3" json:"BrandName,omitempty"`              //商品品牌名称
	RecommendStatus int32  `protobuf:"varint,3,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`                       //排序
}

func (x *HomeBrandAddData) Reset() {
	*x = HomeBrandAddData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBrandAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBrandAddData) ProtoMessage() {}

func (x *HomeBrandAddData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBrandAddData.ProtoReflect.Descriptor instead.
func (*HomeBrandAddData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{103}
}

func (x *HomeBrandAddData) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *HomeBrandAddData) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *HomeBrandAddData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeBrandAddData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddHomeBrandResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHomeBrandResp) Reset() {
	*x = AddHomeBrandResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeBrandResp) ProtoMessage() {}

func (x *AddHomeBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeBrandResp.ProtoReflect.Descriptor instead.
func (*AddHomeBrandResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{104}
}

func (x *AddHomeBrandResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除首页推荐品牌表
type DeleteHomeBrandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHomeBrandReq) Reset() {
	*x = DeleteHomeBrandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeBrandReq) ProtoMessage() {}

func (x *DeleteHomeBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeBrandReq.ProtoReflect.Descriptor instead.
func (*DeleteHomeBrandReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{105}
}

func (x *DeleteHomeBrandReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHomeBrandResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteHomeBrandResp) Reset() {
	*x = DeleteHomeBrandResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeBrandResp) ProtoMessage() {}

func (x *DeleteHomeBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeBrandResp.ProtoReflect.Descriptor instead.
func (*DeleteHomeBrandResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{106}
}

func (x *DeleteHomeBrandResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新首页推荐品牌表
type UpdateHomeBrandSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Sort int32 `protobuf:"varint,2,opt,name=Sort,proto3" json:"Sort,omitempty"` //排序
}

func (x *UpdateHomeBrandSortReq) Reset() {
	*x = UpdateHomeBrandSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeBrandSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeBrandSortReq) ProtoMessage() {}

func (x *UpdateHomeBrandSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeBrandSortReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeBrandSortReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{107}
}

func (x *UpdateHomeBrandSortReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomeBrandSortReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateHomeBrandSortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeBrandSortResp) Reset() {
	*x = UpdateHomeBrandSortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeBrandSortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeBrandSortResp) ProtoMessage() {}

func (x *UpdateHomeBrandSortResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeBrandSortResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeBrandSortResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{108}
}

func (x *UpdateHomeBrandSortResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新首页推荐品牌表状态
type UpdateHomeBrandStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`                  //
	RecommendStatus int32   `protobuf:"varint,2,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *UpdateHomeBrandStatusReq) Reset() {
	*x = UpdateHomeBrandStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeBrandStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeBrandStatusReq) ProtoMessage() {}

func (x *UpdateHomeBrandStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeBrandStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeBrandStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateHomeBrandStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateHomeBrandStatusReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type UpdateHomeBrandStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeBrandStatusResp) Reset() {
	*x = UpdateHomeBrandStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeBrandStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeBrandStatusResp) ProtoMessage() {}

func (x *UpdateHomeBrandStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeBrandStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeBrandStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{110}
}

func (x *UpdateHomeBrandStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询首页推荐品牌表详情
type QueryHomeBrandDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryHomeBrandDetailReq) Reset() {
	*x = QueryHomeBrandDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeBrandDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeBrandDetailReq) ProtoMessage() {}

func (x *QueryHomeBrandDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeBrandDetailReq.ProtoReflect.Descriptor instead.
func (*QueryHomeBrandDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{111}
}

func (x *QueryHomeBrandDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryHomeBrandDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId         int64  `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                         //商品品牌id
	BrandName       string `protobuf:"bytes,2,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                    //商品品牌名称
	Id              int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *QueryHomeBrandDetailResp) Reset() {
	*x = QueryHomeBrandDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeBrandDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeBrandDetailResp) ProtoMessage() {}

func (x *QueryHomeBrandDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeBrandDetailResp.ProtoReflect.Descriptor instead.
func (*QueryHomeBrandDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{112}
}

func (x *QueryHomeBrandDetailResp) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *QueryHomeBrandDetailResp) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *QueryHomeBrandDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryHomeBrandDetailResp) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *QueryHomeBrandDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 分页查询首页推荐品牌表列表
type QueryHomeBrandListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum         int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                         //第几页
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                      //每页的数量
	BrandName       string `protobuf:"bytes,3,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                    //商品品牌名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *QueryHomeBrandListReq) Reset() {
	*x = QueryHomeBrandListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeBrandListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeBrandListReq) ProtoMessage() {}

func (x *QueryHomeBrandListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeBrandListReq.ProtoReflect.Descriptor instead.
func (*QueryHomeBrandListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{113}
}

func (x *QueryHomeBrandListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryHomeBrandListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryHomeBrandListReq) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *QueryHomeBrandListReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type HomeBrandListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId         int64  `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                         //商品品牌id
	BrandName       string `protobuf:"bytes,2,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                    //商品品牌名称
	Id              int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *HomeBrandListData) Reset() {
	*x = HomeBrandListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBrandListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBrandListData) ProtoMessage() {}

func (x *HomeBrandListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBrandListData.ProtoReflect.Descriptor instead.
func (*HomeBrandListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{114}
}

func (x *HomeBrandListData) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *HomeBrandListData) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *HomeBrandListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeBrandListData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeBrandListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type QueryHomeBrandListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*HomeBrandListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryHomeBrandListResp) Reset() {
	*x = QueryHomeBrandListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeBrandListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeBrandListResp) ProtoMessage() {}

func (x *QueryHomeBrandListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeBrandListResp.ProtoReflect.Descriptor instead.
func (*QueryHomeBrandListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{115}
}

func (x *QueryHomeBrandListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryHomeBrandListResp) GetList() []*HomeBrandListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加新鲜好物表
type AddHomeNewProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewProductAddData []*HomeNewProductAddData `protobuf:"bytes,1,rep,name=NewProductAddData,proto3" json:"NewProductAddData,omitempty"`
}

func (x *AddHomeNewProductReq) Reset() {
	*x = AddHomeNewProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeNewProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeNewProductReq) ProtoMessage() {}

func (x *AddHomeNewProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeNewProductReq.ProtoReflect.Descriptor instead.
func (*AddHomeNewProductReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{116}
}

func (x *AddHomeNewProductReq) GetNewProductAddData() []*HomeNewProductAddData {
	if x != nil {
		return x.NewProductAddData
	}
	return nil
}

type HomeNewProductAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId       int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`             //商品id
	ProductName     string `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`          //商品名称
	RecommendStatus int32  `protobuf:"varint,3,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`                       //排序
}

func (x *HomeNewProductAddData) Reset() {
	*x = HomeNewProductAddData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeNewProductAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeNewProductAddData) ProtoMessage() {}

func (x *HomeNewProductAddData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeNewProductAddData.ProtoReflect.Descriptor instead.
func (*HomeNewProductAddData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{117}
}

func (x *HomeNewProductAddData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *HomeNewProductAddData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *HomeNewProductAddData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeNewProductAddData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddHomeNewProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHomeNewProductResp) Reset() {
	*x = AddHomeNewProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeNewProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeNewProductResp) ProtoMessage() {}

func (x *AddHomeNewProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeNewProductResp.ProtoReflect.Descriptor instead.
func (*AddHomeNewProductResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{118}
}

func (x *AddHomeNewProductResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除新鲜好物表
type DeleteHomeNewProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHomeNewProductReq) Reset() {
	*x = DeleteHomeNewProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeNewProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeNewProductReq) ProtoMessage() {}

func (x *DeleteHomeNewProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeNewProductReq.ProtoReflect.Descriptor instead.
func (*DeleteHomeNewProductReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{119}
}

func (x *DeleteHomeNewProductReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHomeNewProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteHomeNewProductResp) Reset() {
	*x = DeleteHomeNewProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeNewProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeNewProductResp) ProtoMessage() {}

func (x *DeleteHomeNewProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeNewProductResp.ProtoReflect.Descriptor instead.
func (*DeleteHomeNewProductResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{120}
}

func (x *DeleteHomeNewProductResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新新鲜好物表
type UpdateNewProductSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Sort int32 `protobuf:"varint,2,opt,name=Sort,proto3" json:"Sort,omitempty"` //排序
}

func (x *UpdateNewProductSortReq) Reset() {
	*x = UpdateNewProductSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewProductSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewProductSortReq) ProtoMessage() {}

func (x *UpdateNewProductSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewProductSortReq.ProtoReflect.Descriptor instead.
func (*UpdateNewProductSortReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{121}
}

func (x *UpdateNewProductSortReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNewProductSortReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateNewProductSortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateNewProductSortResp) Reset() {
	*x = UpdateNewProductSortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewProductSortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewProductSortResp) ProtoMessage() {}

func (x *UpdateNewProductSortResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewProductSortResp.ProtoReflect.Descriptor instead.
func (*UpdateNewProductSortResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{122}
}

func (x *UpdateNewProductSortResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新新鲜好物表状态
type UpdateHomeNewProductStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`                  //
	RecommendStatus int32   `protobuf:"varint,2,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *UpdateHomeNewProductStatusReq) Reset() {
	*x = UpdateHomeNewProductStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeNewProductStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeNewProductStatusReq) ProtoMessage() {}

func (x *UpdateHomeNewProductStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeNewProductStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeNewProductStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{123}
}

func (x *UpdateHomeNewProductStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateHomeNewProductStatusReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type UpdateHomeNewProductStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeNewProductStatusResp) Reset() {
	*x = UpdateHomeNewProductStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeNewProductStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeNewProductStatusResp) ProtoMessage() {}

func (x *UpdateHomeNewProductStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeNewProductStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeNewProductStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateHomeNewProductStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询新鲜好物表详情
type QueryHomeNewProductDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryHomeNewProductDetailReq) Reset() {
	*x = QueryHomeNewProductDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeNewProductDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeNewProductDetailReq) ProtoMessage() {}

func (x *QueryHomeNewProductDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeNewProductDetailReq.ProtoReflect.Descriptor instead.
func (*QueryHomeNewProductDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{125}
}

func (x *QueryHomeNewProductDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryHomeNewProductDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	ProductId       int64  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                   //商品id
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *QueryHomeNewProductDetailResp) Reset() {
	*x = QueryHomeNewProductDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeNewProductDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeNewProductDetailResp) ProtoMessage() {}

func (x *QueryHomeNewProductDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeNewProductDetailResp.ProtoReflect.Descriptor instead.
func (*QueryHomeNewProductDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{126}
}

func (x *QueryHomeNewProductDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryHomeNewProductDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryHomeNewProductDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryHomeNewProductDetailResp) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *QueryHomeNewProductDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 分页查询新鲜好物表列表
type QueryHomeNewProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum         int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                         //第几页
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                      //每页的数量
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *QueryHomeNewProductListReq) Reset() {
	*x = QueryHomeNewProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeNewProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeNewProductListReq) ProtoMessage() {}

func (x *QueryHomeNewProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeNewProductListReq.ProtoReflect.Descriptor instead.
func (*QueryHomeNewProductListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{127}
}

func (x *QueryHomeNewProductListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryHomeNewProductListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryHomeNewProductListReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryHomeNewProductListReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type HomeNewProductListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	ProductId       int64  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                   //商品id
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *HomeNewProductListData) Reset() {
	*x = HomeNewProductListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeNewProductListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeNewProductListData) ProtoMessage() {}

func (x *HomeNewProductListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeNewProductListData.ProtoReflect.Descriptor instead.
func (*HomeNewProductListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{128}
}

func (x *HomeNewProductListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeNewProductListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *HomeNewProductListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *HomeNewProductListData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeNewProductListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type QueryHomeNewProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*HomeNewProductListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryHomeNewProductListResp) Reset() {
	*x = QueryHomeNewProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeNewProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeNewProductListResp) ProtoMessage() {}

func (x *QueryHomeNewProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeNewProductListResp.ProtoReflect.Descriptor instead.
func (*QueryHomeNewProductListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{129}
}

func (x *QueryHomeNewProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryHomeNewProductListResp) GetList() []*HomeNewProductListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加人气推荐商品表
type AddHomeRecommendProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendProductAddData []*HomeRecommendProductAddData `protobuf:"bytes,1,rep,name=RecommendProductAddData,proto3" json:"RecommendProductAddData,omitempty"` //
}

func (x *AddHomeRecommendProductReq) Reset() {
	*x = AddHomeRecommendProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeRecommendProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeRecommendProductReq) ProtoMessage() {}

func (x *AddHomeRecommendProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeRecommendProductReq.ProtoReflect.Descriptor instead.
func (*AddHomeRecommendProductReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{130}
}

func (x *AddHomeRecommendProductReq) GetRecommendProductAddData() []*HomeRecommendProductAddData {
	if x != nil {
		return x.RecommendProductAddData
	}
	return nil
}

type HomeRecommendProductAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId       int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`             //商品id
	ProductName     string `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`          //商品名称
	RecommendStatus int32  `protobuf:"varint,3,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`                       //排序
}

func (x *HomeRecommendProductAddData) Reset() {
	*x = HomeRecommendProductAddData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRecommendProductAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRecommendProductAddData) ProtoMessage() {}

func (x *HomeRecommendProductAddData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRecommendProductAddData.ProtoReflect.Descriptor instead.
func (*HomeRecommendProductAddData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{131}
}

func (x *HomeRecommendProductAddData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *HomeRecommendProductAddData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *HomeRecommendProductAddData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeRecommendProductAddData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddHomeRecommendProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHomeRecommendProductResp) Reset() {
	*x = AddHomeRecommendProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeRecommendProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeRecommendProductResp) ProtoMessage() {}

func (x *AddHomeRecommendProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeRecommendProductResp.ProtoReflect.Descriptor instead.
func (*AddHomeRecommendProductResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{132}
}

func (x *AddHomeRecommendProductResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除人气推荐商品表
type DeleteHomeRecommendProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHomeRecommendProductReq) Reset() {
	*x = DeleteHomeRecommendProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeRecommendProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeRecommendProductReq) ProtoMessage() {}

func (x *DeleteHomeRecommendProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeRecommendProductReq.ProtoReflect.Descriptor instead.
func (*DeleteHomeRecommendProductReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{133}
}

func (x *DeleteHomeRecommendProductReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHomeRecommendProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteHomeRecommendProductResp) Reset() {
	*x = DeleteHomeRecommendProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeRecommendProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeRecommendProductResp) ProtoMessage() {}

func (x *DeleteHomeRecommendProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeRecommendProductResp.ProtoReflect.Descriptor instead.
func (*DeleteHomeRecommendProductResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{134}
}

func (x *DeleteHomeRecommendProductResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新人气推荐商品表
type UpdateRecommendProductSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Sort int32 `protobuf:"varint,2,opt,name=Sort,proto3" json:"Sort,omitempty"` //排序
}

func (x *UpdateRecommendProductSortReq) Reset() {
	*x = UpdateRecommendProductSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendProductSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendProductSortReq) ProtoMessage() {}

func (x *UpdateRecommendProductSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendProductSortReq.ProtoReflect.Descriptor instead.
func (*UpdateRecommendProductSortReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{135}
}

func (x *UpdateRecommendProductSortReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecommendProductSortReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateRecommendProductSortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateRecommendProductSortResp) Reset() {
	*x = UpdateRecommendProductSortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendProductSortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendProductSortResp) ProtoMessage() {}

func (x *UpdateRecommendProductSortResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendProductSortResp.ProtoReflect.Descriptor instead.
func (*UpdateRecommendProductSortResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{136}
}

func (x *UpdateRecommendProductSortResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新人气推荐商品表状态
type UpdateHomeRecommendProductStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`                  //
	RecommendStatus int32   `protobuf:"varint,2,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *UpdateHomeRecommendProductStatusReq) Reset() {
	*x = UpdateHomeRecommendProductStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeRecommendProductStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeRecommendProductStatusReq) ProtoMessage() {}

func (x *UpdateHomeRecommendProductStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeRecommendProductStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeRecommendProductStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{137}
}

func (x *UpdateHomeRecommendProductStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateHomeRecommendProductStatusReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type UpdateHomeRecommendProductStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeRecommendProductStatusResp) Reset() {
	*x = UpdateHomeRecommendProductStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeRecommendProductStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeRecommendProductStatusResp) ProtoMessage() {}

func (x *UpdateHomeRecommendProductStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeRecommendProductStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeRecommendProductStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{138}
}

func (x *UpdateHomeRecommendProductStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询人气推荐商品表详情
type QueryHomeRecommendProductDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryHomeRecommendProductDetailReq) Reset() {
	*x = QueryHomeRecommendProductDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendProductDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendProductDetailReq) ProtoMessage() {}

func (x *QueryHomeRecommendProductDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendProductDetailReq.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendProductDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{139}
}

func (x *QueryHomeRecommendProductDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryHomeRecommendProductDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	ProductId       int64  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                   //商品id
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *QueryHomeRecommendProductDetailResp) Reset() {
	*x = QueryHomeRecommendProductDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendProductDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendProductDetailResp) ProtoMessage() {}

func (x *QueryHomeRecommendProductDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendProductDetailResp.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendProductDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{140}
}

func (x *QueryHomeRecommendProductDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryHomeRecommendProductDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryHomeRecommendProductDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryHomeRecommendProductDetailResp) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *QueryHomeRecommendProductDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 分页查询人气推荐商品表列表
type QueryHomeRecommendProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum         int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                         //第几页
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                      //每页的数量
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *QueryHomeRecommendProductListReq) Reset() {
	*x = QueryHomeRecommendProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendProductListReq) ProtoMessage() {}

func (x *QueryHomeRecommendProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendProductListReq.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendProductListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{141}
}

func (x *QueryHomeRecommendProductListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryHomeRecommendProductListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryHomeRecommendProductListReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryHomeRecommendProductListReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type HomeRecommendProductListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	ProductId       int64  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                   //商品id
	ProductName     string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`              //商品名称
	RecommendStatus int32  `protobuf:"varint,4,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
}

func (x *HomeRecommendProductListData) Reset() {
	*x = HomeRecommendProductListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRecommendProductListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRecommendProductListData) ProtoMessage() {}

func (x *HomeRecommendProductListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRecommendProductListData.ProtoReflect.Descriptor instead.
func (*HomeRecommendProductListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{142}
}

func (x *HomeRecommendProductListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeRecommendProductListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *HomeRecommendProductListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *HomeRecommendProductListData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeRecommendProductListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type QueryHomeRecommendProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*HomeRecommendProductListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryHomeRecommendProductListResp) Reset() {
	*x = QueryHomeRecommendProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendProductListResp) ProtoMessage() {}

func (x *QueryHomeRecommendProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendProductListResp.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendProductListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{143}
}

func (x *QueryHomeRecommendProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryHomeRecommendProductListResp) GetList() []*HomeRecommendProductListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加首页推荐专题表
type AddHomeRecommendSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendSubjectAddData []*HomeRecommendSubjectAddData `protobuf:"bytes,1,rep,name=RecommendSubjectAddData,proto3" json:"RecommendSubjectAddData,omitempty"` //
}

func (x *AddHomeRecommendSubjectReq) Reset() {
	*x = AddHomeRecommendSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeRecommendSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeRecommendSubjectReq) ProtoMessage() {}

func (x *AddHomeRecommendSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeRecommendSubjectReq.ProtoReflect.Descriptor instead.
func (*AddHomeRecommendSubjectReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{144}
}

func (x *AddHomeRecommendSubjectReq) GetRecommendSubjectAddData() []*HomeRecommendSubjectAddData {
	if x != nil {
		return x.RecommendSubjectAddData
	}
	return nil
}

type HomeRecommendSubjectAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId       int64  `protobuf:"varint,1,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`             //专题id
	SubjectName     string `protobuf:"bytes,2,opt,name=SubjectName,proto3" json:"SubjectName,omitempty"`          //专题名称
	RecommendStatus int32  `protobuf:"varint,3,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`                       //排序
}

func (x *HomeRecommendSubjectAddData) Reset() {
	*x = HomeRecommendSubjectAddData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRecommendSubjectAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRecommendSubjectAddData) ProtoMessage() {}

func (x *HomeRecommendSubjectAddData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRecommendSubjectAddData.ProtoReflect.Descriptor instead.
func (*HomeRecommendSubjectAddData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{145}
}

func (x *HomeRecommendSubjectAddData) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *HomeRecommendSubjectAddData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *HomeRecommendSubjectAddData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeRecommendSubjectAddData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type AddHomeRecommendSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHomeRecommendSubjectResp) Reset() {
	*x = AddHomeRecommendSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomeRecommendSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomeRecommendSubjectResp) ProtoMessage() {}

func (x *AddHomeRecommendSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomeRecommendSubjectResp.ProtoReflect.Descriptor instead.
func (*AddHomeRecommendSubjectResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{146}
}

func (x *AddHomeRecommendSubjectResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除首页推荐专题表
type DeleteHomeRecommendSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHomeRecommendSubjectReq) Reset() {
	*x = DeleteHomeRecommendSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeRecommendSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeRecommendSubjectReq) ProtoMessage() {}

func (x *DeleteHomeRecommendSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeRecommendSubjectReq.ProtoReflect.Descriptor instead.
func (*DeleteHomeRecommendSubjectReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{147}
}

func (x *DeleteHomeRecommendSubjectReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHomeRecommendSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteHomeRecommendSubjectResp) Reset() {
	*x = DeleteHomeRecommendSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHomeRecommendSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeRecommendSubjectResp) ProtoMessage() {}

func (x *DeleteHomeRecommendSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeRecommendSubjectResp.ProtoReflect.Descriptor instead.
func (*DeleteHomeRecommendSubjectResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{148}
}

func (x *DeleteHomeRecommendSubjectResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateRecommendSubjectSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Sort int32 `protobuf:"varint,2,opt,name=Sort,proto3" json:"Sort,omitempty"` //排序
}

func (x *UpdateRecommendSubjectSortReq) Reset() {
	*x = UpdateRecommendSubjectSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendSubjectSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendSubjectSortReq) ProtoMessage() {}

func (x *UpdateRecommendSubjectSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendSubjectSortReq.ProtoReflect.Descriptor instead.
func (*UpdateRecommendSubjectSortReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{149}
}

func (x *UpdateRecommendSubjectSortReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecommendSubjectSortReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateRecommendSubjectSortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateRecommendSubjectSortResp) Reset() {
	*x = UpdateRecommendSubjectSortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendSubjectSortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendSubjectSortResp) ProtoMessage() {}

func (x *UpdateRecommendSubjectSortResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendSubjectSortResp.ProtoReflect.Descriptor instead.
func (*UpdateRecommendSubjectSortResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{150}
}

func (x *UpdateRecommendSubjectSortResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新首页推荐专题表状态
type UpdateHomeRecommendSubjectStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`                  //
	RecommendStatus int32   `protobuf:"varint,2,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` //推荐状态：0->不推荐;1->推荐
}

func (x *UpdateHomeRecommendSubjectStatusReq) Reset() {
	*x = UpdateHomeRecommendSubjectStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeRecommendSubjectStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeRecommendSubjectStatusReq) ProtoMessage() {}

func (x *UpdateHomeRecommendSubjectStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeRecommendSubjectStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateHomeRecommendSubjectStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{151}
}

func (x *UpdateHomeRecommendSubjectStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateHomeRecommendSubjectStatusReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

type UpdateHomeRecommendSubjectStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateHomeRecommendSubjectStatusResp) Reset() {
	*x = UpdateHomeRecommendSubjectStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomeRecommendSubjectStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeRecommendSubjectStatusResp) ProtoMessage() {}

func (x *UpdateHomeRecommendSubjectStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeRecommendSubjectStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateHomeRecommendSubjectStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{152}
}

func (x *UpdateHomeRecommendSubjectStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询首页推荐专题表详情
type QueryHomeRecommendSubjectDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryHomeRecommendSubjectDetailReq) Reset() {
	*x = QueryHomeRecommendSubjectDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendSubjectDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendSubjectDetailReq) ProtoMessage() {}

func (x *QueryHomeRecommendSubjectDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendSubjectDetailReq.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendSubjectDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{153}
}

func (x *QueryHomeRecommendSubjectDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryHomeRecommendSubjectDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	RecommendStatus int32  `protobuf:"varint,2,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
	SubjectId       int64  `protobuf:"varint,4,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`                   //专题id
	SubjectName     string `protobuf:"bytes,5,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`              //专题名称
}

func (x *QueryHomeRecommendSubjectDetailResp) Reset() {
	*x = QueryHomeRecommendSubjectDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendSubjectDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendSubjectDetailResp) ProtoMessage() {}

func (x *QueryHomeRecommendSubjectDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendSubjectDetailResp.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendSubjectDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{154}
}

func (x *QueryHomeRecommendSubjectDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryHomeRecommendSubjectDetailResp) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *QueryHomeRecommendSubjectDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryHomeRecommendSubjectDetailResp) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *QueryHomeRecommendSubjectDetailResp) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

// 分页查询首页推荐专题表列表
type QueryHomeRecommendSubjectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum         int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                         //第几页
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                      //每页的数量
	RecommendStatus int32  `protobuf:"varint,3,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	SubjectName     string `protobuf:"bytes,4,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`              //专题名称
}

func (x *QueryHomeRecommendSubjectListReq) Reset() {
	*x = QueryHomeRecommendSubjectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendSubjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendSubjectListReq) ProtoMessage() {}

func (x *QueryHomeRecommendSubjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendSubjectListReq.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendSubjectListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{155}
}

func (x *QueryHomeRecommendSubjectListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryHomeRecommendSubjectListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryHomeRecommendSubjectListReq) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *QueryHomeRecommendSubjectListReq) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

type HomeRecommendSubjectListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //
	RecommendStatus int32  `protobuf:"varint,2,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` //推荐状态：0->不推荐;1->推荐
	Sort            int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
	SubjectId       int64  `protobuf:"varint,4,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`                   //专题id
	SubjectName     string `protobuf:"bytes,5,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`              //专题名称
}

func (x *HomeRecommendSubjectListData) Reset() {
	*x = HomeRecommendSubjectListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRecommendSubjectListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRecommendSubjectListData) ProtoMessage() {}

func (x *HomeRecommendSubjectListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRecommendSubjectListData.ProtoReflect.Descriptor instead.
func (*HomeRecommendSubjectListData) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{156}
}

func (x *HomeRecommendSubjectListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeRecommendSubjectListData) GetRecommendStatus() int32 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *HomeRecommendSubjectListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *HomeRecommendSubjectListData) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *HomeRecommendSubjectListData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

type QueryHomeRecommendSubjectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*HomeRecommendSubjectListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryHomeRecommendSubjectListResp) Reset() {
	*x = QueryHomeRecommendSubjectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sms_sms_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHomeRecommendSubjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHomeRecommendSubjectListResp) ProtoMessage() {}

func (x *QueryHomeRecommendSubjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sms_sms_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHomeRecommendSubjectListResp.ProtoReflect.Descriptor instead.
func (*QueryHomeRecommendSubjectListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sms_sms_proto_rawDescGZIP(), []int{157}
}

func (x *QueryHomeRecommendSubjectListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryHomeRecommendSubjectListResp) GetList() []*HomeRecommendSubjectListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_rpc_sms_sms_proto protoreflect.FileDescriptor

var file_rpc_sms_sms_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x6d, 0x73, 0x2f, 0x73, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xdf,
	0x01, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x22, 0xba, 0x05, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d,
	0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x62, 0x0a, 0x19, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x21, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x21, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0xe0, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xef, 0x03, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x55,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x5f, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd3, 0x05, 0x0a, 0x17,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x65, 0x72,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x55, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x62, 0x0a, 0x19, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x21,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x37, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x18, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x7a, 0x0a, 0x2c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x2d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x2d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x77,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x1b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xde, 0x02, 0x0a, 0x1c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a,
	0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x68, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x13, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xeb, 0x03, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x65, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x4b, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x1f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x2a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x22, 0x85, 0x03, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x42, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x59, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x49, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x16, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x21, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf8, 0x01,
	0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x19, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6a,
	0x0a, 0x23, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x02, 0x0a, 0x24, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x17, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x17, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x22, 0x3a, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x66, 0x0a,
	0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0xf2, 0x02, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x3d, 0x0a, 0x27, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x2b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xf8, 0x02, 0x0a, 0x2c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x22, 0xce, 0x01, 0x0a, 0x29, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xf1, 0x02, 0x0a, 0x25, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x66, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x2a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x35, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x96, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x35, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a,
	0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x01, 0x0a,
	0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb6, 0x01, 0x0a, 0x1d, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x78, 0x0a, 0x22, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x49, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x49, 0x6d, 0x65,
	0x22, 0x68, 0x0a, 0x28, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0xb0, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x48, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xb6, 0x02, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xcd, 0x01, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x15, 0x48,
	0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x68, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0c, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x26, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x3c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x2d,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x56, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x22, 0x60, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x11,
	0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x4e, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a,
	0x15, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2e,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x3d,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x2e, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5b, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x2e, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xb0, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65,
	0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d,
	0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x48, 0x6f, 0x6d,
	0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d,
	0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x7e, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x60,
	0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x31,
	0x0a, 0x1b, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x31, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22,
	0x34, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x61, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x23, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaf,
	0x01, 0x0a, 0x1c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x76, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x48,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x60, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x17, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x31, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x43, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x34, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x61, 0x0a,
	0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x3a, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x22,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x20,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x1c, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x32, 0xb2, 0x05, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5c, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0xa3, 0x01, 0x0a, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x37, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x32, 0xa4, 0x07, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e,
	0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x86, 0x06, 0x0a,
	0x15, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd9, 0x03, 0x0a, 0x18, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x12, 0x25, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0x8a, 0x06, 0x0a, 0x24, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x41,
	0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x2f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e,
	0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x32,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x28, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x36, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x37, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa3,
	0x07, 0x0a, 0x1c, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6d, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x76,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e,
	0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x2a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x88,
	0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2e,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2f,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x33, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xf7, 0x04, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x12, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f,
	0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xb5,
	0x04, 0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x1d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x64, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22,
	0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x88, 0x05, 0x0a, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x58, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x73,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65,
	0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x27, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f,
	0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xfc, 0x05, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x73,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x2e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x32, 0xfe, 0x05, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x28, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x73, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82,
	0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x2e, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_sms_sms_proto_rawDescOnce sync.Once
	file_rpc_sms_sms_proto_rawDescData = file_rpc_sms_sms_proto_rawDesc
)

func file_rpc_sms_sms_proto_rawDescGZIP() []byte {
	file_rpc_sms_sms_proto_rawDescOnce.Do(func() {
		file_rpc_sms_sms_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_sms_sms_proto_rawDescData)
	})
	return file_rpc_sms_sms_proto_rawDescData
}

var file_rpc_sms_sms_proto_msgTypes = make([]protoimpl.MessageInfo, 158)
var file_rpc_sms_sms_proto_goTypes = []interface{}{
	(*CouponProductCategoryRelationData)(nil),             // 0: smsclient.CouponProductCategoryRelationData
	(*CouponProductRelationData)(nil),                     // 1: smsclient.CouponProductRelationData
	(*AddOrUpdateCouponReq)(nil),                          // 2: smsclient.AddOrUpdateCouponReq
	(*AddOrUpdateCouponResp)(nil),                         // 3: smsclient.AddOrUpdateCouponResp
	(*DeleteCouponReq)(nil),                               // 4: smsclient.DeleteCouponReq
	(*DeleteCouponResp)(nil),                              // 5: smsclient.DeleteCouponResp
	(*QueryCouponListReq)(nil),                            // 6: smsclient.QueryCouponListReq
	(*QueryCouponListData)(nil),                           // 7: smsclient.QueryCouponListData
	(*QueryCouponListResp)(nil),                           // 8: smsclient.QueryCouponListResp
	(*QueryCouponFindByIdReq)(nil),                        // 9: smsclient.QueryCouponFindByIdReq
	(*QueryCouponFindByIdResp)(nil),                       // 10: smsclient.QueryCouponFindByIdResp
	(*QueryCouponFindByIdsReq)(nil),                       // 11: smsclient.QueryCouponFindByIdsReq
	(*QueryCouponFindByIdsResp)(nil),                      // 12: smsclient.QueryCouponFindByIdsResp
	(*CouponFindByProductIdAndProductCategoryIdReq)(nil),  // 13: smsclient.CouponFindByProductIdAndProductCategoryIdReq
	(*CouponFindByProductIdAndProductCategoryIdResp)(nil), // 14: smsclient.CouponFindByProductIdAndProductCategoryIdResp
	(*AddCouponHistoryReq)(nil),                           // 15: smsclient.AddCouponHistoryReq
	(*AddCouponHistoryResp)(nil),                          // 16: smsclient.AddCouponHistoryResp
	(*DeleteCouponHistoryReq)(nil),                        // 17: smsclient.DeleteCouponHistoryReq
	(*DeleteCouponHistoryResp)(nil),                       // 18: smsclient.DeleteCouponHistoryResp
	(*UpdateCouponHistoryReq)(nil),                        // 19: smsclient.UpdateCouponHistoryReq
	(*UpdateCouponHistoryResp)(nil),                       // 20: smsclient.UpdateCouponHistoryResp
	(*UpdateCouponHistoryStatusReq)(nil),                  // 21: smsclient.UpdateCouponHistoryStatusReq
	(*UpdateCouponHistoryStatusResp)(nil),                 // 22: smsclient.UpdateCouponHistoryStatusResp
	(*QueryCouponHistoryDetailReq)(nil),                   // 23: smsclient.QueryCouponHistoryDetailReq
	(*QueryCouponHistoryDetailResp)(nil),                  // 24: smsclient.QueryCouponHistoryDetailResp
	(*QueryCouponHistoryListReq)(nil),                     // 25: smsclient.QueryCouponHistoryListReq
	(*CouponHistoryListData)(nil),                         // 26: smsclient.CouponHistoryListData
	(*QueryCouponHistoryListResp)(nil),                    // 27: smsclient.QueryCouponHistoryListResp
	(*QueryCouponCountReq)(nil),                           // 28: smsclient.QueryCouponCountReq
	(*QueryCouponCountResp)(nil),                          // 29: smsclient.QueryCouponCountResp
	(*QueryMemberCouponListReq)(nil),                      // 30: smsclient.QueryMemberCouponListReq
	(*QueryCouponData)(nil),                               // 31: smsclient.QueryCouponData
	(*QueryMemberCouponListResp)(nil),                     // 32: smsclient.QueryMemberCouponListResp
	(*QueryCouponHistoryDetailListReq)(nil),               // 33: smsclient.QueryCouponHistoryDetailListReq
	(*QueryCouponProductCategoryRelationListData)(nil),    // 34: smsclient.QueryCouponProductCategoryRelationListData
	(*QueryCouponProductRelationListData)(nil),            // 35: smsclient.QueryCouponProductRelationListData
	(*CouponHistoryDetailListData)(nil),                   // 36: smsclient.CouponHistoryDetailListData
	(*CouponHistoryDetailListResp)(nil),                   // 37: smsclient.CouponHistoryDetailListResp
	(*AddFlashPromotionReq)(nil),                          // 38: smsclient.AddFlashPromotionReq
	(*AddFlashPromotionResp)(nil),                         // 39: smsclient.AddFlashPromotionResp
	(*DeleteFlashPromotionReq)(nil),                       // 40: smsclient.DeleteFlashPromotionReq
	(*DeleteFlashPromotionResp)(nil),                      // 41: smsclient.DeleteFlashPromotionResp
	(*UpdateFlashPromotionReq)(nil),                       // 42: smsclient.UpdateFlashPromotionReq
	(*UpdateFlashPromotionResp)(nil),                      // 43: smsclient.UpdateFlashPromotionResp
	(*UpdateFlashPromotionStatusReq)(nil),                 // 44: smsclient.UpdateFlashPromotionStatusReq
	(*UpdateFlashPromotionStatusResp)(nil),                // 45: smsclient.UpdateFlashPromotionStatusResp
	(*QueryFlashPromotionDetailReq)(nil),                  // 46: smsclient.QueryFlashPromotionDetailReq
	(*QueryFlashPromotionDetailResp)(nil),                 // 47: smsclient.QueryFlashPromotionDetailResp
	(*QueryFlashPromotionListReq)(nil),                    // 48: smsclient.QueryFlashPromotionListReq
	(*FlashPromotionListData)(nil),                        // 49: smsclient.FlashPromotionListData
	(*QueryFlashPromotionListResp)(nil),                   // 50: smsclient.QueryFlashPromotionListResp
	(*QueryFlashPromotionListByDateReq)(nil),              // 51: smsclient.QueryFlashPromotionListByDateReq
	(*QueryFlashPromotionListByDateResp)(nil),             // 52: smsclient.QueryFlashPromotionListByDateResp
	(*AddFlashPromotionLogReq)(nil),                       // 53: smsclient.AddFlashPromotionLogReq
	(*AddFlashPromotionLogResp)(nil),                      // 54: smsclient.AddFlashPromotionLogResp
	(*DeleteFlashPromotionLogReq)(nil),                    // 55: smsclient.DeleteFlashPromotionLogReq
	(*DeleteFlashPromotionLogResp)(nil),                   // 56: smsclient.DeleteFlashPromotionLogResp
	(*QueryFlashPromotionLogDetailReq)(nil),               // 57: smsclient.QueryFlashPromotionLogDetailReq
	(*QueryFlashPromotionLogDetailResp)(nil),              // 58: smsclient.QueryFlashPromotionLogDetailResp
	(*QueryFlashPromotionLogListReq)(nil),                 // 59: smsclient.QueryFlashPromotionLogListReq
	(*FlashPromotionLogListData)(nil),                     // 60: smsclient.FlashPromotionLogListData
	(*QueryFlashPromotionLogListResp)(nil),                // 61: smsclient.QueryFlashPromotionLogListResp
	(*AddFlashPromotionProductRelationReq)(nil),           // 62: smsclient.AddFlashPromotionProductRelationReq
	(*FlashPromotionProductRelationAddData)(nil),          // 63: smsclient.FlashPromotionProductRelationAddData
	(*AddFlashPromotionProductRelationResp)(nil),          // 64: smsclient.AddFlashPromotionProductRelationResp
	(*DeleteFlashPromotionProductRelationReq)(nil),        // 65: smsclient.DeleteFlashPromotionProductRelationReq
	(*DeleteFlashPromotionProductRelationResp)(nil),       // 66: smsclient.DeleteFlashPromotionProductRelationResp
	(*UpdateFlashPromotionProductRelationReq)(nil),        // 67: smsclient.UpdateFlashPromotionProductRelationReq
	(*UpdateFlashPromotionProductRelationResp)(nil),       // 68: smsclient.UpdateFlashPromotionProductRelationResp
	(*QueryFlashPromotionProductRelationDetailReq)(nil),   // 69: smsclient.QueryFlashPromotionProductRelationDetailReq
	(*QueryFlashPromotionProductRelationDetailResp)(nil),  // 70: smsclient.QueryFlashPromotionProductRelationDetailResp
	(*QueryFlashPromotionProductRelationListReq)(nil),     // 71: smsclient.QueryFlashPromotionProductRelationListReq
	(*FlashPromotionProductRelationListData)(nil),         // 72: smsclient.FlashPromotionProductRelationListData
	(*QueryFlashPromotionProductRelationListResp)(nil),    // 73: smsclient.QueryFlashPromotionProductRelationListResp
	(*AddFlashPromotionSessionReq)(nil),                   // 74: smsclient.AddFlashPromotionSessionReq
	(*AddFlashPromotionSessionResp)(nil),                  // 75: smsclient.AddFlashPromotionSessionResp
	(*DeleteFlashPromotionSessionReq)(nil),                // 76: smsclient.DeleteFlashPromotionSessionReq
	(*DeleteFlashPromotionSessionResp)(nil),               // 77: smsclient.DeleteFlashPromotionSessionResp
	(*UpdateFlashPromotionSessionReq)(nil),                // 78: smsclient.UpdateFlashPromotionSessionReq
	(*UpdateFlashPromotionSessionResp)(nil),               // 79: smsclient.UpdateFlashPromotionSessionResp
	(*UpdateFlashPromotionSessionStatusReq)(nil),          // 80: smsclient.UpdateFlashPromotionSessionStatusReq
	(*UpdateFlashPromotionSessionStatusResp)(nil),         // 81: smsclient.UpdateFlashPromotionSessionStatusResp
	(*QueryFlashPromotionSessionDetailReq)(nil),           // 82: smsclient.QueryFlashPromotionSessionDetailReq
	(*QueryFlashPromotionSessionDetailResp)(nil),          // 83: smsclient.QueryFlashPromotionSessionDetailResp
	(*QueryFlashPromotionSessionListReq)(nil),             // 84: smsclient.QueryFlashPromotionSessionListReq
	(*FlashPromotionSessionListData)(nil),                 // 85: smsclient.FlashPromotionSessionListData
	(*QueryFlashPromotionSessionListResp)(nil),            // 86: smsclient.QueryFlashPromotionSessionListResp
	(*QueryFlashPromotionSessionListByTimeReq)(nil),       // 87: smsclient.QueryFlashPromotionSessionListByTimeReq
	(*QueryFlashPromotionSessionListByTimeResp)(nil),      // 88: smsclient.QueryFlashPromotionSessionListByTimeResp
	(*AddHomeAdvertiseReq)(nil),                           // 89: smsclient.AddHomeAdvertiseReq
	(*AddHomeAdvertiseResp)(nil),                          // 90: smsclient.AddHomeAdvertiseResp
	(*DeleteHomeAdvertiseReq)(nil),                        // 91: smsclient.DeleteHomeAdvertiseReq
	(*DeleteHomeAdvertiseResp)(nil),                       // 92: smsclient.DeleteHomeAdvertiseResp
	(*UpdateHomeAdvertiseReq)(nil),                        // 93: smsclient.UpdateHomeAdvertiseReq
	(*UpdateHomeAdvertiseResp)(nil),                       // 94: smsclient.UpdateHomeAdvertiseResp
	(*UpdateHomeAdvertiseStatusReq)(nil),                  // 95: smsclient.UpdateHomeAdvertiseStatusReq
	(*UpdateHomeAdvertiseStatusResp)(nil),                 // 96: smsclient.UpdateHomeAdvertiseStatusResp
	(*QueryHomeAdvertiseDetailReq)(nil),                   // 97: smsclient.QueryHomeAdvertiseDetailReq
	(*QueryHomeAdvertiseDetailResp)(nil),                  // 98: smsclient.QueryHomeAdvertiseDetailResp
	(*QueryHomeAdvertiseListReq)(nil),                     // 99: smsclient.QueryHomeAdvertiseListReq
	(*HomeAdvertiseListData)(nil),                         // 100: smsclient.HomeAdvertiseListData
	(*QueryHomeAdvertiseListResp)(nil),                    // 101: smsclient.QueryHomeAdvertiseListResp
	(*AddHomeBrandReq)(nil),                               // 102: smsclient.AddHomeBrandReq
	(*HomeBrandAddData)(nil),                              // 103: smsclient.HomeBrandAddData
	(*AddHomeBrandResp)(nil),                              // 104: smsclient.AddHomeBrandResp
	(*DeleteHomeBrandReq)(nil),                            // 105: smsclient.DeleteHomeBrandReq
	(*DeleteHomeBrandResp)(nil),                           // 106: smsclient.DeleteHomeBrandResp
	(*UpdateHomeBrandSortReq)(nil),                        // 107: smsclient.UpdateHomeBrandSortReq
	(*UpdateHomeBrandSortResp)(nil),                       // 108: smsclient.UpdateHomeBrandSortResp
	(*UpdateHomeBrandStatusReq)(nil),                      // 109: smsclient.UpdateHomeBrandStatusReq
	(*UpdateHomeBrandStatusResp)(nil),                     // 110: smsclient.UpdateHomeBrandStatusResp
	(*QueryHomeBrandDetailReq)(nil),                       // 111: smsclient.QueryHomeBrandDetailReq
	(*QueryHomeBrandDetailResp)(nil),                      // 112: smsclient.QueryHomeBrandDetailResp
	(*QueryHomeBrandListReq)(nil),                         // 113: smsclient.QueryHomeBrandListReq
	(*HomeBrandListData)(nil),                             // 114: smsclient.HomeBrandListData
	(*QueryHomeBrandListResp)(nil),                        // 115: smsclient.QueryHomeBrandListResp
	(*AddHomeNewProductReq)(nil),                          // 116: smsclient.AddHomeNewProductReq
	(*HomeNewProductAddData)(nil),                         // 117: smsclient.HomeNewProductAddData
	(*AddHomeNewProductResp)(nil),                         // 118: smsclient.AddHomeNewProductResp
	(*DeleteHomeNewProductReq)(nil),                       // 119: smsclient.DeleteHomeNewProductReq
	(*DeleteHomeNewProductResp)(nil),                      // 120: smsclient.DeleteHomeNewProductResp
	(*UpdateNewProductSortReq)(nil),                       // 121: smsclient.UpdateNewProductSortReq
	(*UpdateNewProductSortResp)(nil),                      // 122: smsclient.UpdateNewProductSortResp
	(*UpdateHomeNewProductStatusReq)(nil),                 // 123: smsclient.UpdateHomeNewProductStatusReq
	(*UpdateHomeNewProductStatusResp)(nil),                // 124: smsclient.UpdateHomeNewProductStatusResp
	(*QueryHomeNewProductDetailReq)(nil),                  // 125: smsclient.QueryHomeNewProductDetailReq
	(*QueryHomeNewProductDetailResp)(nil),                 // 126: smsclient.QueryHomeNewProductDetailResp
	(*QueryHomeNewProductListReq)(nil),                    // 127: smsclient.QueryHomeNewProductListReq
	(*HomeNewProductListData)(nil),                        // 128: smsclient.HomeNewProductListData
	(*QueryHomeNewProductListResp)(nil),                   // 129: smsclient.QueryHomeNewProductListResp
	(*AddHomeRecommendProductReq)(nil),                    // 130: smsclient.AddHomeRecommendProductReq
	(*HomeRecommendProductAddData)(nil),                   // 131: smsclient.HomeRecommendProductAddData
	(*AddHomeRecommendProductResp)(nil),                   // 132: smsclient.AddHomeRecommendProductResp
	(*DeleteHomeRecommendProductReq)(nil),                 // 133: smsclient.DeleteHomeRecommendProductReq
	(*DeleteHomeRecommendProductResp)(nil),                // 134: smsclient.DeleteHomeRecommendProductResp
	(*UpdateRecommendProductSortReq)(nil),                 // 135: smsclient.UpdateRecommendProductSortReq
	(*UpdateRecommendProductSortResp)(nil),                // 136: smsclient.UpdateRecommendProductSortResp
	(*UpdateHomeRecommendProductStatusReq)(nil),           // 137: smsclient.UpdateHomeRecommendProductStatusReq
	(*UpdateHomeRecommendProductStatusResp)(nil),          // 138: smsclient.UpdateHomeRecommendProductStatusResp
	(*QueryHomeRecommendProductDetailReq)(nil),            // 139: smsclient.QueryHomeRecommendProductDetailReq
	(*QueryHomeRecommendProductDetailResp)(nil),           // 140: smsclient.QueryHomeRecommendProductDetailResp
	(*QueryHomeRecommendProductListReq)(nil),              // 141: smsclient.QueryHomeRecommendProductListReq
	(*HomeRecommendProductListData)(nil),                  // 142: smsclient.HomeRecommendProductListData
	(*QueryHomeRecommendProductListResp)(nil),             // 143: smsclient.QueryHomeRecommendProductListResp
	(*AddHomeRecommendSubjectReq)(nil),                    // 144: smsclient.AddHomeRecommendSubjectReq
	(*HomeRecommendSubjectAddData)(nil),                   // 145: smsclient.HomeRecommendSubjectAddData
	(*AddHomeRecommendSubjectResp)(nil),                   // 146: smsclient.AddHomeRecommendSubjectResp
	(*DeleteHomeRecommendSubjectReq)(nil),                 // 147: smsclient.DeleteHomeRecommendSubjectReq
	(*DeleteHomeRecommendSubjectResp)(nil),                // 148: smsclient.DeleteHomeRecommendSubjectResp
	(*UpdateRecommendSubjectSortReq)(nil),                 // 149: smsclient.UpdateRecommendSubjectSortReq
	(*UpdateRecommendSubjectSortResp)(nil),                // 150: smsclient.UpdateRecommendSubjectSortResp
	(*UpdateHomeRecommendSubjectStatusReq)(nil),           // 151: smsclient.UpdateHomeRecommendSubjectStatusReq
	(*UpdateHomeRecommendSubjectStatusResp)(nil),          // 152: smsclient.UpdateHomeRecommendSubjectStatusResp
	(*QueryHomeRecommendSubjectDetailReq)(nil),            // 153: smsclient.QueryHomeRecommendSubjectDetailReq
	(*QueryHomeRecommendSubjectDetailResp)(nil),           // 154: smsclient.QueryHomeRecommendSubjectDetailResp
	(*QueryHomeRecommendSubjectListReq)(nil),              // 155: smsclient.QueryHomeRecommendSubjectListReq
	(*HomeRecommendSubjectListData)(nil),                  // 156: smsclient.HomeRecommendSubjectListData
	(*QueryHomeRecommendSubjectListResp)(nil),             // 157: smsclient.QueryHomeRecommendSubjectListResp
}
var file_rpc_sms_sms_proto_depIdxs = []int32{
	1,   // 0: smsclient.AddOrUpdateCouponReq.CouponProductRelationList:type_name -> smsclient.CouponProductRelationData
	0,   // 1: smsclient.AddOrUpdateCouponReq.CouponProductCategoryRelationList:type_name -> smsclient.CouponProductCategoryRelationData
	7,   // 2: smsclient.QueryCouponListResp.list:type_name -> smsclient.QueryCouponListData
	1,   // 3: smsclient.QueryCouponFindByIdResp.CouponProductRelationList:type_name -> smsclient.CouponProductRelationData
	0,   // 4: smsclient.QueryCouponFindByIdResp.CouponProductCategoryRelationList:type_name -> smsclient.CouponProductCategoryRelationData
	7,   // 5: smsclient.QueryCouponFindByIdsResp.list:type_name -> smsclient.QueryCouponListData
	7,   // 6: smsclient.CouponFindByProductIdAndProductCategoryIdResp.list:type_name -> smsclient.QueryCouponListData
	26,  // 7: smsclient.QueryCouponHistoryListResp.list:type_name -> smsclient.CouponHistoryListData
	31,  // 8: smsclient.QueryMemberCouponListResp.list:type_name -> smsclient.QueryCouponData
	26,  // 9: smsclient.CouponHistoryDetailListData.couponHistoryListData:type_name -> smsclient.CouponHistoryListData
	31,  // 10: smsclient.CouponHistoryDetailListData.couponListData:type_name -> smsclient.QueryCouponData
	35,  // 11: smsclient.CouponHistoryDetailListData.productRelationList:type_name -> smsclient.QueryCouponProductRelationListData
	34,  // 12: smsclient.CouponHistoryDetailListData.categoryRelationList:type_name -> smsclient.QueryCouponProductCategoryRelationListData
	36,  // 13: smsclient.CouponHistoryDetailListResp.list:type_name -> smsclient.CouponHistoryDetailListData
	49,  // 14: smsclient.QueryFlashPromotionListResp.list:type_name -> smsclient.FlashPromotionListData
	49,  // 15: smsclient.QueryFlashPromotionListByDateResp.list:type_name -> smsclient.FlashPromotionListData
	60,  // 16: smsclient.QueryFlashPromotionLogListResp.list:type_name -> smsclient.FlashPromotionLogListData
	63,  // 17: smsclient.AddFlashPromotionProductRelationReq.Data:type_name -> smsclient.FlashPromotionProductRelationAddData
	72,  // 18: smsclient.QueryFlashPromotionProductRelationListResp.list:type_name -> smsclient.FlashPromotionProductRelationListData
	85,  // 19: smsclient.QueryFlashPromotionSessionListResp.list:type_name -> smsclient.FlashPromotionSessionListData
	85,  // 20: smsclient.QueryFlashPromotionSessionListByTimeResp.list:type_name -> smsclient.FlashPromotionSessionListData
	100, // 21: smsclient.QueryHomeAdvertiseListResp.list:type_name -> smsclient.HomeAdvertiseListData
	103, // 22: smsclient.AddHomeBrandReq.BrandAddData:type_name -> smsclient.HomeBrandAddData
	114, // 23: smsclient.QueryHomeBrandListResp.list:type_name -> smsclient.HomeBrandListData
	117, // 24: smsclient.AddHomeNewProductReq.NewProductAddData:type_name -> smsclient.HomeNewProductAddData
	128, // 25: smsclient.QueryHomeNewProductListResp.list:type_name -> smsclient.HomeNewProductListData
	131, // 26: smsclient.AddHomeRecommendProductReq.RecommendProductAddData:type_name -> smsclient.HomeRecommendProductAddData
	142, // 27: smsclient.QueryHomeRecommendProductListResp.list:type_name -> smsclient.HomeRecommendProductListData
	145, // 28: smsclient.AddHomeRecommendSubjectReq.RecommendSubjectAddData:type_name -> smsclient.HomeRecommendSubjectAddData
	156, // 29: smsclient.QueryHomeRecommendSubjectListResp.list:type_name -> smsclient.HomeRecommendSubjectListData
	2,   // 30: smsclient.CouponService.AddCoupon:input_type -> smsclient.AddOrUpdateCouponReq
	6,   // 31: smsclient.CouponService.QueryCouponList:input_type -> smsclient.QueryCouponListReq
	2,   // 32: smsclient.CouponService.UpdateCoupon:input_type -> smsclient.AddOrUpdateCouponReq
	4,   // 33: smsclient.CouponService.DeleteCoupon:input_type -> smsclient.DeleteCouponReq
	9,   // 34: smsclient.CouponService.QueryCouponFindById:input_type -> smsclient.QueryCouponFindByIdReq
	11,  // 35: smsclient.CouponService.QueryCouponFindByIds:input_type -> smsclient.QueryCouponFindByIdsReq
	13,  // 36: smsclient.CouponService.QueryCouponFindByProductIdAndProductCategoryId:input_type -> smsclient.CouponFindByProductIdAndProductCategoryIdReq
	15,  // 37: smsclient.CouponHistoryService.AddCouponHistory:input_type -> smsclient.AddCouponHistoryReq
	17,  // 38: smsclient.CouponHistoryService.DeleteCouponHistory:input_type -> smsclient.DeleteCouponHistoryReq
	19,  // 39: smsclient.CouponHistoryService.UpdateCouponHistory:input_type -> smsclient.UpdateCouponHistoryReq
	21,  // 40: smsclient.CouponHistoryService.UpdateCouponHistoryStatus:input_type -> smsclient.UpdateCouponHistoryStatusReq
	23,  // 41: smsclient.CouponHistoryService.QueryCouponHistoryDetail:input_type -> smsclient.QueryCouponHistoryDetailReq
	25,  // 42: smsclient.CouponHistoryService.QueryCouponHistoryList:input_type -> smsclient.QueryCouponHistoryListReq
	28,  // 43: smsclient.CouponHistoryService.QueryCouponCount:input_type -> smsclient.QueryCouponCountReq
	30,  // 44: smsclient.CouponHistoryService.QueryMemberCouponList:input_type -> smsclient.QueryMemberCouponListReq
	33,  // 45: smsclient.CouponHistoryService.QueryCouponHistoryDetailList:input_type -> smsclient.QueryCouponHistoryDetailListReq
	38,  // 46: smsclient.FlashPromotionService.AddFlashPromotion:input_type -> smsclient.AddFlashPromotionReq
	40,  // 47: smsclient.FlashPromotionService.DeleteFlashPromotion:input_type -> smsclient.DeleteFlashPromotionReq
	42,  // 48: smsclient.FlashPromotionService.UpdateFlashPromotion:input_type -> smsclient.UpdateFlashPromotionReq
	44,  // 49: smsclient.FlashPromotionService.UpdateFlashPromotionStatus:input_type -> smsclient.UpdateFlashPromotionStatusReq
	46,  // 50: smsclient.FlashPromotionService.QueryFlashPromotionDetail:input_type -> smsclient.QueryFlashPromotionDetailReq
	48,  // 51: smsclient.FlashPromotionService.QueryFlashPromotionList:input_type -> smsclient.QueryFlashPromotionListReq
	51,  // 52: smsclient.FlashPromotionService.QueryFlashPromotionListByDate:input_type -> smsclient.QueryFlashPromotionListByDateReq
	53,  // 53: smsclient.FlashPromotionLogService.AddFlashPromotionLog:input_type -> smsclient.AddFlashPromotionLogReq
	55,  // 54: smsclient.FlashPromotionLogService.DeleteFlashPromotionLog:input_type -> smsclient.DeleteFlashPromotionLogReq
	57,  // 55: smsclient.FlashPromotionLogService.QueryFlashPromotionLogDetail:input_type -> smsclient.QueryFlashPromotionLogDetailReq
	59,  // 56: smsclient.FlashPromotionLogService.QueryFlashPromotionLogList:input_type -> smsclient.QueryFlashPromotionLogListReq
	62,  // 57: smsclient.FlashPromotionProductRelationService.AddFlashPromotionProductRelation:input_type -> smsclient.AddFlashPromotionProductRelationReq
	65,  // 58: smsclient.FlashPromotionProductRelationService.DeleteFlashPromotionProductRelation:input_type -> smsclient.DeleteFlashPromotionProductRelationReq
	67,  // 59: smsclient.FlashPromotionProductRelationService.UpdateFlashPromotionProductRelation:input_type -> smsclient.UpdateFlashPromotionProductRelationReq
	69,  // 60: smsclient.FlashPromotionProductRelationService.QueryFlashPromotionProductRelationDetail:input_type -> smsclient.QueryFlashPromotionProductRelationDetailReq
	71,  // 61: smsclient.FlashPromotionProductRelationService.QueryFlashPromotionProductRelationList:input_type -> smsclient.QueryFlashPromotionProductRelationListReq
	74,  // 62: smsclient.FlashPromotionSessionService.AddFlashPromotionSession:input_type -> smsclient.AddFlashPromotionSessionReq
	76,  // 63: smsclient.FlashPromotionSessionService.DeleteFlashPromotionSession:input_type -> smsclient.DeleteFlashPromotionSessionReq
	78,  // 64: smsclient.FlashPromotionSessionService.UpdateFlashPromotionSession:input_type -> smsclient.UpdateFlashPromotionSessionReq
	80,  // 65: smsclient.FlashPromotionSessionService.UpdateFlashPromotionSessionStatus:input_type -> smsclient.UpdateFlashPromotionSessionStatusReq
	82,  // 66: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionDetail:input_type -> smsclient.QueryFlashPromotionSessionDetailReq
	84,  // 67: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionList:input_type -> smsclient.QueryFlashPromotionSessionListReq
	87,  // 68: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionListByTime:input_type -> smsclient.QueryFlashPromotionSessionListByTimeReq
	89,  // 69: smsclient.HomeAdvertiseService.AddHomeAdvertise:input_type -> smsclient.AddHomeAdvertiseReq
	91,  // 70: smsclient.HomeAdvertiseService.DeleteHomeAdvertise:input_type -> smsclient.DeleteHomeAdvertiseReq
	93,  // 71: smsclient.HomeAdvertiseService.UpdateHomeAdvertise:input_type -> smsclient.UpdateHomeAdvertiseReq
	95,  // 72: smsclient.HomeAdvertiseService.UpdateHomeAdvertiseStatus:input_type -> smsclient.UpdateHomeAdvertiseStatusReq
	97,  // 73: smsclient.HomeAdvertiseService.QueryHomeAdvertiseDetail:input_type -> smsclient.QueryHomeAdvertiseDetailReq
	99,  // 74: smsclient.HomeAdvertiseService.QueryHomeAdvertiseList:input_type -> smsclient.QueryHomeAdvertiseListReq
	102, // 75: smsclient.HomeBrandService.AddHomeBrand:input_type -> smsclient.AddHomeBrandReq
	105, // 76: smsclient.HomeBrandService.DeleteHomeBrand:input_type -> smsclient.DeleteHomeBrandReq
	107, // 77: smsclient.HomeBrandService.UpdateHomeBrandSort:input_type -> smsclient.UpdateHomeBrandSortReq
	109, // 78: smsclient.HomeBrandService.UpdateHomeBrandStatus:input_type -> smsclient.UpdateHomeBrandStatusReq
	111, // 79: smsclient.HomeBrandService.QueryHomeBrandDetail:input_type -> smsclient.QueryHomeBrandDetailReq
	113, // 80: smsclient.HomeBrandService.QueryHomeBrandList:input_type -> smsclient.QueryHomeBrandListReq
	116, // 81: smsclient.HomeNewProductService.AddHomeNewProduct:input_type -> smsclient.AddHomeNewProductReq
	119, // 82: smsclient.HomeNewProductService.DeleteHomeNewProduct:input_type -> smsclient.DeleteHomeNewProductReq
	121, // 83: smsclient.HomeNewProductService.UpdateNewProductSort:input_type -> smsclient.UpdateNewProductSortReq
	123, // 84: smsclient.HomeNewProductService.UpdateHomeNewProductStatus:input_type -> smsclient.UpdateHomeNewProductStatusReq
	125, // 85: smsclient.HomeNewProductService.QueryHomeNewProductDetail:input_type -> smsclient.QueryHomeNewProductDetailReq
	127, // 86: smsclient.HomeNewProductService.QueryHomeNewProductList:input_type -> smsclient.QueryHomeNewProductListReq
	130, // 87: smsclient.HomeRecommendProductService.AddHomeRecommendProduct:input_type -> smsclient.AddHomeRecommendProductReq
	133, // 88: smsclient.HomeRecommendProductService.DeleteHomeRecommendProduct:input_type -> smsclient.DeleteHomeRecommendProductReq
	135, // 89: smsclient.HomeRecommendProductService.UpdateRecommendProductSort:input_type -> smsclient.UpdateRecommendProductSortReq
	137, // 90: smsclient.HomeRecommendProductService.UpdateHomeRecommendProductStatus:input_type -> smsclient.UpdateHomeRecommendProductStatusReq
	139, // 91: smsclient.HomeRecommendProductService.QueryHomeRecommendProductDetail:input_type -> smsclient.QueryHomeRecommendProductDetailReq
	141, // 92: smsclient.HomeRecommendProductService.QueryHomeRecommendProductList:input_type -> smsclient.QueryHomeRecommendProductListReq
	144, // 93: smsclient.HomeRecommendSubjectService.AddHomeRecommendSubject:input_type -> smsclient.AddHomeRecommendSubjectReq
	147, // 94: smsclient.HomeRecommendSubjectService.DeleteHomeRecommendSubject:input_type -> smsclient.DeleteHomeRecommendSubjectReq
	149, // 95: smsclient.HomeRecommendSubjectService.UpdateRecommendSubjectSort:input_type -> smsclient.UpdateRecommendSubjectSortReq
	151, // 96: smsclient.HomeRecommendSubjectService.UpdateHomeRecommendSubjectStatus:input_type -> smsclient.UpdateHomeRecommendSubjectStatusReq
	153, // 97: smsclient.HomeRecommendSubjectService.QueryHomeRecommendSubjectDetail:input_type -> smsclient.QueryHomeRecommendSubjectDetailReq
	155, // 98: smsclient.HomeRecommendSubjectService.QueryHomeRecommendSubjectList:input_type -> smsclient.QueryHomeRecommendSubjectListReq
	3,   // 99: smsclient.CouponService.AddCoupon:output_type -> smsclient.AddOrUpdateCouponResp
	8,   // 100: smsclient.CouponService.QueryCouponList:output_type -> smsclient.QueryCouponListResp
	3,   // 101: smsclient.CouponService.UpdateCoupon:output_type -> smsclient.AddOrUpdateCouponResp
	5,   // 102: smsclient.CouponService.DeleteCoupon:output_type -> smsclient.DeleteCouponResp
	10,  // 103: smsclient.CouponService.QueryCouponFindById:output_type -> smsclient.QueryCouponFindByIdResp
	12,  // 104: smsclient.CouponService.QueryCouponFindByIds:output_type -> smsclient.QueryCouponFindByIdsResp
	14,  // 105: smsclient.CouponService.QueryCouponFindByProductIdAndProductCategoryId:output_type -> smsclient.CouponFindByProductIdAndProductCategoryIdResp
	16,  // 106: smsclient.CouponHistoryService.AddCouponHistory:output_type -> smsclient.AddCouponHistoryResp
	18,  // 107: smsclient.CouponHistoryService.DeleteCouponHistory:output_type -> smsclient.DeleteCouponHistoryResp
	20,  // 108: smsclient.CouponHistoryService.UpdateCouponHistory:output_type -> smsclient.UpdateCouponHistoryResp
	22,  // 109: smsclient.CouponHistoryService.UpdateCouponHistoryStatus:output_type -> smsclient.UpdateCouponHistoryStatusResp
	24,  // 110: smsclient.CouponHistoryService.QueryCouponHistoryDetail:output_type -> smsclient.QueryCouponHistoryDetailResp
	27,  // 111: smsclient.CouponHistoryService.QueryCouponHistoryList:output_type -> smsclient.QueryCouponHistoryListResp
	29,  // 112: smsclient.CouponHistoryService.QueryCouponCount:output_type -> smsclient.QueryCouponCountResp
	32,  // 113: smsclient.CouponHistoryService.QueryMemberCouponList:output_type -> smsclient.QueryMemberCouponListResp
	37,  // 114: smsclient.CouponHistoryService.QueryCouponHistoryDetailList:output_type -> smsclient.CouponHistoryDetailListResp
	39,  // 115: smsclient.FlashPromotionService.AddFlashPromotion:output_type -> smsclient.AddFlashPromotionResp
	41,  // 116: smsclient.FlashPromotionService.DeleteFlashPromotion:output_type -> smsclient.DeleteFlashPromotionResp
	43,  // 117: smsclient.FlashPromotionService.UpdateFlashPromotion:output_type -> smsclient.UpdateFlashPromotionResp
	45,  // 118: smsclient.FlashPromotionService.UpdateFlashPromotionStatus:output_type -> smsclient.UpdateFlashPromotionStatusResp
	47,  // 119: smsclient.FlashPromotionService.QueryFlashPromotionDetail:output_type -> smsclient.QueryFlashPromotionDetailResp
	50,  // 120: smsclient.FlashPromotionService.QueryFlashPromotionList:output_type -> smsclient.QueryFlashPromotionListResp
	52,  // 121: smsclient.FlashPromotionService.QueryFlashPromotionListByDate:output_type -> smsclient.QueryFlashPromotionListByDateResp
	54,  // 122: smsclient.FlashPromotionLogService.AddFlashPromotionLog:output_type -> smsclient.AddFlashPromotionLogResp
	56,  // 123: smsclient.FlashPromotionLogService.DeleteFlashPromotionLog:output_type -> smsclient.DeleteFlashPromotionLogResp
	58,  // 124: smsclient.FlashPromotionLogService.QueryFlashPromotionLogDetail:output_type -> smsclient.QueryFlashPromotionLogDetailResp
	61,  // 125: smsclient.FlashPromotionLogService.QueryFlashPromotionLogList:output_type -> smsclient.QueryFlashPromotionLogListResp
	64,  // 126: smsclient.FlashPromotionProductRelationService.AddFlashPromotionProductRelation:output_type -> smsclient.AddFlashPromotionProductRelationResp
	66,  // 127: smsclient.FlashPromotionProductRelationService.DeleteFlashPromotionProductRelation:output_type -> smsclient.DeleteFlashPromotionProductRelationResp
	68,  // 128: smsclient.FlashPromotionProductRelationService.UpdateFlashPromotionProductRelation:output_type -> smsclient.UpdateFlashPromotionProductRelationResp
	70,  // 129: smsclient.FlashPromotionProductRelationService.QueryFlashPromotionProductRelationDetail:output_type -> smsclient.QueryFlashPromotionProductRelationDetailResp
	73,  // 130: smsclient.FlashPromotionProductRelationService.QueryFlashPromotionProductRelationList:output_type -> smsclient.QueryFlashPromotionProductRelationListResp
	75,  // 131: smsclient.FlashPromotionSessionService.AddFlashPromotionSession:output_type -> smsclient.AddFlashPromotionSessionResp
	77,  // 132: smsclient.FlashPromotionSessionService.DeleteFlashPromotionSession:output_type -> smsclient.DeleteFlashPromotionSessionResp
	79,  // 133: smsclient.FlashPromotionSessionService.UpdateFlashPromotionSession:output_type -> smsclient.UpdateFlashPromotionSessionResp
	81,  // 134: smsclient.FlashPromotionSessionService.UpdateFlashPromotionSessionStatus:output_type -> smsclient.UpdateFlashPromotionSessionStatusResp
	83,  // 135: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionDetail:output_type -> smsclient.QueryFlashPromotionSessionDetailResp
	86,  // 136: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionList:output_type -> smsclient.QueryFlashPromotionSessionListResp
	88,  // 137: smsclient.FlashPromotionSessionService.QueryFlashPromotionSessionListByTime:output_type -> smsclient.QueryFlashPromotionSessionListByTimeResp
	90,  // 138: smsclient.HomeAdvertiseService.AddHomeAdvertise:output_type -> smsclient.AddHomeAdvertiseResp
	92,  // 139: smsclient.HomeAdvertiseService.DeleteHomeAdvertise:output_type -> smsclient.DeleteHomeAdvertiseResp
	94,  // 140: smsclient.HomeAdvertiseService.UpdateHomeAdvertise:output_type -> smsclient.UpdateHomeAdvertiseResp
	96,  // 141: smsclient.HomeAdvertiseService.UpdateHomeAdvertiseStatus:output_type -> smsclient.UpdateHomeAdvertiseStatusResp
	98,  // 142: smsclient.HomeAdvertiseService.QueryHomeAdvertiseDetail:output_type -> smsclient.QueryHomeAdvertiseDetailResp
	101, // 143: smsclient.HomeAdvertiseService.QueryHomeAdvertiseList:output_type -> smsclient.QueryHomeAdvertiseListResp
	104, // 144: smsclient.HomeBrandService.AddHomeBrand:output_type -> smsclient.AddHomeBrandResp
	106, // 145: smsclient.HomeBrandService.DeleteHomeBrand:output_type -> smsclient.DeleteHomeBrandResp
	108, // 146: smsclient.HomeBrandService.UpdateHomeBrandSort:output_type -> smsclient.UpdateHomeBrandSortResp
	110, // 147: smsclient.HomeBrandService.UpdateHomeBrandStatus:output_type -> smsclient.UpdateHomeBrandStatusResp
	112, // 148: smsclient.HomeBrandService.QueryHomeBrandDetail:output_type -> smsclient.QueryHomeBrandDetailResp
	115, // 149: smsclient.HomeBrandService.QueryHomeBrandList:output_type -> smsclient.QueryHomeBrandListResp
	118, // 150: smsclient.HomeNewProductService.AddHomeNewProduct:output_type -> smsclient.AddHomeNewProductResp
	120, // 151: smsclient.HomeNewProductService.DeleteHomeNewProduct:output_type -> smsclient.DeleteHomeNewProductResp
	122, // 152: smsclient.HomeNewProductService.UpdateNewProductSort:output_type -> smsclient.UpdateNewProductSortResp
	124, // 153: smsclient.HomeNewProductService.UpdateHomeNewProductStatus:output_type -> smsclient.UpdateHomeNewProductStatusResp
	126, // 154: smsclient.HomeNewProductService.QueryHomeNewProductDetail:output_type -> smsclient.QueryHomeNewProductDetailResp
	129, // 155: smsclient.HomeNewProductService.QueryHomeNewProductList:output_type -> smsclient.QueryHomeNewProductListResp
	132, // 156: smsclient.HomeRecommendProductService.AddHomeRecommendProduct:output_type -> smsclient.AddHomeRecommendProductResp
	134, // 157: smsclient.HomeRecommendProductService.DeleteHomeRecommendProduct:output_type -> smsclient.DeleteHomeRecommendProductResp
	136, // 158: smsclient.HomeRecommendProductService.UpdateRecommendProductSort:output_type -> smsclient.UpdateRecommendProductSortResp
	138, // 159: smsclient.HomeRecommendProductService.UpdateHomeRecommendProductStatus:output_type -> smsclient.UpdateHomeRecommendProductStatusResp
	140, // 160: smsclient.HomeRecommendProductService.QueryHomeRecommendProductDetail:output_type -> smsclient.QueryHomeRecommendProductDetailResp
	143, // 161: smsclient.HomeRecommendProductService.QueryHomeRecommendProductList:output_type -> smsclient.QueryHomeRecommendProductListResp
	146, // 162: smsclient.HomeRecommendSubjectService.AddHomeRecommendSubject:output_type -> smsclient.AddHomeRecommendSubjectResp
	148, // 163: smsclient.HomeRecommendSubjectService.DeleteHomeRecommendSubject:output_type -> smsclient.DeleteHomeRecommendSubjectResp
	150, // 164: smsclient.HomeRecommendSubjectService.UpdateRecommendSubjectSort:output_type -> smsclient.UpdateRecommendSubjectSortResp
	152, // 165: smsclient.HomeRecommendSubjectService.UpdateHomeRecommendSubjectStatus:output_type -> smsclient.UpdateHomeRecommendSubjectStatusResp
	154, // 166: smsclient.HomeRecommendSubjectService.QueryHomeRecommendSubjectDetail:output_type -> smsclient.QueryHomeRecommendSubjectDetailResp
	157, // 167: smsclient.HomeRecommendSubjectService.QueryHomeRecommendSubjectList:output_type -> smsclient.QueryHomeRecommendSubjectListResp
	99,  // [99:168] is the sub-list for method output_type
	30,  // [30:99] is the sub-list for method input_type
	30,  // [30:30] is the sub-list for extension type_name
	30,  // [30:30] is the sub-list for extension extendee
	0,   // [0:30] is the sub-list for field type_name
}

func init() { file_rpc_sms_sms_proto_init() }
func file_rpc_sms_sms_proto_init() {
	if File_rpc_sms_sms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_sms_sms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponProductCategoryRelationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponProductRelationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateCouponReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateCouponResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCouponReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCouponResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponFindByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponFindByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponFindByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponFindByIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponFindByProductIdAndProductCategoryIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponFindByProductIdAndProductCategoryIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCouponHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCouponHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCouponHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCouponHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCouponHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCouponHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCouponHistoryStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCouponHistoryStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponHistoryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponHistoryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberCouponListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberCouponListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponHistoryDetailListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponProductCategoryRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCouponProductRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponHistoryDetailListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponHistoryDetailListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashPromotionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionListByDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionListByDateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashPromotionLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionProductRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashPromotionProductRelationAddData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionProductRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionProductRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionProductRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionProductRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionProductRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionProductRelationDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionProductRelationDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionProductRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashPromotionProductRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionProductRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFlashPromotionSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlashPromotionSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionSessionStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashPromotionSessionStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashPromotionSessionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionListByTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlashPromotionSessionListByTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeAdvertiseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeAdvertiseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeAdvertiseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeAdvertiseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeAdvertiseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeAdvertiseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeAdvertiseStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeAdvertiseStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeAdvertiseDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeAdvertiseDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeAdvertiseListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeAdvertiseListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeAdvertiseListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeBrandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBrandAddData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeBrandResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeBrandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeBrandResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeBrandSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeBrandSortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeBrandStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeBrandStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeBrandDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeBrandDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeBrandListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBrandListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeBrandListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeNewProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeNewProductAddData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeNewProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeNewProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeNewProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewProductSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewProductSortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeNewProductStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeNewProductStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeNewProductDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeNewProductDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeNewProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeNewProductListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeNewProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeRecommendProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRecommendProductAddData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeRecommendProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeRecommendProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeRecommendProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendProductSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendProductSortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeRecommendProductStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeRecommendProductStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendProductDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendProductDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRecommendProductListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeRecommendSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRecommendSubjectAddData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomeRecommendSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeRecommendSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHomeRecommendSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendSubjectSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendSubjectSortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeRecommendSubjectStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomeRecommendSubjectStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendSubjectDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendSubjectDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendSubjectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRecommendSubjectListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sms_sms_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHomeRecommendSubjectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_sms_sms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   158,
			NumExtensions: 0,
			NumServices:   11,
		},
		GoTypes:           file_rpc_sms_sms_proto_goTypes,
		DependencyIndexes: file_rpc_sms_sms_proto_depIdxs,
		MessageInfos:      file_rpc_sms_sms_proto_msgTypes,
	}.Build()
	File_rpc_sms_sms_proto = out.File
	file_rpc_sms_sms_proto_rawDesc = nil
	file_rpc_sms_sms_proto_goTypes = nil
	file_rpc_sms_sms_proto_depIdxs = nil
}

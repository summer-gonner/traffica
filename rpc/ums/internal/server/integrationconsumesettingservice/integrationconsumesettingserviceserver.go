// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/ums/internal/logic/integrationconsumesettingservice"
	"github.com/feihua/zero-admin/rpc/ums/internal/svc"
	"github.com/feihua/zero-admin/rpc/ums/umsclient"
)

type IntegrationConsumeSettingServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedIntegrationConsumeSettingServiceServer
}

func NewIntegrationConsumeSettingServiceServer(svcCtx *svc.ServiceContext) *IntegrationConsumeSettingServiceServer {
	return &IntegrationConsumeSettingServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加积分消费设置
func (s *IntegrationConsumeSettingServiceServer) AddIntegrationConsumeSetting(ctx context.Context, in *umsclient.AddIntegrationConsumeSettingReq) (*umsclient.AddIntegrationConsumeSettingResp, error) {
	l := integrationconsumesettingservicelogic.NewAddIntegrationConsumeSettingLogic(ctx, s.svcCtx)
	return l.AddIntegrationConsumeSetting(in)
}

// 删除积分消费设置
func (s *IntegrationConsumeSettingServiceServer) DeleteIntegrationConsumeSetting(ctx context.Context, in *umsclient.DeleteIntegrationConsumeSettingReq) (*umsclient.DeleteIntegrationConsumeSettingResp, error) {
	l := integrationconsumesettingservicelogic.NewDeleteIntegrationConsumeSettingLogic(ctx, s.svcCtx)
	return l.DeleteIntegrationConsumeSetting(in)
}

// 更新积分消费设置
func (s *IntegrationConsumeSettingServiceServer) UpdateIntegrationConsumeSetting(ctx context.Context, in *umsclient.UpdateIntegrationConsumeSettingReq) (*umsclient.UpdateIntegrationConsumeSettingResp, error) {
	l := integrationconsumesettingservicelogic.NewUpdateIntegrationConsumeSettingLogic(ctx, s.svcCtx)
	return l.UpdateIntegrationConsumeSetting(in)
}

// 更新积分消费设置状态
func (s *IntegrationConsumeSettingServiceServer) UpdateIntegrationConsumeSettingStatus(ctx context.Context, in *umsclient.UpdateIntegrationConsumeSettingStatusReq) (*umsclient.UpdateIntegrationConsumeSettingStatusResp, error) {
	l := integrationconsumesettingservicelogic.NewUpdateIntegrationConsumeSettingStatusLogic(ctx, s.svcCtx)
	return l.UpdateIntegrationConsumeSettingStatus(in)
}

// 查询积分消费设置详情
func (s *IntegrationConsumeSettingServiceServer) QueryIntegrationConsumeSettingDetail(ctx context.Context, in *umsclient.QueryIntegrationConsumeSettingDetailReq) (*umsclient.QueryIntegrationConsumeSettingDetailResp, error) {
	l := integrationconsumesettingservicelogic.NewQueryIntegrationConsumeSettingDetailLogic(ctx, s.svcCtx)
	return l.QueryIntegrationConsumeSettingDetail(in)
}

// 查询积分消费设置列表
func (s *IntegrationConsumeSettingServiceServer) QueryIntegrationConsumeSettingList(ctx context.Context, in *umsclient.QueryIntegrationConsumeSettingListReq) (*umsclient.QueryIntegrationConsumeSettingListResp, error) {
	l := integrationconsumesettingservicelogic.NewQueryIntegrationConsumeSettingListLogic(ctx, s.svcCtx)
	return l.QueryIntegrationConsumeSettingList(in)
}

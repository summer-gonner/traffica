// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: rpc/ums/ums.proto

package umsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加成长值变化历史记录表
type AddGrowthChangeHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	OperateNote string `protobuf:"bytes,3,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,4,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
}

func (x *AddGrowthChangeHistoryReq) Reset() {
	*x = AddGrowthChangeHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGrowthChangeHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGrowthChangeHistoryReq) ProtoMessage() {}

func (x *AddGrowthChangeHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGrowthChangeHistoryReq.ProtoReflect.Descriptor instead.
func (*AddGrowthChangeHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{0}
}

func (x *AddGrowthChangeHistoryReq) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *AddGrowthChangeHistoryReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *AddGrowthChangeHistoryReq) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *AddGrowthChangeHistoryReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AddGrowthChangeHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddGrowthChangeHistoryReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type AddGrowthChangeHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddGrowthChangeHistoryResp) Reset() {
	*x = AddGrowthChangeHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGrowthChangeHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGrowthChangeHistoryResp) ProtoMessage() {}

func (x *AddGrowthChangeHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGrowthChangeHistoryResp.ProtoReflect.Descriptor instead.
func (*AddGrowthChangeHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{1}
}

func (x *AddGrowthChangeHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除成长值变化历史记录表
type DeleteGrowthChangeHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteGrowthChangeHistoryReq) Reset() {
	*x = DeleteGrowthChangeHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGrowthChangeHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGrowthChangeHistoryReq) ProtoMessage() {}

func (x *DeleteGrowthChangeHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGrowthChangeHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteGrowthChangeHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteGrowthChangeHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteGrowthChangeHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteGrowthChangeHistoryResp) Reset() {
	*x = DeleteGrowthChangeHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGrowthChangeHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGrowthChangeHistoryResp) ProtoMessage() {}

func (x *DeleteGrowthChangeHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGrowthChangeHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteGrowthChangeHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteGrowthChangeHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询成长值变化历史记录表详情
type QueryGrowthChangeHistoryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryGrowthChangeHistoryDetailReq) Reset() {
	*x = QueryGrowthChangeHistoryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGrowthChangeHistoryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrowthChangeHistoryDetailReq) ProtoMessage() {}

func (x *QueryGrowthChangeHistoryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrowthChangeHistoryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryGrowthChangeHistoryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{4}
}

func (x *QueryGrowthChangeHistoryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryGrowthChangeHistoryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	CreateTime  string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //创建时间
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                      //
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
	OperateNote string `protobuf:"bytes,7,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,8,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
}

func (x *QueryGrowthChangeHistoryDetailResp) Reset() {
	*x = QueryGrowthChangeHistoryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGrowthChangeHistoryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrowthChangeHistoryDetailResp) ProtoMessage() {}

func (x *QueryGrowthChangeHistoryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrowthChangeHistoryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryGrowthChangeHistoryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{5}
}

func (x *QueryGrowthChangeHistoryDetailResp) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *QueryGrowthChangeHistoryDetailResp) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryGrowthChangeHistoryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryGrowthChangeHistoryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryGrowthChangeHistoryDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryGrowthChangeHistoryDetailResp) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *QueryGrowthChangeHistoryDetailResp) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *QueryGrowthChangeHistoryDetailResp) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

// 分页查询成长值变化历史记录表列表
type QueryGrowthChangeHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryGrowthChangeHistoryListReq) Reset() {
	*x = QueryGrowthChangeHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGrowthChangeHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrowthChangeHistoryListReq) ProtoMessage() {}

func (x *QueryGrowthChangeHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrowthChangeHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryGrowthChangeHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGrowthChangeHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryGrowthChangeHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryGrowthChangeHistoryListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type GrowthChangeHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	CreateTime  string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //创建时间
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                      //
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
	OperateNote string `protobuf:"bytes,7,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,8,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
}

func (x *GrowthChangeHistoryListData) Reset() {
	*x = GrowthChangeHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrowthChangeHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrowthChangeHistoryListData) ProtoMessage() {}

func (x *GrowthChangeHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrowthChangeHistoryListData.ProtoReflect.Descriptor instead.
func (*GrowthChangeHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{7}
}

func (x *GrowthChangeHistoryListData) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *GrowthChangeHistoryListData) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *GrowthChangeHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *GrowthChangeHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrowthChangeHistoryListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *GrowthChangeHistoryListData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *GrowthChangeHistoryListData) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *GrowthChangeHistoryListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

type QueryGrowthChangeHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*GrowthChangeHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryGrowthChangeHistoryListResp) Reset() {
	*x = QueryGrowthChangeHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGrowthChangeHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrowthChangeHistoryListResp) ProtoMessage() {}

func (x *QueryGrowthChangeHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrowthChangeHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryGrowthChangeHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{8}
}

func (x *QueryGrowthChangeHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryGrowthChangeHistoryListResp) GetList() []*GrowthChangeHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加积分变化历史记录表
type AddIntegrationChangeHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	OperateNote string `protobuf:"bytes,3,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,4,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
}

func (x *AddIntegrationChangeHistoryReq) Reset() {
	*x = AddIntegrationChangeHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationChangeHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationChangeHistoryReq) ProtoMessage() {}

func (x *AddIntegrationChangeHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationChangeHistoryReq.ProtoReflect.Descriptor instead.
func (*AddIntegrationChangeHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{9}
}

func (x *AddIntegrationChangeHistoryReq) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *AddIntegrationChangeHistoryReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *AddIntegrationChangeHistoryReq) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *AddIntegrationChangeHistoryReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AddIntegrationChangeHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddIntegrationChangeHistoryReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

type AddIntegrationChangeHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddIntegrationChangeHistoryResp) Reset() {
	*x = AddIntegrationChangeHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationChangeHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationChangeHistoryResp) ProtoMessage() {}

func (x *AddIntegrationChangeHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationChangeHistoryResp.ProtoReflect.Descriptor instead.
func (*AddIntegrationChangeHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{10}
}

func (x *AddIntegrationChangeHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除积分变化历史记录表
type DeleteIntegrationChangeHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIntegrationChangeHistoryReq) Reset() {
	*x = DeleteIntegrationChangeHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationChangeHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationChangeHistoryReq) ProtoMessage() {}

func (x *DeleteIntegrationChangeHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationChangeHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationChangeHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteIntegrationChangeHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteIntegrationChangeHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteIntegrationChangeHistoryResp) Reset() {
	*x = DeleteIntegrationChangeHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationChangeHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationChangeHistoryResp) ProtoMessage() {}

func (x *DeleteIntegrationChangeHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationChangeHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationChangeHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteIntegrationChangeHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询积分变化历史记录表详情
type QueryIntegrationChangeHistoryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIntegrationChangeHistoryDetailReq) Reset() {
	*x = QueryIntegrationChangeHistoryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationChangeHistoryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationChangeHistoryDetailReq) ProtoMessage() {}

func (x *QueryIntegrationChangeHistoryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationChangeHistoryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationChangeHistoryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{13}
}

func (x *QueryIntegrationChangeHistoryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryIntegrationChangeHistoryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	CreateTime  string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //创建时间
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                      //
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
	OperateNote string `protobuf:"bytes,7,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,8,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
}

func (x *QueryIntegrationChangeHistoryDetailResp) Reset() {
	*x = QueryIntegrationChangeHistoryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationChangeHistoryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationChangeHistoryDetailResp) ProtoMessage() {}

func (x *QueryIntegrationChangeHistoryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationChangeHistoryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationChangeHistoryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{14}
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *QueryIntegrationChangeHistoryDetailResp) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

// 分页查询积分变化历史记录表列表
type QueryIntegrationChangeHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryIntegrationChangeHistoryListReq) Reset() {
	*x = QueryIntegrationChangeHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationChangeHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationChangeHistoryListReq) ProtoMessage() {}

func (x *QueryIntegrationChangeHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationChangeHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationChangeHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{15}
}

func (x *QueryIntegrationChangeHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type IntegrationChangeHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeCount int32  `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"` //积分改变数量
	ChangeType  int32  `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`    //改变类型：0->增加；1->减少
	CreateTime  string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`     //创建时间
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                      //
	MemberId    int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //会员id
	OperateMan  string `protobuf:"bytes,6,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`     //操作人员
	OperateNote string `protobuf:"bytes,7,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`  //操作备注
	SourceType  int32  `protobuf:"varint,8,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //积分来源：0->购物；1->管理员修改
}

func (x *IntegrationChangeHistoryListData) Reset() {
	*x = IntegrationChangeHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationChangeHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationChangeHistoryListData) ProtoMessage() {}

func (x *IntegrationChangeHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationChangeHistoryListData.ProtoReflect.Descriptor instead.
func (*IntegrationChangeHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{16}
}

func (x *IntegrationChangeHistoryListData) GetChangeCount() int32 {
	if x != nil {
		return x.ChangeCount
	}
	return 0
}

func (x *IntegrationChangeHistoryListData) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *IntegrationChangeHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *IntegrationChangeHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntegrationChangeHistoryListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *IntegrationChangeHistoryListData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *IntegrationChangeHistoryListData) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *IntegrationChangeHistoryListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

type QueryIntegrationChangeHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*IntegrationChangeHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryIntegrationChangeHistoryListResp) Reset() {
	*x = QueryIntegrationChangeHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationChangeHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationChangeHistoryListResp) ProtoMessage() {}

func (x *QueryIntegrationChangeHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationChangeHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationChangeHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{17}
}

func (x *QueryIntegrationChangeHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryIntegrationChangeHistoryListResp) GetList() []*IntegrationChangeHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加积分消费设置
type AddIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponStatus       int32 `protobuf:"varint,1,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	UseUnit            int32 `protobuf:"varint,3,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	IsDefault          int32 `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	MaxPercentPerOrder int32 `protobuf:"varint,5,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
}

func (x *AddIntegrationConsumeSettingReq) Reset() {
	*x = AddIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *AddIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*AddIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{18}
}

func (x *AddIntegrationConsumeSettingReq) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

type AddIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddIntegrationConsumeSettingResp) Reset() {
	*x = AddIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *AddIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*AddIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{19}
}

func (x *AddIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除积分消费设置
type DeleteIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIntegrationConsumeSettingReq) Reset() {
	*x = DeleteIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *DeleteIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteIntegrationConsumeSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteIntegrationConsumeSettingResp) Reset() {
	*x = DeleteIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *DeleteIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新积分消费设置
type UpdateIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponStatus       int32 `protobuf:"varint,1,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	Id                 int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	UseUnit            int32 `protobuf:"varint,4,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	MaxPercentPerOrder int32 `protobuf:"varint,5,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
}

func (x *UpdateIntegrationConsumeSettingReq) Reset() {
	*x = UpdateIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateIntegrationConsumeSettingReq) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

type UpdateIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateIntegrationConsumeSettingResp) Reset() {
	*x = UpdateIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新积分消费设置状态
type UpdateIntegrationConsumeSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //
	IsDefault int32 `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` //是否默认：0->否；1->是
}

func (x *UpdateIntegrationConsumeSettingStatusReq) Reset() {
	*x = UpdateIntegrationConsumeSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingStatusReq) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateIntegrationConsumeSettingStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingStatusReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UpdateIntegrationConsumeSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateIntegrationConsumeSettingStatusResp) Reset() {
	*x = UpdateIntegrationConsumeSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingStatusResp) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateIntegrationConsumeSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询积分消费设置详情
type QueryIntegrationConsumeSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIntegrationConsumeSettingDetailReq) Reset() {
	*x = QueryIntegrationConsumeSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingDetailReq) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{26}
}

func (x *QueryIntegrationConsumeSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryIntegrationConsumeSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponStatus       int32 `protobuf:"varint,1,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	Id                 int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	IsDefault          int32 `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	MaxPercentPerOrder int32 `protobuf:"varint,5,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,6,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
}

func (x *QueryIntegrationConsumeSettingDetailResp) Reset() {
	*x = QueryIntegrationConsumeSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingDetailResp) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{27}
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

// 分页查询积分消费设置列表
type QueryIntegrationConsumeSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryIntegrationConsumeSettingListReq) Reset() {
	*x = QueryIntegrationConsumeSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingListReq) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{28}
}

func (x *QueryIntegrationConsumeSettingListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type IntegrationConsumeSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponStatus       int32 `protobuf:"varint,1,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	Id                 int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	IsDefault          int32 `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	MaxPercentPerOrder int32 `protobuf:"varint,5,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,6,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
}

func (x *IntegrationConsumeSettingListData) Reset() {
	*x = IntegrationConsumeSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationConsumeSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationConsumeSettingListData) ProtoMessage() {}

func (x *IntegrationConsumeSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationConsumeSettingListData.ProtoReflect.Descriptor instead.
func (*IntegrationConsumeSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{29}
}

func (x *IntegrationConsumeSettingListData) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

type QueryIntegrationConsumeSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*IntegrationConsumeSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryIntegrationConsumeSettingListResp) Reset() {
	*x = QueryIntegrationConsumeSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingListResp) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{30}
}

func (x *QueryIntegrationConsumeSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingListResp) GetList() []*IntegrationConsumeSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员表
type AddMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberName string `protobuf:"bytes,1,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"` //用户名
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`                       //密码
	Phone      string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`                             //手机号码
}

func (x *AddMemberReq) Reset() {
	*x = AddMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReq) ProtoMessage() {}

func (x *AddMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReq.ProtoReflect.Descriptor instead.
func (*AddMemberReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{31}
}

func (x *AddMemberReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *AddMemberReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddMemberReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type AddMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AddMemberResp) Reset() {
	*x = AddMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberResp) ProtoMessage() {}

func (x *AddMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberResp.ProtoReflect.Descriptor instead.
func (*AddMemberResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{32}
}

func (x *AddMemberResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 删除会员表
type DeleteMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberReq) Reset() {
	*x = DeleteMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReq) ProtoMessage() {}

func (x *DeleteMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteMemberReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberResp) Reset() {
	*x = DeleteMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberResp) ProtoMessage() {}

func (x *DeleteMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteMemberResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员表
type UpdateMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday              string `protobuf:"bytes,1,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                         //生日
	City                  string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                                                 //所做城市
	SourceType            int32  `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                  //用户来源
	Gender                int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                                                            //性别：0->未知；1->男；2->女
	Growth                int32  `protobuf:"varint,5,opt,name=growth,proto3" json:"growth,omitempty"`                                                            //成长值
	HistoryIntegration    int32  `protobuf:"varint,6,opt,name=history_integration,json=historyIntegration,proto3" json:"history_integration,omitempty"`          //历史积分数量
	Icon                  string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                                                 //头像
	Id                    int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                                                    //
	Integration           int32  `protobuf:"varint,9,opt,name=integration,proto3" json:"integration,omitempty"`                                                  //积分
	Job                   string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                                                                  //职业
	LotteryCount          int32  `protobuf:"varint,11,opt,name=lottery_count,json=lotteryCount,proto3" json:"lottery_count,omitempty"`                           //剩余抽奖次数
	MemberLevelId         int64  `protobuf:"varint,12,opt,name=member_level_id,json=memberLevelId,proto3" json:"member_level_id,omitempty"`                      //会员等级id
	MemberName            string `protobuf:"bytes,13,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                                  //用户名
	MemberStatus          int32  `protobuf:"varint,14,opt,name=member_status,json=memberStatus,proto3" json:"member_status,omitempty"`                           //帐号启用状态:0->禁用；1->启用
	Nickname              string `protobuf:"bytes,15,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                        //昵称
	Phone                 string `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone,omitempty"`                                                              //手机号码
	PersonalizedSignature string `protobuf:"bytes,17,opt,name=personalized_signature,json=personalizedSignature,proto3" json:"personalized_signature,omitempty"` //个性签名
}

func (x *UpdateMemberReq) Reset() {
	*x = UpdateMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReq) ProtoMessage() {}

func (x *UpdateMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateMemberReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateMemberReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateMemberReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *UpdateMemberReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateMemberReq) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *UpdateMemberReq) GetHistoryIntegration() int32 {
	if x != nil {
		return x.HistoryIntegration
	}
	return 0
}

func (x *UpdateMemberReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberReq) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *UpdateMemberReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UpdateMemberReq) GetLotteryCount() int32 {
	if x != nil {
		return x.LotteryCount
	}
	return 0
}

func (x *UpdateMemberReq) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *UpdateMemberReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *UpdateMemberReq) GetMemberStatus() int32 {
	if x != nil {
		return x.MemberStatus
	}
	return 0
}

func (x *UpdateMemberReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateMemberReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateMemberReq) GetPersonalizedSignature() string {
	if x != nil {
		return x.PersonalizedSignature
	}
	return ""
}

type UpdateMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberResp) Reset() {
	*x = UpdateMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberResp) ProtoMessage() {}

func (x *UpdateMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateMemberResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员表状态
type UpdateMemberStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday              string `protobuf:"bytes,1,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                         //生日
	City                  string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                                                 //所做城市
	CreateTime            string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                   //创建时间
	Gender                int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                                                            //性别：0->未知；1->男；2->女
	Growth                int32  `protobuf:"varint,5,opt,name=growth,proto3" json:"growth,omitempty"`                                                            //成长值
	HistoryIntegration    int32  `protobuf:"varint,6,opt,name=history_integration,json=historyIntegration,proto3" json:"history_integration,omitempty"`          //历史积分数量
	Icon                  string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                                                 //头像
	Id                    int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                                                    //
	Integration           int32  `protobuf:"varint,9,opt,name=integration,proto3" json:"integration,omitempty"`                                                  //积分
	Job                   string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                                                                  //职业
	LotteryCount          int32  `protobuf:"varint,11,opt,name=lottery_count,json=lotteryCount,proto3" json:"lottery_count,omitempty"`                           //剩余抽奖次数
	MemberLevelId         int64  `protobuf:"varint,12,opt,name=member_level_id,json=memberLevelId,proto3" json:"member_level_id,omitempty"`                      //会员等级id
	MemberName            string `protobuf:"bytes,13,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                                  //用户名
	MemberStatus          int32  `protobuf:"varint,14,opt,name=member_status,json=memberStatus,proto3" json:"member_status,omitempty"`                           //帐号启用状态:0->禁用；1->启用
	Nickname              string `protobuf:"bytes,15,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                        //昵称
	Password              string `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`                                                        //密码
	PersonalizedSignature string `protobuf:"bytes,17,opt,name=personalized_signature,json=personalizedSignature,proto3" json:"personalized_signature,omitempty"` //个性签名
	Phone                 string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`                                                              //手机号码
	SourceType            int32  `protobuf:"varint,19,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                 //用户来源
	UpdateTime            string `protobuf:"bytes,20,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                                  //更新时间
}

func (x *UpdateMemberStatusReq) Reset() {
	*x = UpdateMemberStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberStatusReq) ProtoMessage() {}

func (x *UpdateMemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateMemberStatusReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetHistoryIntegration() int32 {
	if x != nil {
		return x.HistoryIntegration
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetLotteryCount() int32 {
	if x != nil {
		return x.LotteryCount
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetMemberStatus() int32 {
	if x != nil {
		return x.MemberStatus
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetPersonalizedSignature() string {
	if x != nil {
		return x.PersonalizedSignature
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateMemberStatusReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *UpdateMemberStatusReq) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UpdateMemberStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberStatusResp) Reset() {
	*x = UpdateMemberStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberStatusResp) ProtoMessage() {}

func (x *UpdateMemberStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateMemberStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员表详情
type QueryMemberDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberDetailReq) Reset() {
	*x = QueryMemberDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberDetailReq) ProtoMessage() {}

func (x *QueryMemberDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{39}
}

func (x *QueryMemberDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday              string `protobuf:"bytes,1,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                         //生日
	City                  string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                                                 //所做城市
	CreateTime            string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                   //创建时间
	Gender                int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                                                            //性别：0->未知；1->男；2->女
	Growth                int32  `protobuf:"varint,5,opt,name=growth,proto3" json:"growth,omitempty"`                                                            //成长值
	HistoryIntegration    int32  `protobuf:"varint,6,opt,name=history_integration,json=historyIntegration,proto3" json:"history_integration,omitempty"`          //历史积分数量
	Icon                  string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                                                 //头像
	Id                    int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                                                    //
	Integration           int32  `protobuf:"varint,9,opt,name=integration,proto3" json:"integration,omitempty"`                                                  //积分
	Job                   string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                                                                  //职业
	LotteryCount          int32  `protobuf:"varint,11,opt,name=lottery_count,json=lotteryCount,proto3" json:"lottery_count,omitempty"`                           //剩余抽奖次数
	MemberLevelId         int64  `protobuf:"varint,12,opt,name=member_level_id,json=memberLevelId,proto3" json:"member_level_id,omitempty"`                      //会员等级id
	MemberName            string `protobuf:"bytes,13,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                                  //用户名
	MemberStatus          int32  `protobuf:"varint,14,opt,name=member_status,json=memberStatus,proto3" json:"member_status,omitempty"`                           //帐号启用状态:0->禁用；1->启用
	Nickname              string `protobuf:"bytes,15,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                        //昵称
	Password              string `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`                                                        //密码
	PersonalizedSignature string `protobuf:"bytes,17,opt,name=personalized_signature,json=personalizedSignature,proto3" json:"personalized_signature,omitempty"` //个性签名
	Phone                 string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`                                                              //手机号码
	SourceType            int32  `protobuf:"varint,19,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                 //用户来源
	UpdateTime            string `protobuf:"bytes,20,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                                  //更新时间
}

func (x *QueryMemberDetailResp) Reset() {
	*x = QueryMemberDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberDetailResp) ProtoMessage() {}

func (x *QueryMemberDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{40}
}

func (x *QueryMemberDetailResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QueryMemberDetailResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *QueryMemberDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberDetailResp) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QueryMemberDetailResp) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *QueryMemberDetailResp) GetHistoryIntegration() int32 {
	if x != nil {
		return x.HistoryIntegration
	}
	return 0
}

func (x *QueryMemberDetailResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *QueryMemberDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberDetailResp) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *QueryMemberDetailResp) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *QueryMemberDetailResp) GetLotteryCount() int32 {
	if x != nil {
		return x.LotteryCount
	}
	return 0
}

func (x *QueryMemberDetailResp) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *QueryMemberDetailResp) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *QueryMemberDetailResp) GetMemberStatus() int32 {
	if x != nil {
		return x.MemberStatus
	}
	return 0
}

func (x *QueryMemberDetailResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryMemberDetailResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueryMemberDetailResp) GetPersonalizedSignature() string {
	if x != nil {
		return x.PersonalizedSignature
	}
	return ""
}

func (x *QueryMemberDetailResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryMemberDetailResp) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryMemberDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员表列表
type QueryMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                //第几页
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`             //每页的数量
	MemberName   string `protobuf:"bytes,3,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`        //用户名
	MemberStatus int32  `protobuf:"varint,4,opt,name=member_status,json=memberStatus,proto3" json:"member_status,omitempty"` //帐号启用状态:0->禁用；1->启用
	Phone        string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                    //手机号码
}

func (x *QueryMemberListReq) Reset() {
	*x = QueryMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberListReq) ProtoMessage() {}

func (x *QueryMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{41}
}

func (x *QueryMemberListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberListReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *QueryMemberListReq) GetMemberStatus() int32 {
	if x != nil {
		return x.MemberStatus
	}
	return 0
}

func (x *QueryMemberListReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type MemberListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday              string `protobuf:"bytes,1,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                         //生日
	City                  string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                                                 //所做城市
	CreateTime            string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                   //创建时间
	Gender                int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                                                            //性别：0->未知；1->男；2->女
	Growth                int32  `protobuf:"varint,5,opt,name=growth,proto3" json:"growth,omitempty"`                                                            //成长值
	HistoryIntegration    int32  `protobuf:"varint,6,opt,name=history_integration,json=historyIntegration,proto3" json:"history_integration,omitempty"`          //历史积分数量
	Icon                  string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                                                 //头像
	Id                    int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                                                    //
	Integration           int32  `protobuf:"varint,9,opt,name=integration,proto3" json:"integration,omitempty"`                                                  //积分
	Job                   string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                                                                  //职业
	LotteryCount          int32  `protobuf:"varint,11,opt,name=lottery_count,json=lotteryCount,proto3" json:"lottery_count,omitempty"`                           //剩余抽奖次数
	MemberLevelId         int64  `protobuf:"varint,12,opt,name=member_level_id,json=memberLevelId,proto3" json:"member_level_id,omitempty"`                      //会员等级id
	MemberName            string `protobuf:"bytes,13,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                                  //用户名
	MemberStatus          int32  `protobuf:"varint,14,opt,name=member_status,json=memberStatus,proto3" json:"member_status,omitempty"`                           //帐号启用状态:0->禁用；1->启用
	Nickname              string `protobuf:"bytes,15,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                        //昵称
	Password              string `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`                                                        //密码
	PersonalizedSignature string `protobuf:"bytes,17,opt,name=personalized_signature,json=personalizedSignature,proto3" json:"personalized_signature,omitempty"` //个性签名
	Phone                 string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`                                                              //手机号码
	SourceType            int32  `protobuf:"varint,19,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                                 //用户来源
	UpdateTime            string `protobuf:"bytes,20,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                                  //更新时间
}

func (x *MemberListData) Reset() {
	*x = MemberListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberListData) ProtoMessage() {}

func (x *MemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberListData.ProtoReflect.Descriptor instead.
func (*MemberListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{42}
}

func (x *MemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MemberListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberListData) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *MemberListData) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *MemberListData) GetHistoryIntegration() int32 {
	if x != nil {
		return x.HistoryIntegration
	}
	return 0
}

func (x *MemberListData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberListData) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *MemberListData) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *MemberListData) GetLotteryCount() int32 {
	if x != nil {
		return x.LotteryCount
	}
	return 0
}

func (x *MemberListData) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *MemberListData) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *MemberListData) GetMemberStatus() int32 {
	if x != nil {
		return x.MemberStatus
	}
	return 0
}

func (x *MemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MemberListData) GetPersonalizedSignature() string {
	if x != nil {
		return x.PersonalizedSignature
	}
	return ""
}

func (x *MemberListData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *MemberListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *MemberListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberListResp) Reset() {
	*x = QueryMemberListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberListResp) ProtoMessage() {}

func (x *QueryMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{43}
}

func (x *QueryMemberListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberListResp) GetList() []*MemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

type MemberLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
}

func (x *MemberLoginReq) Reset() {
	*x = MemberLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLoginReq) ProtoMessage() {}

func (x *MemberLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLoginReq.ProtoReflect.Descriptor instead.
func (*MemberLoginReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{44}
}

func (x *MemberLoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MemberLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MemberLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type MemberLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *MemberLoginResp) Reset() {
	*x = MemberLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLoginResp) ProtoMessage() {}

func (x *MemberLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLoginResp.ProtoReflect.Descriptor instead.
func (*MemberLoginResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{45}
}

func (x *MemberLoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdateMemberIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Integration int64 `protobuf:"varint,2,opt,name=Integration,proto3" json:"Integration,omitempty"`
}

func (x *UpdateMemberIntegrationReq) Reset() {
	*x = UpdateMemberIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberIntegrationReq) ProtoMessage() {}

func (x *UpdateMemberIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberIntegrationReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberIntegrationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateMemberIntegrationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberIntegrationReq) GetIntegration() int64 {
	if x != nil {
		return x.Integration
	}
	return 0
}

type UpdateMemberIntegrationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberIntegrationResp) Reset() {
	*x = UpdateMemberIntegrationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberIntegrationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberIntegrationResp) ProtoMessage() {}

func (x *UpdateMemberIntegrationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberIntegrationResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberIntegrationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateMemberIntegrationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 添加会员关注品牌
type AddMemberBrandAttentionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandCity string `protobuf:"bytes,1,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"` //品牌所在城市
	BrandId   int64  `protobuf:"varint,2,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`      //品牌id
	BrandLogo string `protobuf:"bytes,3,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"` //品牌Logo
	BrandName string `protobuf:"bytes,4,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"` //品牌名称
	MemberId  int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`   //会员id
}

func (x *AddMemberBrandAttentionReq) Reset() {
	*x = AddMemberBrandAttentionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberBrandAttentionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberBrandAttentionReq) ProtoMessage() {}

func (x *AddMemberBrandAttentionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberBrandAttentionReq.ProtoReflect.Descriptor instead.
func (*AddMemberBrandAttentionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{48}
}

func (x *AddMemberBrandAttentionReq) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

func (x *AddMemberBrandAttentionReq) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *AddMemberBrandAttentionReq) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *AddMemberBrandAttentionReq) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *AddMemberBrandAttentionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type AddMemberBrandAttentionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberBrandAttentionResp) Reset() {
	*x = AddMemberBrandAttentionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberBrandAttentionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberBrandAttentionResp) ProtoMessage() {}

func (x *AddMemberBrandAttentionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberBrandAttentionResp.ProtoReflect.Descriptor instead.
func (*AddMemberBrandAttentionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{49}
}

func (x *AddMemberBrandAttentionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员关注品牌
type DeleteMemberBrandAttentionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberBrandAttentionReq) Reset() {
	*x = DeleteMemberBrandAttentionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberBrandAttentionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberBrandAttentionReq) ProtoMessage() {}

func (x *DeleteMemberBrandAttentionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberBrandAttentionReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberBrandAttentionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteMemberBrandAttentionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberBrandAttentionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberBrandAttentionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberBrandAttentionResp) Reset() {
	*x = DeleteMemberBrandAttentionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberBrandAttentionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberBrandAttentionResp) ProtoMessage() {}

func (x *DeleteMemberBrandAttentionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberBrandAttentionResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberBrandAttentionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteMemberBrandAttentionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员关注品牌详情
type QueryMemberBrandAttentionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberBrandAttentionDetailReq) Reset() {
	*x = QueryMemberBrandAttentionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionDetailReq) ProtoMessage() {}

func (x *QueryMemberBrandAttentionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{52}
}

func (x *QueryMemberBrandAttentionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberBrandAttentionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandCity      string `protobuf:"bytes,1,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"`                  //品牌所在城市
	BrandId        int64  `protobuf:"varint,2,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                       //品牌id
	BrandLogo      string `protobuf:"bytes,3,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"`                  //品牌Logo
	BrandName      string `protobuf:"bytes,4,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                  //品牌名称
	CreateTime     string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`               //关注时间
	Id             int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                //
	MemberIcon     string `protobuf:"bytes,7,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`               //会员头像
	MemberId       int64  `protobuf:"varint,8,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                    //会员id
	MemberNickName string `protobuf:"bytes,9,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"` //会员姓名
}

func (x *QueryMemberBrandAttentionDetailResp) Reset() {
	*x = QueryMemberBrandAttentionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionDetailResp) ProtoMessage() {}

func (x *QueryMemberBrandAttentionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{53}
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

// 分页查询会员关注品牌列表
type QueryMemberBrandAttentionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberBrandAttentionListReq) Reset() {
	*x = QueryMemberBrandAttentionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionListReq) ProtoMessage() {}

func (x *QueryMemberBrandAttentionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{54}
}

func (x *QueryMemberBrandAttentionListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberBrandAttentionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandCity  string `protobuf:"bytes,1,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"`    //品牌所在城市
	BrandId    int64  `protobuf:"varint,2,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`         //品牌id
	BrandLogo  string `protobuf:"bytes,3,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"`    //品牌Logo
	BrandName  string `protobuf:"bytes,4,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`    //品牌名称
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //关注时间
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                  //
}

func (x *MemberBrandAttentionListData) Reset() {
	*x = MemberBrandAttentionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberBrandAttentionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberBrandAttentionListData) ProtoMessage() {}

func (x *MemberBrandAttentionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberBrandAttentionListData.ProtoReflect.Descriptor instead.
func (*MemberBrandAttentionListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{55}
}

func (x *MemberBrandAttentionListData) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *MemberBrandAttentionListData) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberBrandAttentionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberBrandAttentionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberBrandAttentionListResp) Reset() {
	*x = QueryMemberBrandAttentionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionListResp) ProtoMessage() {}

func (x *QueryMemberBrandAttentionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{56}
}

func (x *QueryMemberBrandAttentionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberBrandAttentionListResp) GetList() []*MemberBrandAttentionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员等级表
type AddMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentGrowthPoint int32  `protobuf:"varint,1,opt,name=comment_growth_point,json=commentGrowthPoint,proto3" json:"comment_growth_point,omitempty"` //每次评价获取的成长值
	DefaultStatus      int32  `protobuf:"varint,2,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"`                  //是否为默认等级：0->不是；1->是
	FreeFreightPoint   int64  `protobuf:"varint,3,opt,name=free_freight_point,json=freeFreightPoint,proto3" json:"free_freight_point,omitempty"`       //免运费标准
	GrowthPoint        int32  `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`                        //成长点
	Remark             string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                                                      //备注
	IsBirthday         int32  `protobuf:"varint,6,opt,name=is_birthday,json=isBirthday,proto3" json:"is_birthday,omitempty"`                           //是否有生日特权
	IsComment          int32  `protobuf:"varint,7,opt,name=is_comment,json=isComment,proto3" json:"is_comment,omitempty"`                              //是否有评论获奖励特权
	IsFreeFreight      int32  `protobuf:"varint,8,opt,name=is_free_freight,json=isFreeFreight,proto3" json:"is_free_freight,omitempty"`                //是否有免邮特权
	IsMemberPrice      int32  `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`                //是否有会员价格特权
	IsPromotion        int32  `protobuf:"varint,10,opt,name=is_promotion,json=isPromotion,proto3" json:"is_promotion,omitempty"`                       //是否有专享活动特权
	IsSignIn           int32  `protobuf:"varint,11,opt,name=is_sign_in,json=isSignIn,proto3" json:"is_sign_in,omitempty"`                              //是否有签到特权
	LevelName          string `protobuf:"bytes,12,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                              //等级名称
}

func (x *AddMemberLevelReq) Reset() {
	*x = AddMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberLevelReq) ProtoMessage() {}

func (x *AddMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberLevelReq.ProtoReflect.Descriptor instead.
func (*AddMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{57}
}

func (x *AddMemberLevelReq) GetCommentGrowthPoint() int32 {
	if x != nil {
		return x.CommentGrowthPoint
	}
	return 0
}

func (x *AddMemberLevelReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *AddMemberLevelReq) GetFreeFreightPoint() int64 {
	if x != nil {
		return x.FreeFreightPoint
	}
	return 0
}

func (x *AddMemberLevelReq) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *AddMemberLevelReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddMemberLevelReq) GetIsBirthday() int32 {
	if x != nil {
		return x.IsBirthday
	}
	return 0
}

func (x *AddMemberLevelReq) GetIsComment() int32 {
	if x != nil {
		return x.IsComment
	}
	return 0
}

func (x *AddMemberLevelReq) GetIsFreeFreight() int32 {
	if x != nil {
		return x.IsFreeFreight
	}
	return 0
}

func (x *AddMemberLevelReq) GetIsMemberPrice() int32 {
	if x != nil {
		return x.IsMemberPrice
	}
	return 0
}

func (x *AddMemberLevelReq) GetIsPromotion() int32 {
	if x != nil {
		return x.IsPromotion
	}
	return 0
}

func (x *AddMemberLevelReq) GetIsSignIn() int32 {
	if x != nil {
		return x.IsSignIn
	}
	return 0
}

func (x *AddMemberLevelReq) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

type AddMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberLevelResp) Reset() {
	*x = AddMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberLevelResp) ProtoMessage() {}

func (x *AddMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberLevelResp.ProtoReflect.Descriptor instead.
func (*AddMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{58}
}

func (x *AddMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员等级表
type DeleteMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberLevelReq) Reset() {
	*x = DeleteMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLevelReq) ProtoMessage() {}

func (x *DeleteMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLevelReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteMemberLevelReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberLevelResp) Reset() {
	*x = DeleteMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLevelResp) ProtoMessage() {}

func (x *DeleteMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLevelResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员等级表
type UpdateMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentGrowthPoint int32  `protobuf:"varint,1,opt,name=comment_growth_point,json=commentGrowthPoint,proto3" json:"comment_growth_point,omitempty"` //每次评价获取的成长值
	DefaultStatus      int32  `protobuf:"varint,2,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"`                  //是否为默认等级：0->不是；1->是
	FreeFreightPoint   int64  `protobuf:"varint,3,opt,name=free_freight_point,json=freeFreightPoint,proto3" json:"free_freight_point,omitempty"`       //免运费标准
	GrowthPoint        int32  `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`                        //成长点
	Id                 int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                             //
	IsBirthday         int32  `protobuf:"varint,6,opt,name=is_birthday,json=isBirthday,proto3" json:"is_birthday,omitempty"`                           //是否有生日特权
	IsComment          int32  `protobuf:"varint,7,opt,name=is_comment,json=isComment,proto3" json:"is_comment,omitempty"`                              //是否有评论获奖励特权
	IsFreeFreight      int32  `protobuf:"varint,8,opt,name=is_free_freight,json=isFreeFreight,proto3" json:"is_free_freight,omitempty"`                //是否有免邮特权
	IsMemberPrice      int32  `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`                //是否有会员价格特权
	IsPromotion        int32  `protobuf:"varint,10,opt,name=is_promotion,json=isPromotion,proto3" json:"is_promotion,omitempty"`                       //是否有专享活动特权
	IsSignIn           int32  `protobuf:"varint,11,opt,name=is_sign_in,json=isSignIn,proto3" json:"is_sign_in,omitempty"`                              //是否有签到特权
	LevelName          string `protobuf:"bytes,12,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                              //等级名称
	Remark             string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                                     //备注
}

func (x *UpdateMemberLevelReq) Reset() {
	*x = UpdateMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelReq) ProtoMessage() {}

func (x *UpdateMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateMemberLevelReq) GetCommentGrowthPoint() int32 {
	if x != nil {
		return x.CommentGrowthPoint
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetFreeFreightPoint() int64 {
	if x != nil {
		return x.FreeFreightPoint
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsBirthday() int32 {
	if x != nil {
		return x.IsBirthday
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsComment() int32 {
	if x != nil {
		return x.IsComment
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsFreeFreight() int32 {
	if x != nil {
		return x.IsFreeFreight
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsMemberPrice() int32 {
	if x != nil {
		return x.IsMemberPrice
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsPromotion() int32 {
	if x != nil {
		return x.IsPromotion
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetIsSignIn() int32 {
	if x != nil {
		return x.IsSignIn
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *UpdateMemberLevelReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberLevelResp) Reset() {
	*x = UpdateMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelResp) ProtoMessage() {}

func (x *UpdateMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员等级表状态
type UpdateMemberLevelStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultStatus int32 `protobuf:"varint,1,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认等级：0->不是；1->是
	Id            int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                            //
}

func (x *UpdateMemberLevelStatusReq) Reset() {
	*x = UpdateMemberLevelStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelStatusReq) ProtoMessage() {}

func (x *UpdateMemberLevelStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateMemberLevelStatusReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *UpdateMemberLevelStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateMemberLevelStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberLevelStatusResp) Reset() {
	*x = UpdateMemberLevelStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelStatusResp) ProtoMessage() {}

func (x *UpdateMemberLevelStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateMemberLevelStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员等级表详情
type QueryMemberLevelDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberLevelDetailReq) Reset() {
	*x = QueryMemberLevelDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelDetailReq) ProtoMessage() {}

func (x *QueryMemberLevelDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{65}
}

func (x *QueryMemberLevelDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberLevelDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentGrowthPoint int32  `protobuf:"varint,1,opt,name=comment_growth_point,json=commentGrowthPoint,proto3" json:"comment_growth_point,omitempty"` //每次评价获取的成长值
	DefaultStatus      int32  `protobuf:"varint,2,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"`                  //是否为默认等级：0->不是；1->是
	FreeFreightPoint   int64  `protobuf:"varint,3,opt,name=free_freight_point,json=freeFreightPoint,proto3" json:"free_freight_point,omitempty"`       //免运费标准
	GrowthPoint        int32  `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`                        //成长点
	Id                 int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                             //
	IsBirthday         int32  `protobuf:"varint,6,opt,name=is_birthday,json=isBirthday,proto3" json:"is_birthday,omitempty"`                           //是否有生日特权
	IsComment          int32  `protobuf:"varint,7,opt,name=is_comment,json=isComment,proto3" json:"is_comment,omitempty"`                              //是否有评论获奖励特权
	IsFreeFreight      int32  `protobuf:"varint,8,opt,name=is_free_freight,json=isFreeFreight,proto3" json:"is_free_freight,omitempty"`                //是否有免邮特权
	IsMemberPrice      int32  `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`                //是否有会员价格特权
	IsPromotion        int32  `protobuf:"varint,10,opt,name=is_promotion,json=isPromotion,proto3" json:"is_promotion,omitempty"`                       //是否有专享活动特权
	IsSignIn           int32  `protobuf:"varint,11,opt,name=is_sign_in,json=isSignIn,proto3" json:"is_sign_in,omitempty"`                              //是否有签到特权
	LevelName          string `protobuf:"bytes,12,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                              //等级名称
	Remark             string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                                     //备注
}

func (x *QueryMemberLevelDetailResp) Reset() {
	*x = QueryMemberLevelDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelDetailResp) ProtoMessage() {}

func (x *QueryMemberLevelDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{66}
}

func (x *QueryMemberLevelDetailResp) GetCommentGrowthPoint() int32 {
	if x != nil {
		return x.CommentGrowthPoint
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetFreeFreightPoint() int64 {
	if x != nil {
		return x.FreeFreightPoint
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsBirthday() int32 {
	if x != nil {
		return x.IsBirthday
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsComment() int32 {
	if x != nil {
		return x.IsComment
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsFreeFreight() int32 {
	if x != nil {
		return x.IsFreeFreight
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsMemberPrice() int32 {
	if x != nil {
		return x.IsMemberPrice
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsPromotion() int32 {
	if x != nil {
		return x.IsPromotion
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetIsSignIn() int32 {
	if x != nil {
		return x.IsSignIn
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 分页查询会员等级表列表
type QueryMemberLevelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`      //第几页
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   //每页的数量
	LevelName string `protobuf:"bytes,3,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"` //等级名称
}

func (x *QueryMemberLevelListReq) Reset() {
	*x = QueryMemberLevelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelListReq) ProtoMessage() {}

func (x *QueryMemberLevelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{67}
}

func (x *QueryMemberLevelListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberLevelListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberLevelListReq) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

type MemberLevelListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentGrowthPoint int32  `protobuf:"varint,1,opt,name=comment_growth_point,json=commentGrowthPoint,proto3" json:"comment_growth_point,omitempty"` //每次评价获取的成长值
	DefaultStatus      int32  `protobuf:"varint,2,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"`                  //是否为默认等级：0->不是；1->是
	FreeFreightPoint   int64  `protobuf:"varint,3,opt,name=free_freight_point,json=freeFreightPoint,proto3" json:"free_freight_point,omitempty"`       //免运费标准
	GrowthPoint        int32  `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`                        //成长点
	Id                 int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                             //
	IsBirthday         int32  `protobuf:"varint,6,opt,name=is_birthday,json=isBirthday,proto3" json:"is_birthday,omitempty"`                           //是否有生日特权
	IsComment          int32  `protobuf:"varint,7,opt,name=is_comment,json=isComment,proto3" json:"is_comment,omitempty"`                              //是否有评论获奖励特权
	IsFreeFreight      int32  `protobuf:"varint,8,opt,name=is_free_freight,json=isFreeFreight,proto3" json:"is_free_freight,omitempty"`                //是否有免邮特权
	IsMemberPrice      int32  `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`                //是否有会员价格特权
	IsPromotion        int32  `protobuf:"varint,10,opt,name=is_promotion,json=isPromotion,proto3" json:"is_promotion,omitempty"`                       //是否有专享活动特权
	IsSignIn           int32  `protobuf:"varint,11,opt,name=is_sign_in,json=isSignIn,proto3" json:"is_sign_in,omitempty"`                              //是否有签到特权
	LevelName          string `protobuf:"bytes,12,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                              //等级名称
	Remark             string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                                     //备注
}

func (x *MemberLevelListData) Reset() {
	*x = MemberLevelListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLevelListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLevelListData) ProtoMessage() {}

func (x *MemberLevelListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLevelListData.ProtoReflect.Descriptor instead.
func (*MemberLevelListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{68}
}

func (x *MemberLevelListData) GetCommentGrowthPoint() int32 {
	if x != nil {
		return x.CommentGrowthPoint
	}
	return 0
}

func (x *MemberLevelListData) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *MemberLevelListData) GetFreeFreightPoint() int64 {
	if x != nil {
		return x.FreeFreightPoint
	}
	return 0
}

func (x *MemberLevelListData) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *MemberLevelListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberLevelListData) GetIsBirthday() int32 {
	if x != nil {
		return x.IsBirthday
	}
	return 0
}

func (x *MemberLevelListData) GetIsComment() int32 {
	if x != nil {
		return x.IsComment
	}
	return 0
}

func (x *MemberLevelListData) GetIsFreeFreight() int32 {
	if x != nil {
		return x.IsFreeFreight
	}
	return 0
}

func (x *MemberLevelListData) GetIsMemberPrice() int32 {
	if x != nil {
		return x.IsMemberPrice
	}
	return 0
}

func (x *MemberLevelListData) GetIsPromotion() int32 {
	if x != nil {
		return x.IsPromotion
	}
	return 0
}

func (x *MemberLevelListData) GetIsSignIn() int32 {
	if x != nil {
		return x.IsSignIn
	}
	return 0
}

func (x *MemberLevelListData) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *MemberLevelListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type QueryMemberLevelListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberLevelListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberLevelListResp) Reset() {
	*x = QueryMemberLevelListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelListResp) ProtoMessage() {}

func (x *QueryMemberLevelListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{69}
}

func (x *QueryMemberLevelListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberLevelListResp) GetList() []*MemberLevelListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 删除会员登录记录
type DeleteMemberLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *DeleteMemberLoginLogReq) Reset() {
	*x = DeleteMemberLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLoginLogReq) ProtoMessage() {}

func (x *DeleteMemberLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLoginLogReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberLoginLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteMemberLoginLogReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberLoginLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberLoginLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberLoginLogResp) Reset() {
	*x = DeleteMemberLoginLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLoginLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLoginLogResp) ProtoMessage() {}

func (x *DeleteMemberLoginLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLoginLogResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberLoginLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{71}
}

func (x *DeleteMemberLoginLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询会员登录记录列表
type QueryMemberLoginLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
	LoginType int32 `protobuf:"varint,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"` //登录类型：0->PC；1->android;2->ios;3->小程序
	MemberId  int64 `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
}

func (x *QueryMemberLoginLogListReq) Reset() {
	*x = QueryMemberLoginLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLoginLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLoginLogListReq) ProtoMessage() {}

func (x *QueryMemberLoginLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLoginLogListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLoginLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{72}
}

func (x *QueryMemberLoginLogListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetLoginType() int32 {
	if x != nil {
		return x.LoginType
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberLoginLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City       string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`                               //登录城市
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //登录时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                  //
	LoginType  int32  `protobuf:"varint,4,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"`   //登录类型：0->PC；1->android;2->ios;3->小程序
	MemberId   int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员id
	MemberIp   string `protobuf:"bytes,6,opt,name=member_ip,json=memberIp,proto3" json:"member_ip,omitempty"`       //登录ip
	Province   string `protobuf:"bytes,7,opt,name=province,proto3" json:"province,omitempty"`                       //登录省份
}

func (x *MemberLoginLogListData) Reset() {
	*x = MemberLoginLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLoginLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLoginLogListData) ProtoMessage() {}

func (x *MemberLoginLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLoginLogListData.ProtoReflect.Descriptor instead.
func (*MemberLoginLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{73}
}

func (x *MemberLoginLogListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MemberLoginLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberLoginLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberLoginLogListData) GetLoginType() int32 {
	if x != nil {
		return x.LoginType
	}
	return 0
}

func (x *MemberLoginLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberLoginLogListData) GetMemberIp() string {
	if x != nil {
		return x.MemberIp
	}
	return ""
}

func (x *MemberLoginLogListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

type QueryMemberLoginLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberLoginLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberLoginLogListResp) Reset() {
	*x = QueryMemberLoginLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLoginLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLoginLogListResp) ProtoMessage() {}

func (x *QueryMemberLoginLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLoginLogListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLoginLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{74}
}

func (x *QueryMemberLoginLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberLoginLogListResp) GetList() []*MemberLoginLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户和标签关系表
type AddMemberMemberTagRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
	TagId    int64 `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`          //标签id
}

func (x *AddMemberMemberTagRelationReq) Reset() {
	*x = AddMemberMemberTagRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberMemberTagRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberMemberTagRelationReq) ProtoMessage() {}

func (x *AddMemberMemberTagRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberMemberTagRelationReq.ProtoReflect.Descriptor instead.
func (*AddMemberMemberTagRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{75}
}

func (x *AddMemberMemberTagRelationReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberMemberTagRelationReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type AddMemberMemberTagRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberMemberTagRelationResp) Reset() {
	*x = AddMemberMemberTagRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberMemberTagRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberMemberTagRelationResp) ProtoMessage() {}

func (x *AddMemberMemberTagRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberMemberTagRelationResp.ProtoReflect.Descriptor instead.
func (*AddMemberMemberTagRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{76}
}

func (x *AddMemberMemberTagRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户和标签关系表
type DeleteMemberMemberTagRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberMemberTagRelationReq) Reset() {
	*x = DeleteMemberMemberTagRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberMemberTagRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberMemberTagRelationReq) ProtoMessage() {}

func (x *DeleteMemberMemberTagRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberMemberTagRelationReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberMemberTagRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteMemberMemberTagRelationReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberMemberTagRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberMemberTagRelationResp) Reset() {
	*x = DeleteMemberMemberTagRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberMemberTagRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberMemberTagRelationResp) ProtoMessage() {}

func (x *DeleteMemberMemberTagRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberMemberTagRelationResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberMemberTagRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{78}
}

func (x *DeleteMemberMemberTagRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询用户和标签关系表列表
type QueryMemberMemberTagRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberMemberTagRelationListReq) Reset() {
	*x = QueryMemberMemberTagRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberMemberTagRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberMemberTagRelationListReq) ProtoMessage() {}

func (x *QueryMemberMemberTagRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberMemberTagRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberMemberTagRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{79}
}

func (x *QueryMemberMemberTagRelationListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberMemberTagRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
	TagId    int64 `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`          //标签id
}

func (x *MemberMemberTagRelationListData) Reset() {
	*x = MemberMemberTagRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberMemberTagRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberMemberTagRelationListData) ProtoMessage() {}

func (x *MemberMemberTagRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberMemberTagRelationListData.ProtoReflect.Descriptor instead.
func (*MemberMemberTagRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{80}
}

func (x *MemberMemberTagRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberMemberTagRelationListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberMemberTagRelationListData) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type QueryMemberMemberTagRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberMemberTagRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberMemberTagRelationListResp) Reset() {
	*x = QueryMemberMemberTagRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberMemberTagRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberMemberTagRelationListResp) ProtoMessage() {}

func (x *QueryMemberMemberTagRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberMemberTagRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberMemberTagRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{81}
}

func (x *QueryMemberMemberTagRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberMemberTagRelationListResp) GetList() []*MemberMemberTagRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员与产品分类关系表（用户喜欢的分类）
type AddMemberProductCategoryRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId          int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	ProductCategoryId int64 `protobuf:"varint,2,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
}

func (x *AddMemberProductCategoryRelationReq) Reset() {
	*x = AddMemberProductCategoryRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCategoryRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCategoryRelationReq) ProtoMessage() {}

func (x *AddMemberProductCategoryRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCategoryRelationReq.ProtoReflect.Descriptor instead.
func (*AddMemberProductCategoryRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{82}
}

func (x *AddMemberProductCategoryRelationReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberProductCategoryRelationReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

type AddMemberProductCategoryRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberProductCategoryRelationResp) Reset() {
	*x = AddMemberProductCategoryRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCategoryRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCategoryRelationResp) ProtoMessage() {}

func (x *AddMemberProductCategoryRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCategoryRelationResp.ProtoReflect.Descriptor instead.
func (*AddMemberProductCategoryRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{83}
}

func (x *AddMemberProductCategoryRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询会员与产品分类关系表（用户喜欢的分类）列表
type QueryMemberProductCategoryRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberProductCategoryRelationListReq) Reset() {
	*x = QueryMemberProductCategoryRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCategoryRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCategoryRelationListReq) ProtoMessage() {}

func (x *QueryMemberProductCategoryRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCategoryRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCategoryRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{84}
}

func (x *QueryMemberProductCategoryRelationListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberProductCategoryRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	ProductCategoryId int64 `protobuf:"varint,3,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
}

func (x *MemberProductCategoryRelationListData) Reset() {
	*x = MemberProductCategoryRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberProductCategoryRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberProductCategoryRelationListData) ProtoMessage() {}

func (x *MemberProductCategoryRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberProductCategoryRelationListData.ProtoReflect.Descriptor instead.
func (*MemberProductCategoryRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{85}
}

func (x *MemberProductCategoryRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberProductCategoryRelationListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberProductCategoryRelationListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

type QueryMemberProductCategoryRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberProductCategoryRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberProductCategoryRelationListResp) Reset() {
	*x = QueryMemberProductCategoryRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCategoryRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCategoryRelationListResp) ProtoMessage() {}

func (x *QueryMemberProductCategoryRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCategoryRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCategoryRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{86}
}

func (x *QueryMemberProductCategoryRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberProductCategoryRelationListResp) GetList() []*MemberProductCategoryRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户收藏的商品
type AddMemberProductCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductPrice    int64  `protobuf:"varint,1,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	ProductSubTitle string `protobuf:"bytes,2,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
}

func (x *AddMemberProductCollectionReq) Reset() {
	*x = AddMemberProductCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCollectionReq) ProtoMessage() {}

func (x *AddMemberProductCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCollectionReq.ProtoReflect.Descriptor instead.
func (*AddMemberProductCollectionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{87}
}

func (x *AddMemberProductCollectionReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

type AddMemberProductCollectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberProductCollectionResp) Reset() {
	*x = AddMemberProductCollectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCollectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCollectionResp) ProtoMessage() {}

func (x *AddMemberProductCollectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCollectionResp.ProtoReflect.Descriptor instead.
func (*AddMemberProductCollectionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{88}
}

func (x *AddMemberProductCollectionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户收藏的商品
type DeleteMemberProductCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberProductCollectionReq) Reset() {
	*x = DeleteMemberProductCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberProductCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberProductCollectionReq) ProtoMessage() {}

func (x *DeleteMemberProductCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberProductCollectionReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberProductCollectionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteMemberProductCollectionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberProductCollectionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberProductCollectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberProductCollectionResp) Reset() {
	*x = DeleteMemberProductCollectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberProductCollectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberProductCollectionResp) ProtoMessage() {}

func (x *DeleteMemberProductCollectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberProductCollectionResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberProductCollectionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteMemberProductCollectionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户收藏的商品详情
type QueryMemberProductCollectionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberProductCollectionDetailReq) Reset() {
	*x = QueryMemberProductCollectionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionDetailReq) ProtoMessage() {}

func (x *QueryMemberProductCollectionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{91}
}

func (x *QueryMemberProductCollectionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberProductCollectionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime      string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                   //收藏时间
	Id              int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                   //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`     //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                     //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                   //商品图片
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`            //商品价格
	ProductSubTitle string `protobuf:"bytes,10,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
}

func (x *QueryMemberProductCollectionDetailResp) Reset() {
	*x = QueryMemberProductCollectionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionDetailResp) ProtoMessage() {}

func (x *QueryMemberProductCollectionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{92}
}

func (x *QueryMemberProductCollectionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

// 分页查询用户收藏的商品列表
type QueryMemberProductCollectionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
	MemberId  int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
	ProductId int64 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品id
}

func (x *QueryMemberProductCollectionListReq) Reset() {
	*x = QueryMemberProductCollectionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionListReq) ProtoMessage() {}

func (x *QueryMemberProductCollectionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{93}
}

func (x *QueryMemberProductCollectionListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type MemberProductCollectionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime      string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                   //收藏时间
	Id              int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                   //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`     //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                     //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                   //商品图片
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`            //商品价格
	ProductSubTitle string `protobuf:"bytes,10,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
}

func (x *MemberProductCollectionListData) Reset() {
	*x = MemberProductCollectionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberProductCollectionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberProductCollectionListData) ProtoMessage() {}

func (x *MemberProductCollectionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberProductCollectionListData.ProtoReflect.Descriptor instead.
func (*MemberProductCollectionListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{94}
}

func (x *MemberProductCollectionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberProductCollectionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberProductCollectionListData) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *MemberProductCollectionListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberProductCollectionListData) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MemberProductCollectionListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *MemberProductCollectionListData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

type QueryMemberProductCollectionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberProductCollectionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberProductCollectionListResp) Reset() {
	*x = QueryMemberProductCollectionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionListResp) ProtoMessage() {}

func (x *QueryMemberProductCollectionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{95}
}

func (x *QueryMemberProductCollectionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberProductCollectionListResp) GetList() []*MemberProductCollectionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户商品浏览历史记录
type AddMemberReadHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductPrice    int64  `protobuf:"varint,1,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	ProductSubTitle string `protobuf:"bytes,2,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
}

func (x *AddMemberReadHistoryReq) Reset() {
	*x = AddMemberReadHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReadHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReadHistoryReq) ProtoMessage() {}

func (x *AddMemberReadHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReadHistoryReq.ProtoReflect.Descriptor instead.
func (*AddMemberReadHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{96}
}

func (x *AddMemberReadHistoryReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

type AddMemberReadHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberReadHistoryResp) Reset() {
	*x = AddMemberReadHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReadHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReadHistoryResp) ProtoMessage() {}

func (x *AddMemberReadHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReadHistoryResp.ProtoReflect.Descriptor instead.
func (*AddMemberReadHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{97}
}

func (x *AddMemberReadHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户商品浏览历史记录
type DeleteMemberReadHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberReadHistoryReq) Reset() {
	*x = DeleteMemberReadHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReadHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReadHistoryReq) ProtoMessage() {}

func (x *DeleteMemberReadHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReadHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberReadHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{98}
}

func (x *DeleteMemberReadHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberReadHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberReadHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberReadHistoryResp) Reset() {
	*x = DeleteMemberReadHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReadHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReadHistoryResp) ProtoMessage() {}

func (x *DeleteMemberReadHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReadHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberReadHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{99}
}

func (x *DeleteMemberReadHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户商品浏览历史记录详情
type QueryMemberReadHistoryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberReadHistoryDetailReq) Reset() {
	*x = QueryMemberReadHistoryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryDetailReq) ProtoMessage() {}

func (x *QueryMemberReadHistoryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{100}
}

func (x *QueryMemberReadHistoryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberReadHistoryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime      string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                   //浏览时间
	Id              int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                   //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`     //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                     //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                   //商品图片
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`            //商品价格
	ProductSubTitle string `protobuf:"bytes,10,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
}

func (x *QueryMemberReadHistoryDetailResp) Reset() {
	*x = QueryMemberReadHistoryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryDetailResp) ProtoMessage() {}

func (x *QueryMemberReadHistoryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{101}
}

func (x *QueryMemberReadHistoryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

// 分页查询用户商品浏览历史记录列表
type QueryMemberReadHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	MemberId int64 `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberReadHistoryListReq) Reset() {
	*x = QueryMemberReadHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryListReq) ProtoMessage() {}

func (x *QueryMemberReadHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{102}
}

func (x *QueryMemberReadHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberReadHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberReadHistoryListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberReadHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime      string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                   //浏览时间
	Id              int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	MemberIcon      string `protobuf:"bytes,3,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                   //会员头像
	MemberId        int64  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员id
	MemberNickName  string `protobuf:"bytes,5,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`     //会员姓名
	ProductId       int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                     //商品id
	ProductName     string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                //商品名称
	ProductPic      string `protobuf:"bytes,8,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                   //商品图片
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`            //商品价格
	ProductSubTitle string `protobuf:"bytes,10,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
}

func (x *MemberReadHistoryListData) Reset() {
	*x = MemberReadHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberReadHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberReadHistoryListData) ProtoMessage() {}

func (x *MemberReadHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberReadHistoryListData.ProtoReflect.Descriptor instead.
func (*MemberReadHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{103}
}

func (x *MemberReadHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberReadHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberReadHistoryListData) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *MemberReadHistoryListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberReadHistoryListData) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MemberReadHistoryListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *MemberReadHistoryListData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

type QueryMemberReadHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberReadHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberReadHistoryListResp) Reset() {
	*x = QueryMemberReadHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryListResp) ProtoMessage() {}

func (x *QueryMemberReadHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{104}
}

func (x *QueryMemberReadHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberReadHistoryListResp) GetList() []*MemberReadHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员收货地址表
type AddMemberReceiveAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`                                         //城市
	Province      string `protobuf:"bytes,2,opt,name=province,proto3" json:"province,omitempty"`                                 //省份/直辖市
	DefaultStatus int32  `protobuf:"varint,3,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认
	DetailAddress string `protobuf:"bytes,4,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`  //详细地址(街道)
	Region        string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`                                     //区
	MemberId      int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员id
	MemberName    string `protobuf:"bytes,7,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`           //收货人名称
	PhoneNumber   string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`        //收货人电话
	PostCode      string `protobuf:"bytes,9,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`                 //邮政编码
}

func (x *AddMemberReceiveAddressReq) Reset() {
	*x = AddMemberReceiveAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReceiveAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReceiveAddressReq) ProtoMessage() {}

func (x *AddMemberReceiveAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReceiveAddressReq.ProtoReflect.Descriptor instead.
func (*AddMemberReceiveAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{105}
}

func (x *AddMemberReceiveAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *AddMemberReceiveAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberReceiveAddressReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AddMemberReceiveAddressReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

type AddMemberReceiveAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberReceiveAddressResp) Reset() {
	*x = AddMemberReceiveAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReceiveAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReceiveAddressResp) ProtoMessage() {}

func (x *AddMemberReceiveAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReceiveAddressResp.ProtoReflect.Descriptor instead.
func (*AddMemberReceiveAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{106}
}

func (x *AddMemberReceiveAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员收货地址表
type DeleteMemberReceiveAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *DeleteMemberReceiveAddressReq) Reset() {
	*x = DeleteMemberReceiveAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReceiveAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReceiveAddressReq) ProtoMessage() {}

func (x *DeleteMemberReceiveAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReceiveAddressReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberReceiveAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{107}
}

func (x *DeleteMemberReceiveAddressReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberReceiveAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberReceiveAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberReceiveAddressResp) Reset() {
	*x = DeleteMemberReceiveAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReceiveAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReceiveAddressResp) ProtoMessage() {}

func (x *DeleteMemberReceiveAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReceiveAddressResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberReceiveAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{108}
}

func (x *DeleteMemberReceiveAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员收货地址表
type UpdateMemberReceiveAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`                                         //城市
	Region        string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`                                     //区
	DefaultStatus int32  `protobuf:"varint,3,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认
	DetailAddress string `protobuf:"bytes,4,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`  //详细地址(街道)
	Id            int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                            //
	MemberId      int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员id
	MemberName    string `protobuf:"bytes,7,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`           //收货人名称
	PhoneNumber   string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`        //收货人电话
	PostCode      string `protobuf:"bytes,9,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`                 //邮政编码
	Province      string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`                                //省份/直辖市
}

func (x *UpdateMemberReceiveAddressReq) Reset() {
	*x = UpdateMemberReceiveAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberReceiveAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReceiveAddressReq) ProtoMessage() {}

func (x *UpdateMemberReceiveAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReceiveAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberReceiveAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateMemberReceiveAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *UpdateMemberReceiveAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberReceiveAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberReceiveAddressReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UpdateMemberReceiveAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

type UpdateMemberReceiveAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberReceiveAddressResp) Reset() {
	*x = UpdateMemberReceiveAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberReceiveAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReceiveAddressResp) ProtoMessage() {}

func (x *UpdateMemberReceiveAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReceiveAddressResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberReceiveAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{110}
}

func (x *UpdateMemberReceiveAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员收货地址表状态
type UpdateMemberReceiveAddressStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultStatus int32 `protobuf:"varint,1,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认
	Id            int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                            //
	MemberId      int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员id
}

func (x *UpdateMemberReceiveAddressStatusReq) Reset() {
	*x = UpdateMemberReceiveAddressStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberReceiveAddressStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReceiveAddressStatusReq) ProtoMessage() {}

func (x *UpdateMemberReceiveAddressStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReceiveAddressStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberReceiveAddressStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{111}
}

func (x *UpdateMemberReceiveAddressStatusReq) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *UpdateMemberReceiveAddressStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberReceiveAddressStatusReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type UpdateMemberReceiveAddressStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberReceiveAddressStatusResp) Reset() {
	*x = UpdateMemberReceiveAddressStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberReceiveAddressStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReceiveAddressStatusResp) ProtoMessage() {}

func (x *UpdateMemberReceiveAddressStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReceiveAddressStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberReceiveAddressStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateMemberReceiveAddressStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员收货地址表详情
type QueryMemberReceiveAddressDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberReceiveAddressDetailReq) Reset() {
	*x = QueryMemberReceiveAddressDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReceiveAddressDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReceiveAddressDetailReq) ProtoMessage() {}

func (x *QueryMemberReceiveAddressDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReceiveAddressDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReceiveAddressDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{113}
}

func (x *QueryMemberReceiveAddressDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberReceiveAddressDetailReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryMemberReceiveAddressDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`                                         //城市
	CreateTime    string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //创建时间
	DefaultStatus int32  `protobuf:"varint,3,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认
	DetailAddress string `protobuf:"bytes,4,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`  //详细地址(街道)
	Id            int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                            //
	MemberId      int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员id
	MemberName    string `protobuf:"bytes,7,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`           //收货人名称
	PhoneNumber   string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`        //收货人电话
	PostCode      string `protobuf:"bytes,9,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`                 //邮政编码
	Province      string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`                                //省份/直辖市
	Region        string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                    //区
	UpdateTime    string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`          //更新时间
}

func (x *QueryMemberReceiveAddressDetailResp) Reset() {
	*x = QueryMemberReceiveAddressDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReceiveAddressDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReceiveAddressDetailResp) ProtoMessage() {}

func (x *QueryMemberReceiveAddressDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReceiveAddressDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReceiveAddressDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{114}
}

func (x *QueryMemberReceiveAddressDetailResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *QueryMemberReceiveAddressDetailResp) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberReceiveAddressDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberReceiveAddressDetailResp) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *QueryMemberReceiveAddressDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员收货地址表列表
type QueryMemberReceiveAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberReceiveAddressListReq) Reset() {
	*x = QueryMemberReceiveAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReceiveAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReceiveAddressListReq) ProtoMessage() {}

func (x *QueryMemberReceiveAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReceiveAddressListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReceiveAddressListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{115}
}

func (x *QueryMemberReceiveAddressListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberReceiveAddressListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberReceiveAddressListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberReceiveAddressListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`                                         //城市
	CreateTime    string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //创建时间
	DefaultStatus int32  `protobuf:"varint,3,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"` //是否为默认
	DetailAddress string `protobuf:"bytes,4,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`  //详细地址(街道)
	Id            int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                            //
	MemberId      int64  `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员id
	MemberName    string `protobuf:"bytes,7,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`           //收货人名称
	PhoneNumber   string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`        //收货人电话
	PostCode      string `protobuf:"bytes,9,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`                 //邮政编码
	Province      string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`                                //省份/直辖市
	Region        string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                    //区
	UpdateTime    string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`          //更新时间
}

func (x *MemberReceiveAddressListData) Reset() {
	*x = MemberReceiveAddressListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberReceiveAddressListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberReceiveAddressListData) ProtoMessage() {}

func (x *MemberReceiveAddressListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberReceiveAddressListData.ProtoReflect.Descriptor instead.
func (*MemberReceiveAddressListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{116}
}

func (x *MemberReceiveAddressListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetDefaultStatus() int32 {
	if x != nil {
		return x.DefaultStatus
	}
	return 0
}

func (x *MemberReceiveAddressListData) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberReceiveAddressListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberReceiveAddressListData) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MemberReceiveAddressListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberReceiveAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberReceiveAddressListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberReceiveAddressListResp) Reset() {
	*x = QueryMemberReceiveAddressListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReceiveAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReceiveAddressListResp) ProtoMessage() {}

func (x *QueryMemberReceiveAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReceiveAddressListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReceiveAddressListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{117}
}

func (x *QueryMemberReceiveAddressListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberReceiveAddressListResp) GetList() []*MemberReceiveAddressListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员积分成长规则表
type AddMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumePerPoint   int64  `protobuf:"varint,1,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	CreateBy          string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
	RuleType          int32  `protobuf:"varint,5,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	LowOrderAmount    int64  `protobuf:"varint,7,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,8,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
}

func (x *AddMemberRuleSettingReq) Reset() {
	*x = AddMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberRuleSettingReq) ProtoMessage() {}

func (x *AddMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*AddMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{118}
}

func (x *AddMemberRuleSettingReq) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddMemberRuleSettingReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

type AddMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberRuleSettingResp) Reset() {
	*x = AddMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberRuleSettingResp) ProtoMessage() {}

func (x *AddMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*AddMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{119}
}

func (x *AddMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员积分成长规则表
type DeleteMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberRuleSettingReq) Reset() {
	*x = DeleteMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberRuleSettingReq) ProtoMessage() {}

func (x *DeleteMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{120}
}

func (x *DeleteMemberRuleSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberRuleSettingResp) Reset() {
	*x = DeleteMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberRuleSettingResp) ProtoMessage() {}

func (x *DeleteMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{121}
}

func (x *DeleteMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员积分成长规则表
type UpdateMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumePerPoint   int64  `protobuf:"varint,1,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	Status            int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	UpdateBy          string `protobuf:"bytes,5,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                               //更新者
	Id                int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	LowOrderAmount    int64  `protobuf:"varint,7,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,8,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,9,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
}

func (x *UpdateMemberRuleSettingReq) Reset() {
	*x = UpdateMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingReq) ProtoMessage() {}

func (x *UpdateMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{122}
}

func (x *UpdateMemberRuleSettingReq) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateMemberRuleSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type UpdateMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberRuleSettingResp) Reset() {
	*x = UpdateMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingResp) ProtoMessage() {}

func (x *UpdateMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{123}
}

func (x *UpdateMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员积分成长规则表状态
type UpdateMemberRuleSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status   int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                    //状态：0->禁用；1->启用
	UpdateBy string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新者
}

func (x *UpdateMemberRuleSettingStatusReq) Reset() {
	*x = UpdateMemberRuleSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingStatusReq) ProtoMessage() {}

func (x *UpdateMemberRuleSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateMemberRuleSettingStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberRuleSettingStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberRuleSettingStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMemberRuleSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberRuleSettingStatusResp) Reset() {
	*x = UpdateMemberRuleSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingStatusResp) ProtoMessage() {}

func (x *UpdateMemberRuleSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{125}
}

func (x *UpdateMemberRuleSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员积分成长规则表详情
type QueryMemberRuleSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberRuleSettingDetailReq) Reset() {
	*x = QueryMemberRuleSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingDetailReq) ProtoMessage() {}

func (x *QueryMemberRuleSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{126}
}

func (x *QueryMemberRuleSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberRuleSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumePerPoint   int64  `protobuf:"varint,1,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	CreateBy          string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
	CreateTime        string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                         //创建时间
	Id                int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	LowOrderAmount    int64  `protobuf:"varint,7,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,8,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,9,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                                                 //状态：0->禁用；1->启用
	UpdateBy          string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                              //更新者
	UpdateTime        string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                        //更新时间
}

func (x *QueryMemberRuleSettingDetailResp) Reset() {
	*x = QueryMemberRuleSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingDetailResp) ProtoMessage() {}

func (x *QueryMemberRuleSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{127}
}

func (x *QueryMemberRuleSettingDetailResp) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员积分成长规则表列表
type QueryMemberRuleSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	RuleType int32 `protobuf:"varint,3,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"` //类型：0->积分规则；1->成长值规则
	Status   int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->禁用；1->启用
}

func (x *QueryMemberRuleSettingListReq) Reset() {
	*x = QueryMemberRuleSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingListReq) ProtoMessage() {}

func (x *QueryMemberRuleSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{128}
}

func (x *QueryMemberRuleSettingListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MemberRuleSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumePerPoint   int64  `protobuf:"varint,1,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	CreateBy          string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
	CreateTime        string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                         //创建时间
	Id                int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	LowOrderAmount    int64  `protobuf:"varint,7,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,8,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,9,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                                                 //状态：0->禁用；1->启用
	UpdateBy          string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                              //更新者
	UpdateTime        string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                        //更新时间
}

func (x *MemberRuleSettingListData) Reset() {
	*x = MemberRuleSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRuleSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRuleSettingListData) ProtoMessage() {}

func (x *MemberRuleSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRuleSettingListData.ProtoReflect.Descriptor instead.
func (*MemberRuleSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{129}
}

func (x *MemberRuleSettingListData) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *MemberRuleSettingListData) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *MemberRuleSettingListData) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *MemberRuleSettingListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MemberRuleSettingListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberRuleSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberRuleSettingListData) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *MemberRuleSettingListData) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *MemberRuleSettingListData) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *MemberRuleSettingListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberRuleSettingListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MemberRuleSettingListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberRuleSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberRuleSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberRuleSettingListResp) Reset() {
	*x = QueryMemberRuleSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingListResp) ProtoMessage() {}

func (x *QueryMemberRuleSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{130}
}

func (x *QueryMemberRuleSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberRuleSettingListResp) GetList() []*MemberRuleSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员统计信息
type AddMemberStatisticsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttendCount         int32  `protobuf:"varint,1,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                           //关注数量
	CollectCommentCount int32  `protobuf:"varint,2,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //
	CollectProductCount int32  `protobuf:"varint,3,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //
	CollectSubjectCount int32  `protobuf:"varint,4,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //
	CollectTopicCount   int32  `protobuf:"varint,5,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                        //评价数
	ConsumeAmount       int64  `protobuf:"varint,7,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                     //累计消费金额
	CouponCount         int32  `protobuf:"varint,8,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                           //优惠券数量
	FansCount           int32  `protobuf:"varint,9,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	Id                  int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	InviteFriendCount   int32  `protobuf:"varint,11,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`      //
	LoginCount          int32  `protobuf:"varint,12,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                             //登录次数
	MemberId            int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                   //
	OrderCount          int32  `protobuf:"varint,14,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                             //订单数量
	RecentOrderTime     string `protobuf:"bytes,15,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`             //最后一次下订单时间
	ReturnOrderCount    int32  `protobuf:"varint,16,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`         //退货数量
}

func (x *AddMemberStatisticsInfoReq) Reset() {
	*x = AddMemberStatisticsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberStatisticsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberStatisticsInfoReq) ProtoMessage() {}

func (x *AddMemberStatisticsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberStatisticsInfoReq.ProtoReflect.Descriptor instead.
func (*AddMemberStatisticsInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{131}
}

func (x *AddMemberStatisticsInfoReq) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

func (x *AddMemberStatisticsInfoReq) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

type AddMemberStatisticsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberStatisticsInfoResp) Reset() {
	*x = AddMemberStatisticsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberStatisticsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberStatisticsInfoResp) ProtoMessage() {}

func (x *AddMemberStatisticsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberStatisticsInfoResp.ProtoReflect.Descriptor instead.
func (*AddMemberStatisticsInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{132}
}

func (x *AddMemberStatisticsInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员统计信息详情
type QueryMemberStatisticsInfoDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //
}

func (x *QueryMemberStatisticsInfoDetailReq) Reset() {
	*x = QueryMemberStatisticsInfoDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoDetailReq) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{133}
}

func (x *QueryMemberStatisticsInfoDetailReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryMemberStatisticsInfoDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttendCount         int32  `protobuf:"varint,1,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                           //关注数量
	CollectCommentCount int32  `protobuf:"varint,2,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //
	CollectProductCount int32  `protobuf:"varint,3,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //
	CollectSubjectCount int32  `protobuf:"varint,4,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //
	CollectTopicCount   int32  `protobuf:"varint,5,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                        //评价数
	ConsumeAmount       int64  `protobuf:"varint,7,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                     //累计消费金额
	CouponCount         int32  `protobuf:"varint,8,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                           //优惠券数量
	FansCount           int32  `protobuf:"varint,9,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	Id                  int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	InviteFriendCount   int32  `protobuf:"varint,11,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`      //
	LoginCount          int32  `protobuf:"varint,12,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                             //登录次数
	MemberId            int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                   //
	OrderCount          int32  `protobuf:"varint,14,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                             //订单数量
	RecentOrderTime     string `protobuf:"bytes,15,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`             //最后一次下订单时间
	ReturnOrderCount    int32  `protobuf:"varint,16,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`         //退货数量
}

func (x *QueryMemberStatisticsInfoDetailResp) Reset() {
	*x = QueryMemberStatisticsInfoDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoDetailResp) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{134}
}

func (x *QueryMemberStatisticsInfoDetailResp) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

func (x *QueryMemberStatisticsInfoDetailResp) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

// 查询会员统计信息列表
type QueryMemberStatisticsInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberStatisticsInfoListReq) Reset() {
	*x = QueryMemberStatisticsInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListReq) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{135}
}

func (x *QueryMemberStatisticsInfoListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryMemberStatisticsInfoListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttendCount         int32  `protobuf:"varint,1,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                           //关注数量
	CollectCommentCount int32  `protobuf:"varint,2,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //
	CollectProductCount int32  `protobuf:"varint,3,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //
	CollectSubjectCount int32  `protobuf:"varint,4,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //
	CollectTopicCount   int32  `protobuf:"varint,5,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                        //评价数
	ConsumeAmount       int64  `protobuf:"varint,7,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                     //累计消费金额
	CouponCount         int32  `protobuf:"varint,8,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                           //优惠券数量
	FansCount           int32  `protobuf:"varint,9,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	Id                  int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	InviteFriendCount   int32  `protobuf:"varint,11,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`      //
	LoginCount          int32  `protobuf:"varint,12,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                             //登录次数
	MemberId            int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                   //
	OrderCount          int32  `protobuf:"varint,14,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                             //订单数量
	RecentOrderTime     string `protobuf:"bytes,15,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`             //最后一次下订单时间
	ReturnOrderCount    int32  `protobuf:"varint,16,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`         //退货数量
}

func (x *QueryMemberStatisticsInfoListData) Reset() {
	*x = QueryMemberStatisticsInfoListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListData) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListData.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{136}
}

func (x *QueryMemberStatisticsInfoListData) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

func (x *QueryMemberStatisticsInfoListData) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

type QueryMemberStatisticsInfoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryMemberStatisticsInfoListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberStatisticsInfoListResp) Reset() {
	*x = QueryMemberStatisticsInfoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListResp) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{137}
}

func (x *QueryMemberStatisticsInfoListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListResp) GetList() []*QueryMemberStatisticsInfoListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户标签表
type AddMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishOrderAmount int64  `protobuf:"varint,1,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	FinishOrderCount  int32  `protobuf:"varint,2,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`    //自动打标签完成订单数量
	Status            int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	TagName           string `protobuf:"bytes,4,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                  //标签名称
}

func (x *AddMemberTagReq) Reset() {
	*x = AddMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagReq) ProtoMessage() {}

func (x *AddMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagReq.ProtoReflect.Descriptor instead.
func (*AddMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{138}
}

func (x *AddMemberTagReq) GetFinishOrderAmount() int64 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *AddMemberTagReq) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *AddMemberTagReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type AddMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTagResp) Reset() {
	*x = AddMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagResp) ProtoMessage() {}

func (x *AddMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagResp.ProtoReflect.Descriptor instead.
func (*AddMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{139}
}

func (x *AddMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户标签表
type DeleteMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberTagReq) Reset() {
	*x = DeleteMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTagReq) ProtoMessage() {}

func (x *DeleteMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTagReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{140}
}

func (x *DeleteMemberTagReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberTagResp) Reset() {
	*x = DeleteMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTagResp) ProtoMessage() {}

func (x *DeleteMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTagResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{141}
}

func (x *DeleteMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户标签表
type UpdateMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishOrderAmount int64  `protobuf:"varint,1,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	FinishOrderCount  int32  `protobuf:"varint,2,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`    //自动打标签完成订单数量
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	Status            int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	TagName           string `protobuf:"bytes,5,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                  //标签名称
}

func (x *UpdateMemberTagReq) Reset() {
	*x = UpdateMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagReq) ProtoMessage() {}

func (x *UpdateMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{142}
}

func (x *UpdateMemberTagReq) GetFinishOrderAmount() int64 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *UpdateMemberTagReq) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *UpdateMemberTagReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberTagReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type UpdateMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTagResp) Reset() {
	*x = UpdateMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagResp) ProtoMessage() {}

func (x *UpdateMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{143}
}

func (x *UpdateMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户标签表状态
type UpdateMemberTagStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status int32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` //状态：0->禁用；1->启用
}

func (x *UpdateMemberTagStatusReq) Reset() {
	*x = UpdateMemberTagStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagStatusReq) ProtoMessage() {}

func (x *UpdateMemberTagStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{144}
}

func (x *UpdateMemberTagStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberTagStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateMemberTagStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTagStatusResp) Reset() {
	*x = UpdateMemberTagStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagStatusResp) ProtoMessage() {}

func (x *UpdateMemberTagStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{145}
}

func (x *UpdateMemberTagStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户标签表详情
type QueryMemberTagDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTagDetailReq) Reset() {
	*x = QueryMemberTagDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagDetailReq) ProtoMessage() {}

func (x *QueryMemberTagDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{146}
}

func (x *QueryMemberTagDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTagDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishOrderAmount int64  `protobuf:"varint,1,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	FinishOrderCount  int32  `protobuf:"varint,2,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`    //自动打标签完成订单数量
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	Status            int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	TagName           string `protobuf:"bytes,5,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                  //标签名称
}

func (x *QueryMemberTagDetailResp) Reset() {
	*x = QueryMemberTagDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagDetailResp) ProtoMessage() {}

func (x *QueryMemberTagDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{147}
}

func (x *QueryMemberTagDetailResp) GetFinishOrderAmount() int64 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

// 分页查询用户标签表列表
type QueryMemberTagListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->禁用；1->启用
	TagName  string `protobuf:"bytes,5,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`     //标签名称
}

func (x *QueryMemberTagListReq) Reset() {
	*x = QueryMemberTagListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagListReq) ProtoMessage() {}

func (x *QueryMemberTagListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{148}
}

func (x *QueryMemberTagListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTagListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberTagListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTagListReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MemberTagListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishOrderAmount int64  `protobuf:"varint,1,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	FinishOrderCount  int32  `protobuf:"varint,2,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`    //自动打标签完成订单数量
	Id                int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	Status            int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	TagName           string `protobuf:"bytes,5,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                  //标签名称
}

func (x *MemberTagListData) Reset() {
	*x = MemberTagListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTagListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTagListData) ProtoMessage() {}

func (x *MemberTagListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTagListData.ProtoReflect.Descriptor instead.
func (*MemberTagListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{149}
}

func (x *MemberTagListData) GetFinishOrderAmount() int64 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *MemberTagListData) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *MemberTagListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTagListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberTagListData) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type QueryMemberTagListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTagListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTagListResp) Reset() {
	*x = QueryMemberTagListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagListResp) ProtoMessage() {}

func (x *QueryMemberTagListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{150}
}

func (x *QueryMemberTagListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTagListResp) GetList() []*MemberTagListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员任务表
type AddMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy     string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`              //创建者
	TaskName     string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`              //任务名称
	TaskType     int32  `protobuf:"varint,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`             //任务类型：0->新手任务；1->日常任务
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 //状态：0->禁用；1->启用
	TaskGrowth   int32  `protobuf:"varint,5,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`       //赠送成长值
	TaskIntegral int32  `protobuf:"varint,6,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"` //赠送积分
}

func (x *AddMemberTaskReq) Reset() {
	*x = AddMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskReq) ProtoMessage() {}

func (x *AddMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskReq.ProtoReflect.Descriptor instead.
func (*AddMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{151}
}

func (x *AddMemberTaskReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddMemberTaskReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *AddMemberTaskReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *AddMemberTaskReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberTaskReq) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *AddMemberTaskReq) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

type AddMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTaskResp) Reset() {
	*x = AddMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskResp) ProtoMessage() {}

func (x *AddMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskResp.ProtoReflect.Descriptor instead.
func (*AddMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{152}
}

func (x *AddMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员任务表
type DeleteMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberTaskReq) Reset() {
	*x = DeleteMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTaskReq) ProtoMessage() {}

func (x *DeleteMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTaskReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{153}
}

func (x *DeleteMemberTaskReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberTaskResp) Reset() {
	*x = DeleteMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTaskResp) ProtoMessage() {}

func (x *DeleteMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTaskResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{154}
}

func (x *DeleteMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员任务表
type UpdateMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType     int32  `protobuf:"varint,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`             //任务类型：0->新手任务；1->日常任务
	UpdateBy     string `protobuf:"bytes,2,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`              //更新者
	Id           int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                         //
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 //状态：0->禁用；1->启用
	TaskGrowth   int32  `protobuf:"varint,5,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`       //赠送成长值
	TaskIntegral int32  `protobuf:"varint,6,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"` //赠送积分
	TaskName     string `protobuf:"bytes,7,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`              //任务名称
}

func (x *UpdateMemberTaskReq) Reset() {
	*x = UpdateMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskReq) ProtoMessage() {}

func (x *UpdateMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{155}
}

func (x *UpdateMemberTaskReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

type UpdateMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTaskResp) Reset() {
	*x = UpdateMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskResp) ProtoMessage() {}

func (x *UpdateMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{156}
}

func (x *UpdateMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员任务表状态
type UpdateMemberTaskStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status   int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                    //状态：0->禁用；1->启用
	UpdateBy string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新者
}

func (x *UpdateMemberTaskStatusReq) Reset() {
	*x = UpdateMemberTaskStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskStatusReq) ProtoMessage() {}

func (x *UpdateMemberTaskStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{157}
}

func (x *UpdateMemberTaskStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberTaskStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTaskStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMemberTaskStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTaskStatusResp) Reset() {
	*x = UpdateMemberTaskStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskStatusResp) ProtoMessage() {}

func (x *UpdateMemberTaskStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{158}
}

func (x *UpdateMemberTaskStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员任务表详情
type QueryMemberTaskDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTaskDetailReq) Reset() {
	*x = QueryMemberTaskDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskDetailReq) ProtoMessage() {}

func (x *QueryMemberTaskDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{159}
}

func (x *QueryMemberTaskDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTaskDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy     string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`              //创建者
	CreateTime   string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	Id           int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                         //
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 //状态：0->禁用；1->启用
	TaskGrowth   int32  `protobuf:"varint,5,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`       //赠送成长值
	TaskIntegral int32  `protobuf:"varint,6,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"` //赠送积分
	TaskName     string `protobuf:"bytes,7,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`              //任务名称
	TaskType     int32  `protobuf:"varint,8,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`             //任务类型：0->新手任务；1->日常任务
	UpdateBy     string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`              //更新者
	UpdateTime   string `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`       //更新时间
}

func (x *QueryMemberTaskDetailResp) Reset() {
	*x = QueryMemberTaskDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskDetailResp) ProtoMessage() {}

func (x *QueryMemberTaskDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{160}
}

func (x *QueryMemberTaskDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员任务表列表
type QueryMemberTaskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->禁用；1->启用
	TaskName string `protobuf:"bytes,4,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`  //任务名称
	TaskType int32  `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"` //任务类型：0->新手任务；1->日常任务
}

func (x *QueryMemberTaskListReq) Reset() {
	*x = QueryMemberTaskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskListReq) ProtoMessage() {}

func (x *QueryMemberTaskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{161}
}

func (x *QueryMemberTaskListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *QueryMemberTaskListReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

type MemberTaskListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy     string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`              //创建者
	CreateTime   string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	Id           int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                         //
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 //状态：0->禁用；1->启用
	TaskGrowth   int32  `protobuf:"varint,5,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`       //赠送成长值
	TaskIntegral int32  `protobuf:"varint,6,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"` //赠送积分
	TaskName     string `protobuf:"bytes,7,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`              //任务名称
	TaskType     int32  `protobuf:"varint,8,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`             //任务类型：0->新手任务；1->日常任务
	UpdateBy     string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`              //更新者
	UpdateTime   string `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`       //更新时间
}

func (x *MemberTaskListData) Reset() {
	*x = MemberTaskListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTaskListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTaskListData) ProtoMessage() {}

func (x *MemberTaskListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTaskListData.ProtoReflect.Descriptor instead.
func (*MemberTaskListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{162}
}

func (x *MemberTaskListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MemberTaskListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberTaskListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTaskListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberTaskListData) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *MemberTaskListData) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *MemberTaskListData) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *MemberTaskListData) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *MemberTaskListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MemberTaskListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberTaskListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTaskListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTaskListResp) Reset() {
	*x = QueryMemberTaskListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskListResp) ProtoMessage() {}

func (x *QueryMemberTaskListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{163}
}

func (x *QueryMemberTaskListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTaskListResp) GetList() []*MemberTaskListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_rpc_ums_ums_proto protoreflect.FileDescriptor

var file_rpc_ums_ums_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x6d, 0x73, 0x2f, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xe1,
	0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x22, 0x30, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x30, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x33, 0x0a, 0x21, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x9b, 0x02, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76,
	0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a,
	0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x22, 0x35, 0x0a, 0x1f,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x22, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x38, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa0,
	0x02, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x7b, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x99,
	0x02, 0x0a, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x25, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x1f, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x36, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x36, 0x0a, 0x22, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x39, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xd9, 0x01,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x23, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x59, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x3f, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x39, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x28,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x31,
	0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d,
	0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x5f, 0x0a, 0x25,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xf7, 0x01,
	0x0a, 0x21, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x25, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x97, 0x04, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0xfb, 0x04, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x2f,
	0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x26, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfb, 0x04, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0xf4, 0x04, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a,
	0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x22, 0x27, 0x0a, 0x0f, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb1, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x43, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4d,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x23, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x76, 0x0a,
	0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x46, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xd8,
	0x03, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x72,
	0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x72,
	0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2b, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2b,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xde, 0x03, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x66, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f,
	0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x73, 0x46, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x70, 0x0a, 0x17,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd7,
	0x03, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x72, 0x65,
	0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x72, 0x65,
	0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x64, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x48,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x16,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x22, 0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x1d,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x37, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1f, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x22, 0x7c, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x72, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x48, 0x0a, 0x29, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x25, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x88, 0x01, 0x0a, 0x2a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbb, 0x02, 0x0a, 0x1d,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x50, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x37, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x25, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x23,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xee, 0x02, 0x0a, 0x1f, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb5, 0x02, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x22, 0x2e,
	0x0a, 0x18, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4a,
	0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a,
	0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xef, 0x02, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69,
	0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x74, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x19, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0xc3, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x79, 0x0a,
	0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x03, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84,
	0x03, 0x0a, 0x1c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x02,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x65, 0x72,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c,
	0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a,
	0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0xdf, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x37, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc4, 0x03, 0x0a, 0x20,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d,
	0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xbd, 0x03, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61,
	0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x92, 0x05, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x41, 0x0a, 0x22, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9b,
	0x05, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x20,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x99, 0x05, 0x0a, 0x21, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x40, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x26,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x44, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x60, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2a,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x67, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2a, 0x0a, 0x18, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x02, 0x0a,
	0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xf3, 0x03, 0x0a, 0x1a,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xb6, 0x04, 0x0a, 0x1f, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7f, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x8e,
	0x01, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x88, 0x01, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xe0, 0x06, 0x0a, 0x20, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x79, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2d,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x82, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x24,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x8b, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa2, 0x05,
	0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x19, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x32, 0x81, 0x04, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xd1, 0x04, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xe6, 0x01, 0x0a, 0x15, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x32, 0x9b, 0x03, 0x0a, 0x1e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xc8, 0x02, 0x0a, 0x24, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x2f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa9, 0x04, 0x0a,
	0x1e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x73, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x85, 0x01, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xd9, 0x03, 0x0a, 0x18, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x32, 0xfe, 0x05, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xc3, 0x05, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x8c, 0x03, 0x0a, 0x1b,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xab, 0x04, 0x0a, 0x10, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x49, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12,
	0x1a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x12, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xbe, 0x04, 0x0a, 0x11, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x1b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_ums_ums_proto_rawDescOnce sync.Once
	file_rpc_ums_ums_proto_rawDescData = file_rpc_ums_ums_proto_rawDesc
)

func file_rpc_ums_ums_proto_rawDescGZIP() []byte {
	file_rpc_ums_ums_proto_rawDescOnce.Do(func() {
		file_rpc_ums_ums_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_ums_ums_proto_rawDescData)
	})
	return file_rpc_ums_ums_proto_rawDescData
}

var file_rpc_ums_ums_proto_msgTypes = make([]protoimpl.MessageInfo, 164)
var file_rpc_ums_ums_proto_goTypes = []interface{}{
	(*AddGrowthChangeHistoryReq)(nil),                  // 0: umsclient.AddGrowthChangeHistoryReq
	(*AddGrowthChangeHistoryResp)(nil),                 // 1: umsclient.AddGrowthChangeHistoryResp
	(*DeleteGrowthChangeHistoryReq)(nil),               // 2: umsclient.DeleteGrowthChangeHistoryReq
	(*DeleteGrowthChangeHistoryResp)(nil),              // 3: umsclient.DeleteGrowthChangeHistoryResp
	(*QueryGrowthChangeHistoryDetailReq)(nil),          // 4: umsclient.QueryGrowthChangeHistoryDetailReq
	(*QueryGrowthChangeHistoryDetailResp)(nil),         // 5: umsclient.QueryGrowthChangeHistoryDetailResp
	(*QueryGrowthChangeHistoryListReq)(nil),            // 6: umsclient.QueryGrowthChangeHistoryListReq
	(*GrowthChangeHistoryListData)(nil),                // 7: umsclient.GrowthChangeHistoryListData
	(*QueryGrowthChangeHistoryListResp)(nil),           // 8: umsclient.QueryGrowthChangeHistoryListResp
	(*AddIntegrationChangeHistoryReq)(nil),             // 9: umsclient.AddIntegrationChangeHistoryReq
	(*AddIntegrationChangeHistoryResp)(nil),            // 10: umsclient.AddIntegrationChangeHistoryResp
	(*DeleteIntegrationChangeHistoryReq)(nil),          // 11: umsclient.DeleteIntegrationChangeHistoryReq
	(*DeleteIntegrationChangeHistoryResp)(nil),         // 12: umsclient.DeleteIntegrationChangeHistoryResp
	(*QueryIntegrationChangeHistoryDetailReq)(nil),     // 13: umsclient.QueryIntegrationChangeHistoryDetailReq
	(*QueryIntegrationChangeHistoryDetailResp)(nil),    // 14: umsclient.QueryIntegrationChangeHistoryDetailResp
	(*QueryIntegrationChangeHistoryListReq)(nil),       // 15: umsclient.QueryIntegrationChangeHistoryListReq
	(*IntegrationChangeHistoryListData)(nil),           // 16: umsclient.IntegrationChangeHistoryListData
	(*QueryIntegrationChangeHistoryListResp)(nil),      // 17: umsclient.QueryIntegrationChangeHistoryListResp
	(*AddIntegrationConsumeSettingReq)(nil),            // 18: umsclient.AddIntegrationConsumeSettingReq
	(*AddIntegrationConsumeSettingResp)(nil),           // 19: umsclient.AddIntegrationConsumeSettingResp
	(*DeleteIntegrationConsumeSettingReq)(nil),         // 20: umsclient.DeleteIntegrationConsumeSettingReq
	(*DeleteIntegrationConsumeSettingResp)(nil),        // 21: umsclient.DeleteIntegrationConsumeSettingResp
	(*UpdateIntegrationConsumeSettingReq)(nil),         // 22: umsclient.UpdateIntegrationConsumeSettingReq
	(*UpdateIntegrationConsumeSettingResp)(nil),        // 23: umsclient.UpdateIntegrationConsumeSettingResp
	(*UpdateIntegrationConsumeSettingStatusReq)(nil),   // 24: umsclient.UpdateIntegrationConsumeSettingStatusReq
	(*UpdateIntegrationConsumeSettingStatusResp)(nil),  // 25: umsclient.UpdateIntegrationConsumeSettingStatusResp
	(*QueryIntegrationConsumeSettingDetailReq)(nil),    // 26: umsclient.QueryIntegrationConsumeSettingDetailReq
	(*QueryIntegrationConsumeSettingDetailResp)(nil),   // 27: umsclient.QueryIntegrationConsumeSettingDetailResp
	(*QueryIntegrationConsumeSettingListReq)(nil),      // 28: umsclient.QueryIntegrationConsumeSettingListReq
	(*IntegrationConsumeSettingListData)(nil),          // 29: umsclient.IntegrationConsumeSettingListData
	(*QueryIntegrationConsumeSettingListResp)(nil),     // 30: umsclient.QueryIntegrationConsumeSettingListResp
	(*AddMemberReq)(nil),                               // 31: umsclient.AddMemberReq
	(*AddMemberResp)(nil),                              // 32: umsclient.AddMemberResp
	(*DeleteMemberReq)(nil),                            // 33: umsclient.DeleteMemberReq
	(*DeleteMemberResp)(nil),                           // 34: umsclient.DeleteMemberResp
	(*UpdateMemberReq)(nil),                            // 35: umsclient.UpdateMemberReq
	(*UpdateMemberResp)(nil),                           // 36: umsclient.UpdateMemberResp
	(*UpdateMemberStatusReq)(nil),                      // 37: umsclient.UpdateMemberStatusReq
	(*UpdateMemberStatusResp)(nil),                     // 38: umsclient.UpdateMemberStatusResp
	(*QueryMemberDetailReq)(nil),                       // 39: umsclient.QueryMemberDetailReq
	(*QueryMemberDetailResp)(nil),                      // 40: umsclient.QueryMemberDetailResp
	(*QueryMemberListReq)(nil),                         // 41: umsclient.QueryMemberListReq
	(*MemberListData)(nil),                             // 42: umsclient.MemberListData
	(*QueryMemberListResp)(nil),                        // 43: umsclient.QueryMemberListResp
	(*MemberLoginReq)(nil),                             // 44: umsclient.MemberLoginReq
	(*MemberLoginResp)(nil),                            // 45: umsclient.MemberLoginResp
	(*UpdateMemberIntegrationReq)(nil),                 // 46: umsclient.UpdateMemberIntegrationReq
	(*UpdateMemberIntegrationResp)(nil),                // 47: umsclient.UpdateMemberIntegrationResp
	(*AddMemberBrandAttentionReq)(nil),                 // 48: umsclient.AddMemberBrandAttentionReq
	(*AddMemberBrandAttentionResp)(nil),                // 49: umsclient.AddMemberBrandAttentionResp
	(*DeleteMemberBrandAttentionReq)(nil),              // 50: umsclient.DeleteMemberBrandAttentionReq
	(*DeleteMemberBrandAttentionResp)(nil),             // 51: umsclient.DeleteMemberBrandAttentionResp
	(*QueryMemberBrandAttentionDetailReq)(nil),         // 52: umsclient.QueryMemberBrandAttentionDetailReq
	(*QueryMemberBrandAttentionDetailResp)(nil),        // 53: umsclient.QueryMemberBrandAttentionDetailResp
	(*QueryMemberBrandAttentionListReq)(nil),           // 54: umsclient.QueryMemberBrandAttentionListReq
	(*MemberBrandAttentionListData)(nil),               // 55: umsclient.MemberBrandAttentionListData
	(*QueryMemberBrandAttentionListResp)(nil),          // 56: umsclient.QueryMemberBrandAttentionListResp
	(*AddMemberLevelReq)(nil),                          // 57: umsclient.AddMemberLevelReq
	(*AddMemberLevelResp)(nil),                         // 58: umsclient.AddMemberLevelResp
	(*DeleteMemberLevelReq)(nil),                       // 59: umsclient.DeleteMemberLevelReq
	(*DeleteMemberLevelResp)(nil),                      // 60: umsclient.DeleteMemberLevelResp
	(*UpdateMemberLevelReq)(nil),                       // 61: umsclient.UpdateMemberLevelReq
	(*UpdateMemberLevelResp)(nil),                      // 62: umsclient.UpdateMemberLevelResp
	(*UpdateMemberLevelStatusReq)(nil),                 // 63: umsclient.UpdateMemberLevelStatusReq
	(*UpdateMemberLevelStatusResp)(nil),                // 64: umsclient.UpdateMemberLevelStatusResp
	(*QueryMemberLevelDetailReq)(nil),                  // 65: umsclient.QueryMemberLevelDetailReq
	(*QueryMemberLevelDetailResp)(nil),                 // 66: umsclient.QueryMemberLevelDetailResp
	(*QueryMemberLevelListReq)(nil),                    // 67: umsclient.QueryMemberLevelListReq
	(*MemberLevelListData)(nil),                        // 68: umsclient.MemberLevelListData
	(*QueryMemberLevelListResp)(nil),                   // 69: umsclient.QueryMemberLevelListResp
	(*DeleteMemberLoginLogReq)(nil),                    // 70: umsclient.DeleteMemberLoginLogReq
	(*DeleteMemberLoginLogResp)(nil),                   // 71: umsclient.DeleteMemberLoginLogResp
	(*QueryMemberLoginLogListReq)(nil),                 // 72: umsclient.QueryMemberLoginLogListReq
	(*MemberLoginLogListData)(nil),                     // 73: umsclient.MemberLoginLogListData
	(*QueryMemberLoginLogListResp)(nil),                // 74: umsclient.QueryMemberLoginLogListResp
	(*AddMemberMemberTagRelationReq)(nil),              // 75: umsclient.AddMemberMemberTagRelationReq
	(*AddMemberMemberTagRelationResp)(nil),             // 76: umsclient.AddMemberMemberTagRelationResp
	(*DeleteMemberMemberTagRelationReq)(nil),           // 77: umsclient.DeleteMemberMemberTagRelationReq
	(*DeleteMemberMemberTagRelationResp)(nil),          // 78: umsclient.DeleteMemberMemberTagRelationResp
	(*QueryMemberMemberTagRelationListReq)(nil),        // 79: umsclient.QueryMemberMemberTagRelationListReq
	(*MemberMemberTagRelationListData)(nil),            // 80: umsclient.MemberMemberTagRelationListData
	(*QueryMemberMemberTagRelationListResp)(nil),       // 81: umsclient.QueryMemberMemberTagRelationListResp
	(*AddMemberProductCategoryRelationReq)(nil),        // 82: umsclient.AddMemberProductCategoryRelationReq
	(*AddMemberProductCategoryRelationResp)(nil),       // 83: umsclient.AddMemberProductCategoryRelationResp
	(*QueryMemberProductCategoryRelationListReq)(nil),  // 84: umsclient.QueryMemberProductCategoryRelationListReq
	(*MemberProductCategoryRelationListData)(nil),      // 85: umsclient.MemberProductCategoryRelationListData
	(*QueryMemberProductCategoryRelationListResp)(nil), // 86: umsclient.QueryMemberProductCategoryRelationListResp
	(*AddMemberProductCollectionReq)(nil),              // 87: umsclient.AddMemberProductCollectionReq
	(*AddMemberProductCollectionResp)(nil),             // 88: umsclient.AddMemberProductCollectionResp
	(*DeleteMemberProductCollectionReq)(nil),           // 89: umsclient.DeleteMemberProductCollectionReq
	(*DeleteMemberProductCollectionResp)(nil),          // 90: umsclient.DeleteMemberProductCollectionResp
	(*QueryMemberProductCollectionDetailReq)(nil),      // 91: umsclient.QueryMemberProductCollectionDetailReq
	(*QueryMemberProductCollectionDetailResp)(nil),     // 92: umsclient.QueryMemberProductCollectionDetailResp
	(*QueryMemberProductCollectionListReq)(nil),        // 93: umsclient.QueryMemberProductCollectionListReq
	(*MemberProductCollectionListData)(nil),            // 94: umsclient.MemberProductCollectionListData
	(*QueryMemberProductCollectionListResp)(nil),       // 95: umsclient.QueryMemberProductCollectionListResp
	(*AddMemberReadHistoryReq)(nil),                    // 96: umsclient.AddMemberReadHistoryReq
	(*AddMemberReadHistoryResp)(nil),                   // 97: umsclient.AddMemberReadHistoryResp
	(*DeleteMemberReadHistoryReq)(nil),                 // 98: umsclient.DeleteMemberReadHistoryReq
	(*DeleteMemberReadHistoryResp)(nil),                // 99: umsclient.DeleteMemberReadHistoryResp
	(*QueryMemberReadHistoryDetailReq)(nil),            // 100: umsclient.QueryMemberReadHistoryDetailReq
	(*QueryMemberReadHistoryDetailResp)(nil),           // 101: umsclient.QueryMemberReadHistoryDetailResp
	(*QueryMemberReadHistoryListReq)(nil),              // 102: umsclient.QueryMemberReadHistoryListReq
	(*MemberReadHistoryListData)(nil),                  // 103: umsclient.MemberReadHistoryListData
	(*QueryMemberReadHistoryListResp)(nil),             // 104: umsclient.QueryMemberReadHistoryListResp
	(*AddMemberReceiveAddressReq)(nil),                 // 105: umsclient.AddMemberReceiveAddressReq
	(*AddMemberReceiveAddressResp)(nil),                // 106: umsclient.AddMemberReceiveAddressResp
	(*DeleteMemberReceiveAddressReq)(nil),              // 107: umsclient.DeleteMemberReceiveAddressReq
	(*DeleteMemberReceiveAddressResp)(nil),             // 108: umsclient.DeleteMemberReceiveAddressResp
	(*UpdateMemberReceiveAddressReq)(nil),              // 109: umsclient.UpdateMemberReceiveAddressReq
	(*UpdateMemberReceiveAddressResp)(nil),             // 110: umsclient.UpdateMemberReceiveAddressResp
	(*UpdateMemberReceiveAddressStatusReq)(nil),        // 111: umsclient.UpdateMemberReceiveAddressStatusReq
	(*UpdateMemberReceiveAddressStatusResp)(nil),       // 112: umsclient.UpdateMemberReceiveAddressStatusResp
	(*QueryMemberReceiveAddressDetailReq)(nil),         // 113: umsclient.QueryMemberReceiveAddressDetailReq
	(*QueryMemberReceiveAddressDetailResp)(nil),        // 114: umsclient.QueryMemberReceiveAddressDetailResp
	(*QueryMemberReceiveAddressListReq)(nil),           // 115: umsclient.QueryMemberReceiveAddressListReq
	(*MemberReceiveAddressListData)(nil),               // 116: umsclient.MemberReceiveAddressListData
	(*QueryMemberReceiveAddressListResp)(nil),          // 117: umsclient.QueryMemberReceiveAddressListResp
	(*AddMemberRuleSettingReq)(nil),                    // 118: umsclient.AddMemberRuleSettingReq
	(*AddMemberRuleSettingResp)(nil),                   // 119: umsclient.AddMemberRuleSettingResp
	(*DeleteMemberRuleSettingReq)(nil),                 // 120: umsclient.DeleteMemberRuleSettingReq
	(*DeleteMemberRuleSettingResp)(nil),                // 121: umsclient.DeleteMemberRuleSettingResp
	(*UpdateMemberRuleSettingReq)(nil),                 // 122: umsclient.UpdateMemberRuleSettingReq
	(*UpdateMemberRuleSettingResp)(nil),                // 123: umsclient.UpdateMemberRuleSettingResp
	(*UpdateMemberRuleSettingStatusReq)(nil),           // 124: umsclient.UpdateMemberRuleSettingStatusReq
	(*UpdateMemberRuleSettingStatusResp)(nil),          // 125: umsclient.UpdateMemberRuleSettingStatusResp
	(*QueryMemberRuleSettingDetailReq)(nil),            // 126: umsclient.QueryMemberRuleSettingDetailReq
	(*QueryMemberRuleSettingDetailResp)(nil),           // 127: umsclient.QueryMemberRuleSettingDetailResp
	(*QueryMemberRuleSettingListReq)(nil),              // 128: umsclient.QueryMemberRuleSettingListReq
	(*MemberRuleSettingListData)(nil),                  // 129: umsclient.MemberRuleSettingListData
	(*QueryMemberRuleSettingListResp)(nil),             // 130: umsclient.QueryMemberRuleSettingListResp
	(*AddMemberStatisticsInfoReq)(nil),                 // 131: umsclient.AddMemberStatisticsInfoReq
	(*AddMemberStatisticsInfoResp)(nil),                // 132: umsclient.AddMemberStatisticsInfoResp
	(*QueryMemberStatisticsInfoDetailReq)(nil),         // 133: umsclient.QueryMemberStatisticsInfoDetailReq
	(*QueryMemberStatisticsInfoDetailResp)(nil),        // 134: umsclient.QueryMemberStatisticsInfoDetailResp
	(*QueryMemberStatisticsInfoListReq)(nil),           // 135: umsclient.QueryMemberStatisticsInfoListReq
	(*QueryMemberStatisticsInfoListData)(nil),          // 136: umsclient.QueryMemberStatisticsInfoListData
	(*QueryMemberStatisticsInfoListResp)(nil),          // 137: umsclient.QueryMemberStatisticsInfoListResp
	(*AddMemberTagReq)(nil),                            // 138: umsclient.AddMemberTagReq
	(*AddMemberTagResp)(nil),                           // 139: umsclient.AddMemberTagResp
	(*DeleteMemberTagReq)(nil),                         // 140: umsclient.DeleteMemberTagReq
	(*DeleteMemberTagResp)(nil),                        // 141: umsclient.DeleteMemberTagResp
	(*UpdateMemberTagReq)(nil),                         // 142: umsclient.UpdateMemberTagReq
	(*UpdateMemberTagResp)(nil),                        // 143: umsclient.UpdateMemberTagResp
	(*UpdateMemberTagStatusReq)(nil),                   // 144: umsclient.UpdateMemberTagStatusReq
	(*UpdateMemberTagStatusResp)(nil),                  // 145: umsclient.UpdateMemberTagStatusResp
	(*QueryMemberTagDetailReq)(nil),                    // 146: umsclient.QueryMemberTagDetailReq
	(*QueryMemberTagDetailResp)(nil),                   // 147: umsclient.QueryMemberTagDetailResp
	(*QueryMemberTagListReq)(nil),                      // 148: umsclient.QueryMemberTagListReq
	(*MemberTagListData)(nil),                          // 149: umsclient.MemberTagListData
	(*QueryMemberTagListResp)(nil),                     // 150: umsclient.QueryMemberTagListResp
	(*AddMemberTaskReq)(nil),                           // 151: umsclient.AddMemberTaskReq
	(*AddMemberTaskResp)(nil),                          // 152: umsclient.AddMemberTaskResp
	(*DeleteMemberTaskReq)(nil),                        // 153: umsclient.DeleteMemberTaskReq
	(*DeleteMemberTaskResp)(nil),                       // 154: umsclient.DeleteMemberTaskResp
	(*UpdateMemberTaskReq)(nil),                        // 155: umsclient.UpdateMemberTaskReq
	(*UpdateMemberTaskResp)(nil),                       // 156: umsclient.UpdateMemberTaskResp
	(*UpdateMemberTaskStatusReq)(nil),                  // 157: umsclient.UpdateMemberTaskStatusReq
	(*UpdateMemberTaskStatusResp)(nil),                 // 158: umsclient.UpdateMemberTaskStatusResp
	(*QueryMemberTaskDetailReq)(nil),                   // 159: umsclient.QueryMemberTaskDetailReq
	(*QueryMemberTaskDetailResp)(nil),                  // 160: umsclient.QueryMemberTaskDetailResp
	(*QueryMemberTaskListReq)(nil),                     // 161: umsclient.QueryMemberTaskListReq
	(*MemberTaskListData)(nil),                         // 162: umsclient.MemberTaskListData
	(*QueryMemberTaskListResp)(nil),                    // 163: umsclient.QueryMemberTaskListResp
}
var file_rpc_ums_ums_proto_depIdxs = []int32{
	7,   // 0: umsclient.QueryGrowthChangeHistoryListResp.list:type_name -> umsclient.GrowthChangeHistoryListData
	16,  // 1: umsclient.QueryIntegrationChangeHistoryListResp.list:type_name -> umsclient.IntegrationChangeHistoryListData
	29,  // 2: umsclient.QueryIntegrationConsumeSettingListResp.list:type_name -> umsclient.IntegrationConsumeSettingListData
	42,  // 3: umsclient.QueryMemberListResp.list:type_name -> umsclient.MemberListData
	55,  // 4: umsclient.QueryMemberBrandAttentionListResp.list:type_name -> umsclient.MemberBrandAttentionListData
	68,  // 5: umsclient.QueryMemberLevelListResp.list:type_name -> umsclient.MemberLevelListData
	73,  // 6: umsclient.QueryMemberLoginLogListResp.list:type_name -> umsclient.MemberLoginLogListData
	80,  // 7: umsclient.QueryMemberMemberTagRelationListResp.list:type_name -> umsclient.MemberMemberTagRelationListData
	85,  // 8: umsclient.QueryMemberProductCategoryRelationListResp.list:type_name -> umsclient.MemberProductCategoryRelationListData
	94,  // 9: umsclient.QueryMemberProductCollectionListResp.list:type_name -> umsclient.MemberProductCollectionListData
	103, // 10: umsclient.QueryMemberReadHistoryListResp.list:type_name -> umsclient.MemberReadHistoryListData
	116, // 11: umsclient.QueryMemberReceiveAddressListResp.list:type_name -> umsclient.MemberReceiveAddressListData
	129, // 12: umsclient.QueryMemberRuleSettingListResp.list:type_name -> umsclient.MemberRuleSettingListData
	136, // 13: umsclient.QueryMemberStatisticsInfoListResp.list:type_name -> umsclient.QueryMemberStatisticsInfoListData
	149, // 14: umsclient.QueryMemberTagListResp.list:type_name -> umsclient.MemberTagListData
	162, // 15: umsclient.QueryMemberTaskListResp.list:type_name -> umsclient.MemberTaskListData
	0,   // 16: umsclient.GrowthChangeHistoryService.AddGrowthChangeHistory:input_type -> umsclient.AddGrowthChangeHistoryReq
	2,   // 17: umsclient.GrowthChangeHistoryService.DeleteGrowthChangeHistory:input_type -> umsclient.DeleteGrowthChangeHistoryReq
	4,   // 18: umsclient.GrowthChangeHistoryService.QueryGrowthChangeHistoryDetail:input_type -> umsclient.QueryGrowthChangeHistoryDetailReq
	6,   // 19: umsclient.GrowthChangeHistoryService.QueryGrowthChangeHistoryList:input_type -> umsclient.QueryGrowthChangeHistoryListReq
	9,   // 20: umsclient.IntegrationChangeHistoryService.AddIntegrationChangeHistory:input_type -> umsclient.AddIntegrationChangeHistoryReq
	11,  // 21: umsclient.IntegrationChangeHistoryService.DeleteIntegrationChangeHistory:input_type -> umsclient.DeleteIntegrationChangeHistoryReq
	13,  // 22: umsclient.IntegrationChangeHistoryService.QueryIntegrationChangeHistoryDetail:input_type -> umsclient.QueryIntegrationChangeHistoryDetailReq
	15,  // 23: umsclient.IntegrationChangeHistoryService.QueryIntegrationChangeHistoryList:input_type -> umsclient.QueryIntegrationChangeHistoryListReq
	18,  // 24: umsclient.IntegrationConsumeSettingService.AddIntegrationConsumeSetting:input_type -> umsclient.AddIntegrationConsumeSettingReq
	20,  // 25: umsclient.IntegrationConsumeSettingService.DeleteIntegrationConsumeSetting:input_type -> umsclient.DeleteIntegrationConsumeSettingReq
	22,  // 26: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSetting:input_type -> umsclient.UpdateIntegrationConsumeSettingReq
	24,  // 27: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSettingStatus:input_type -> umsclient.UpdateIntegrationConsumeSettingStatusReq
	26,  // 28: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingDetail:input_type -> umsclient.QueryIntegrationConsumeSettingDetailReq
	28,  // 29: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingList:input_type -> umsclient.QueryIntegrationConsumeSettingListReq
	31,  // 30: umsclient.MemberService.AddMember:input_type -> umsclient.AddMemberReq
	33,  // 31: umsclient.MemberService.DeleteMember:input_type -> umsclient.DeleteMemberReq
	35,  // 32: umsclient.MemberService.UpdateMember:input_type -> umsclient.UpdateMemberReq
	37,  // 33: umsclient.MemberService.UpdateMemberStatus:input_type -> umsclient.UpdateMemberStatusReq
	39,  // 34: umsclient.MemberService.QueryMemberDetail:input_type -> umsclient.QueryMemberDetailReq
	41,  // 35: umsclient.MemberService.QueryMemberList:input_type -> umsclient.QueryMemberListReq
	44,  // 36: umsclient.MemberService.MemberLogin:input_type -> umsclient.MemberLoginReq
	46,  // 37: umsclient.MemberService.UpdateMemberIntegration:input_type -> umsclient.UpdateMemberIntegrationReq
	48,  // 38: umsclient.MemberBrandAttentionService.AddMemberBrandAttention:input_type -> umsclient.AddMemberBrandAttentionReq
	50,  // 39: umsclient.MemberBrandAttentionService.DeleteMemberBrandAttention:input_type -> umsclient.DeleteMemberBrandAttentionReq
	52,  // 40: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionDetail:input_type -> umsclient.QueryMemberBrandAttentionDetailReq
	54,  // 41: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionList:input_type -> umsclient.QueryMemberBrandAttentionListReq
	57,  // 42: umsclient.MemberLevelService.AddMemberLevel:input_type -> umsclient.AddMemberLevelReq
	59,  // 43: umsclient.MemberLevelService.DeleteMemberLevel:input_type -> umsclient.DeleteMemberLevelReq
	61,  // 44: umsclient.MemberLevelService.UpdateMemberLevel:input_type -> umsclient.UpdateMemberLevelReq
	63,  // 45: umsclient.MemberLevelService.UpdateMemberLevelStatus:input_type -> umsclient.UpdateMemberLevelStatusReq
	65,  // 46: umsclient.MemberLevelService.QueryMemberLevelDetail:input_type -> umsclient.QueryMemberLevelDetailReq
	67,  // 47: umsclient.MemberLevelService.QueryMemberLevelList:input_type -> umsclient.QueryMemberLevelListReq
	70,  // 48: umsclient.MemberLoginLogService.DeleteMemberLoginLog:input_type -> umsclient.DeleteMemberLoginLogReq
	72,  // 49: umsclient.MemberLoginLogService.QueryMemberLoginLogList:input_type -> umsclient.QueryMemberLoginLogListReq
	75,  // 50: umsclient.MemberMemberTagRelationService.AddMemberMemberTagRelation:input_type -> umsclient.AddMemberMemberTagRelationReq
	77,  // 51: umsclient.MemberMemberTagRelationService.DeleteMemberMemberTagRelation:input_type -> umsclient.DeleteMemberMemberTagRelationReq
	79,  // 52: umsclient.MemberMemberTagRelationService.QueryMemberMemberTagRelationList:input_type -> umsclient.QueryMemberMemberTagRelationListReq
	82,  // 53: umsclient.MemberProductCategoryRelationService.AddMemberProductCategoryRelation:input_type -> umsclient.AddMemberProductCategoryRelationReq
	84,  // 54: umsclient.MemberProductCategoryRelationService.QueryMemberProductCategoryRelationList:input_type -> umsclient.QueryMemberProductCategoryRelationListReq
	87,  // 55: umsclient.MemberProductCollectionService.AddMemberProductCollection:input_type -> umsclient.AddMemberProductCollectionReq
	89,  // 56: umsclient.MemberProductCollectionService.DeleteMemberProductCollection:input_type -> umsclient.DeleteMemberProductCollectionReq
	91,  // 57: umsclient.MemberProductCollectionService.QueryMemberProductCollectionDetail:input_type -> umsclient.QueryMemberProductCollectionDetailReq
	93,  // 58: umsclient.MemberProductCollectionService.QueryMemberProductCollectionList:input_type -> umsclient.QueryMemberProductCollectionListReq
	96,  // 59: umsclient.MemberReadHistoryService.AddMemberReadHistory:input_type -> umsclient.AddMemberReadHistoryReq
	98,  // 60: umsclient.MemberReadHistoryService.DeleteMemberReadHistory:input_type -> umsclient.DeleteMemberReadHistoryReq
	100, // 61: umsclient.MemberReadHistoryService.QueryMemberReadHistoryDetail:input_type -> umsclient.QueryMemberReadHistoryDetailReq
	102, // 62: umsclient.MemberReadHistoryService.QueryMemberReadHistoryList:input_type -> umsclient.QueryMemberReadHistoryListReq
	105, // 63: umsclient.MemberReceiveAddressService.AddMemberReceiveAddress:input_type -> umsclient.AddMemberReceiveAddressReq
	107, // 64: umsclient.MemberReceiveAddressService.DeleteMemberReceiveAddress:input_type -> umsclient.DeleteMemberReceiveAddressReq
	109, // 65: umsclient.MemberReceiveAddressService.UpdateMemberReceiveAddress:input_type -> umsclient.UpdateMemberReceiveAddressReq
	111, // 66: umsclient.MemberReceiveAddressService.UpdateMemberReceiveAddressStatus:input_type -> umsclient.UpdateMemberReceiveAddressStatusReq
	113, // 67: umsclient.MemberReceiveAddressService.QueryMemberReceiveAddressDetail:input_type -> umsclient.QueryMemberReceiveAddressDetailReq
	115, // 68: umsclient.MemberReceiveAddressService.QueryMemberReceiveAddressList:input_type -> umsclient.QueryMemberReceiveAddressListReq
	118, // 69: umsclient.MemberRuleSettingService.AddMemberRuleSetting:input_type -> umsclient.AddMemberRuleSettingReq
	120, // 70: umsclient.MemberRuleSettingService.DeleteMemberRuleSetting:input_type -> umsclient.DeleteMemberRuleSettingReq
	122, // 71: umsclient.MemberRuleSettingService.UpdateMemberRuleSetting:input_type -> umsclient.UpdateMemberRuleSettingReq
	124, // 72: umsclient.MemberRuleSettingService.UpdateMemberRuleSettingStatus:input_type -> umsclient.UpdateMemberRuleSettingStatusReq
	126, // 73: umsclient.MemberRuleSettingService.QueryMemberRuleSettingDetail:input_type -> umsclient.QueryMemberRuleSettingDetailReq
	128, // 74: umsclient.MemberRuleSettingService.QueryMemberRuleSettingList:input_type -> umsclient.QueryMemberRuleSettingListReq
	131, // 75: umsclient.MemberStatisticsInfoService.AddMemberStatisticsInfo:input_type -> umsclient.AddMemberStatisticsInfoReq
	133, // 76: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoDetail:input_type -> umsclient.QueryMemberStatisticsInfoDetailReq
	135, // 77: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoList:input_type -> umsclient.QueryMemberStatisticsInfoListReq
	138, // 78: umsclient.MemberTagService.AddMemberTag:input_type -> umsclient.AddMemberTagReq
	140, // 79: umsclient.MemberTagService.DeleteMemberTag:input_type -> umsclient.DeleteMemberTagReq
	142, // 80: umsclient.MemberTagService.UpdateMemberTag:input_type -> umsclient.UpdateMemberTagReq
	144, // 81: umsclient.MemberTagService.UpdateMemberTagStatus:input_type -> umsclient.UpdateMemberTagStatusReq
	146, // 82: umsclient.MemberTagService.QueryMemberTagDetail:input_type -> umsclient.QueryMemberTagDetailReq
	148, // 83: umsclient.MemberTagService.QueryMemberTagList:input_type -> umsclient.QueryMemberTagListReq
	151, // 84: umsclient.MemberTaskService.AddMemberTask:input_type -> umsclient.AddMemberTaskReq
	153, // 85: umsclient.MemberTaskService.DeleteMemberTask:input_type -> umsclient.DeleteMemberTaskReq
	155, // 86: umsclient.MemberTaskService.UpdateMemberTask:input_type -> umsclient.UpdateMemberTaskReq
	157, // 87: umsclient.MemberTaskService.UpdateMemberTaskStatus:input_type -> umsclient.UpdateMemberTaskStatusReq
	159, // 88: umsclient.MemberTaskService.QueryMemberTaskDetail:input_type -> umsclient.QueryMemberTaskDetailReq
	161, // 89: umsclient.MemberTaskService.QueryMemberTaskList:input_type -> umsclient.QueryMemberTaskListReq
	1,   // 90: umsclient.GrowthChangeHistoryService.AddGrowthChangeHistory:output_type -> umsclient.AddGrowthChangeHistoryResp
	3,   // 91: umsclient.GrowthChangeHistoryService.DeleteGrowthChangeHistory:output_type -> umsclient.DeleteGrowthChangeHistoryResp
	5,   // 92: umsclient.GrowthChangeHistoryService.QueryGrowthChangeHistoryDetail:output_type -> umsclient.QueryGrowthChangeHistoryDetailResp
	8,   // 93: umsclient.GrowthChangeHistoryService.QueryGrowthChangeHistoryList:output_type -> umsclient.QueryGrowthChangeHistoryListResp
	10,  // 94: umsclient.IntegrationChangeHistoryService.AddIntegrationChangeHistory:output_type -> umsclient.AddIntegrationChangeHistoryResp
	12,  // 95: umsclient.IntegrationChangeHistoryService.DeleteIntegrationChangeHistory:output_type -> umsclient.DeleteIntegrationChangeHistoryResp
	14,  // 96: umsclient.IntegrationChangeHistoryService.QueryIntegrationChangeHistoryDetail:output_type -> umsclient.QueryIntegrationChangeHistoryDetailResp
	17,  // 97: umsclient.IntegrationChangeHistoryService.QueryIntegrationChangeHistoryList:output_type -> umsclient.QueryIntegrationChangeHistoryListResp
	19,  // 98: umsclient.IntegrationConsumeSettingService.AddIntegrationConsumeSetting:output_type -> umsclient.AddIntegrationConsumeSettingResp
	21,  // 99: umsclient.IntegrationConsumeSettingService.DeleteIntegrationConsumeSetting:output_type -> umsclient.DeleteIntegrationConsumeSettingResp
	23,  // 100: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSetting:output_type -> umsclient.UpdateIntegrationConsumeSettingResp
	25,  // 101: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSettingStatus:output_type -> umsclient.UpdateIntegrationConsumeSettingStatusResp
	27,  // 102: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingDetail:output_type -> umsclient.QueryIntegrationConsumeSettingDetailResp
	30,  // 103: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingList:output_type -> umsclient.QueryIntegrationConsumeSettingListResp
	32,  // 104: umsclient.MemberService.AddMember:output_type -> umsclient.AddMemberResp
	34,  // 105: umsclient.MemberService.DeleteMember:output_type -> umsclient.DeleteMemberResp
	36,  // 106: umsclient.MemberService.UpdateMember:output_type -> umsclient.UpdateMemberResp
	38,  // 107: umsclient.MemberService.UpdateMemberStatus:output_type -> umsclient.UpdateMemberStatusResp
	40,  // 108: umsclient.MemberService.QueryMemberDetail:output_type -> umsclient.QueryMemberDetailResp
	43,  // 109: umsclient.MemberService.QueryMemberList:output_type -> umsclient.QueryMemberListResp
	45,  // 110: umsclient.MemberService.MemberLogin:output_type -> umsclient.MemberLoginResp
	47,  // 111: umsclient.MemberService.UpdateMemberIntegration:output_type -> umsclient.UpdateMemberIntegrationResp
	49,  // 112: umsclient.MemberBrandAttentionService.AddMemberBrandAttention:output_type -> umsclient.AddMemberBrandAttentionResp
	51,  // 113: umsclient.MemberBrandAttentionService.DeleteMemberBrandAttention:output_type -> umsclient.DeleteMemberBrandAttentionResp
	53,  // 114: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionDetail:output_type -> umsclient.QueryMemberBrandAttentionDetailResp
	56,  // 115: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionList:output_type -> umsclient.QueryMemberBrandAttentionListResp
	58,  // 116: umsclient.MemberLevelService.AddMemberLevel:output_type -> umsclient.AddMemberLevelResp
	60,  // 117: umsclient.MemberLevelService.DeleteMemberLevel:output_type -> umsclient.DeleteMemberLevelResp
	62,  // 118: umsclient.MemberLevelService.UpdateMemberLevel:output_type -> umsclient.UpdateMemberLevelResp
	64,  // 119: umsclient.MemberLevelService.UpdateMemberLevelStatus:output_type -> umsclient.UpdateMemberLevelStatusResp
	66,  // 120: umsclient.MemberLevelService.QueryMemberLevelDetail:output_type -> umsclient.QueryMemberLevelDetailResp
	69,  // 121: umsclient.MemberLevelService.QueryMemberLevelList:output_type -> umsclient.QueryMemberLevelListResp
	71,  // 122: umsclient.MemberLoginLogService.DeleteMemberLoginLog:output_type -> umsclient.DeleteMemberLoginLogResp
	74,  // 123: umsclient.MemberLoginLogService.QueryMemberLoginLogList:output_type -> umsclient.QueryMemberLoginLogListResp
	76,  // 124: umsclient.MemberMemberTagRelationService.AddMemberMemberTagRelation:output_type -> umsclient.AddMemberMemberTagRelationResp
	78,  // 125: umsclient.MemberMemberTagRelationService.DeleteMemberMemberTagRelation:output_type -> umsclient.DeleteMemberMemberTagRelationResp
	81,  // 126: umsclient.MemberMemberTagRelationService.QueryMemberMemberTagRelationList:output_type -> umsclient.QueryMemberMemberTagRelationListResp
	83,  // 127: umsclient.MemberProductCategoryRelationService.AddMemberProductCategoryRelation:output_type -> umsclient.AddMemberProductCategoryRelationResp
	86,  // 128: umsclient.MemberProductCategoryRelationService.QueryMemberProductCategoryRelationList:output_type -> umsclient.QueryMemberProductCategoryRelationListResp
	88,  // 129: umsclient.MemberProductCollectionService.AddMemberProductCollection:output_type -> umsclient.AddMemberProductCollectionResp
	90,  // 130: umsclient.MemberProductCollectionService.DeleteMemberProductCollection:output_type -> umsclient.DeleteMemberProductCollectionResp
	92,  // 131: umsclient.MemberProductCollectionService.QueryMemberProductCollectionDetail:output_type -> umsclient.QueryMemberProductCollectionDetailResp
	95,  // 132: umsclient.MemberProductCollectionService.QueryMemberProductCollectionList:output_type -> umsclient.QueryMemberProductCollectionListResp
	97,  // 133: umsclient.MemberReadHistoryService.AddMemberReadHistory:output_type -> umsclient.AddMemberReadHistoryResp
	99,  // 134: umsclient.MemberReadHistoryService.DeleteMemberReadHistory:output_type -> umsclient.DeleteMemberReadHistoryResp
	101, // 135: umsclient.MemberReadHistoryService.QueryMemberReadHistoryDetail:output_type -> umsclient.QueryMemberReadHistoryDetailResp
	104, // 136: umsclient.MemberReadHistoryService.QueryMemberReadHistoryList:output_type -> umsclient.QueryMemberReadHistoryListResp
	106, // 137: umsclient.MemberReceiveAddressService.AddMemberReceiveAddress:output_type -> umsclient.AddMemberReceiveAddressResp
	108, // 138: umsclient.MemberReceiveAddressService.DeleteMemberReceiveAddress:output_type -> umsclient.DeleteMemberReceiveAddressResp
	110, // 139: umsclient.MemberReceiveAddressService.UpdateMemberReceiveAddress:output_type -> umsclient.UpdateMemberReceiveAddressResp
	112, // 140: umsclient.MemberReceiveAddressService.UpdateMemberReceiveAddressStatus:output_type -> umsclient.UpdateMemberReceiveAddressStatusResp
	114, // 141: umsclient.MemberReceiveAddressService.QueryMemberReceiveAddressDetail:output_type -> umsclient.QueryMemberReceiveAddressDetailResp
	117, // 142: umsclient.MemberReceiveAddressService.QueryMemberReceiveAddressList:output_type -> umsclient.QueryMemberReceiveAddressListResp
	119, // 143: umsclient.MemberRuleSettingService.AddMemberRuleSetting:output_type -> umsclient.AddMemberRuleSettingResp
	121, // 144: umsclient.MemberRuleSettingService.DeleteMemberRuleSetting:output_type -> umsclient.DeleteMemberRuleSettingResp
	123, // 145: umsclient.MemberRuleSettingService.UpdateMemberRuleSetting:output_type -> umsclient.UpdateMemberRuleSettingResp
	125, // 146: umsclient.MemberRuleSettingService.UpdateMemberRuleSettingStatus:output_type -> umsclient.UpdateMemberRuleSettingStatusResp
	127, // 147: umsclient.MemberRuleSettingService.QueryMemberRuleSettingDetail:output_type -> umsclient.QueryMemberRuleSettingDetailResp
	130, // 148: umsclient.MemberRuleSettingService.QueryMemberRuleSettingList:output_type -> umsclient.QueryMemberRuleSettingListResp
	132, // 149: umsclient.MemberStatisticsInfoService.AddMemberStatisticsInfo:output_type -> umsclient.AddMemberStatisticsInfoResp
	134, // 150: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoDetail:output_type -> umsclient.QueryMemberStatisticsInfoDetailResp
	137, // 151: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoList:output_type -> umsclient.QueryMemberStatisticsInfoListResp
	139, // 152: umsclient.MemberTagService.AddMemberTag:output_type -> umsclient.AddMemberTagResp
	141, // 153: umsclient.MemberTagService.DeleteMemberTag:output_type -> umsclient.DeleteMemberTagResp
	143, // 154: umsclient.MemberTagService.UpdateMemberTag:output_type -> umsclient.UpdateMemberTagResp
	145, // 155: umsclient.MemberTagService.UpdateMemberTagStatus:output_type -> umsclient.UpdateMemberTagStatusResp
	147, // 156: umsclient.MemberTagService.QueryMemberTagDetail:output_type -> umsclient.QueryMemberTagDetailResp
	150, // 157: umsclient.MemberTagService.QueryMemberTagList:output_type -> umsclient.QueryMemberTagListResp
	152, // 158: umsclient.MemberTaskService.AddMemberTask:output_type -> umsclient.AddMemberTaskResp
	154, // 159: umsclient.MemberTaskService.DeleteMemberTask:output_type -> umsclient.DeleteMemberTaskResp
	156, // 160: umsclient.MemberTaskService.UpdateMemberTask:output_type -> umsclient.UpdateMemberTaskResp
	158, // 161: umsclient.MemberTaskService.UpdateMemberTaskStatus:output_type -> umsclient.UpdateMemberTaskStatusResp
	160, // 162: umsclient.MemberTaskService.QueryMemberTaskDetail:output_type -> umsclient.QueryMemberTaskDetailResp
	163, // 163: umsclient.MemberTaskService.QueryMemberTaskList:output_type -> umsclient.QueryMemberTaskListResp
	90,  // [90:164] is the sub-list for method output_type
	16,  // [16:90] is the sub-list for method input_type
	16,  // [16:16] is the sub-list for extension type_name
	16,  // [16:16] is the sub-list for extension extendee
	0,   // [0:16] is the sub-list for field type_name
}

func init() { file_rpc_ums_ums_proto_init() }
func file_rpc_ums_ums_proto_init() {
	if File_rpc_ums_ums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_ums_ums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGrowthChangeHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGrowthChangeHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGrowthChangeHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGrowthChangeHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGrowthChangeHistoryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGrowthChangeHistoryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGrowthChangeHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrowthChangeHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGrowthChangeHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationChangeHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationChangeHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationChangeHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationChangeHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationChangeHistoryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationChangeHistoryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationChangeHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationChangeHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationChangeHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationConsumeSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberIntegrationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberBrandAttentionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberBrandAttentionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberBrandAttentionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberBrandAttentionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberBrandAttentionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLevelListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLoginLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLoginLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLoginLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLoginLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberMemberTagRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberMemberTagRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberMemberTagRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberMemberTagRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberMemberTagRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberMemberTagRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberMemberTagRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCategoryRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCategoryRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCategoryRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberProductCategoryRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCategoryRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCollectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberProductCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberProductCollectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberProductCollectionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReadHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReadHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReadHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReadHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberReadHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReceiveAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReceiveAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReceiveAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReceiveAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberReceiveAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberReceiveAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberReceiveAddressStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberReceiveAddressStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReceiveAddressDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReceiveAddressDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReceiveAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberReceiveAddressListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReceiveAddressListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRuleSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberStatisticsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberStatisticsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTagListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTaskListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_ums_ums_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   164,
			NumExtensions: 0,
			NumServices:   16,
		},
		GoTypes:           file_rpc_ums_ums_proto_goTypes,
		DependencyIndexes: file_rpc_ums_ums_proto_depIdxs,
		MessageInfos:      file_rpc_ums_ums_proto_msgTypes,
	}.Build()
	File_rpc_ums_ums_proto = out.File
	file_rpc_ums_ums_proto_rawDesc = nil
	file_rpc_ums_ums_proto_goTypes = nil
	file_rpc_ums_ums_proto_depIdxs = nil
}

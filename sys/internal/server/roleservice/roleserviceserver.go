// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"
	"github.com/summmer-gonner/traffica/sys/internal/logic/roleservice"
	"github.com/summmer-gonner/traffica/sys/internal/svc"
	sysclient2 "github.com/summmer-gonner/traffica/sys/sysclient"
)

type RoleServiceServer struct {
	svcCtx *svc.ServiceContext
	sysclient2.UnimplementedRoleServiceServer
}

func NewRoleServiceServer(svcCtx *svc.ServiceContext) *RoleServiceServer {
	return &RoleServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加角色信息表
func (s *RoleServiceServer) AddRole(ctx context.Context, in *sysclient2.AddRoleReq) (*sysclient2.AddRoleResp, error) {
	l := roleservicelogic.NewAddRoleLogic(ctx, s.svcCtx)
	return l.AddRole(in)
}

// 删除角色信息表
func (s *RoleServiceServer) DeleteRole(ctx context.Context, in *sysclient2.DeleteRoleReq) (*sysclient2.DeleteRoleResp, error) {
	l := roleservicelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

// 更新角色信息表
func (s *RoleServiceServer) UpdateRole(ctx context.Context, in *sysclient2.UpdateRoleReq) (*sysclient2.UpdateRoleResp, error) {
	l := roleservicelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

// 更新角色信息表状态
func (s *RoleServiceServer) UpdateRoleStatus(ctx context.Context, in *sysclient2.UpdateRoleStatusReq) (*sysclient2.UpdateRoleStatusResp, error) {
	l := roleservicelogic.NewUpdateRoleStatusLogic(ctx, s.svcCtx)
	return l.UpdateRoleStatus(in)
}

// 查询角色信息表详情
func (s *RoleServiceServer) QueryRoleDetail(ctx context.Context, in *sysclient2.QueryRoleDetailReq) (*sysclient2.QueryRoleDetailResp, error) {
	l := roleservicelogic.roleservicelogic.NewQueryRoleDetailLogic(ctx, s.svcCtx)
	return l.QueryRoleDetail(in)
}

// 查询角色信息表列表
func (s *RoleServiceServer) QueryRoleList(ctx context.Context, in *sysclient2.QueryRoleListReq) (*sysclient2.QueryRoleListResp, error) {
	l := roleservicelogic.NewQueryRoleListLogic(ctx, s.svcCtx)
	return l.QueryRoleList(in)
}

// 查询用户与角色的关联
func (s *RoleServiceServer) QueryRoleMenuList(ctx context.Context, in *sysclient2.QueryRoleMenuListReq) (*sysclient2.QueryRoleMenuListResp, error) {
	l := roleservicelogic.NewQueryRoleMenuListLogic(ctx, s.svcCtx)
	return l.QueryRoleMenuList(in)
}

// 更新用户与角色的关联
func (s *RoleServiceServer) UpdateMenuRoleList(ctx context.Context, in *sysclient2.UpdateMenuRoleReq) (*sysclient2.UpdateMenuRoleResp, error) {
	l := roleservicelogic.NewUpdateMenuRoleListLogic(ctx, s.svcCtx)
	return l.UpdateMenuRoleList(in)
}

// 查询角色的用户关联
func (s *RoleServiceServer) QueryRoleUserList(ctx context.Context, in *sysclient2.QueryRoleUserListReq) (*sysclient2.QueryRoleUserListResp, error) {
	l := roleservicelogic.NewQueryRoleUserListLogic(ctx, s.svcCtx)
	return l.QueryRoleUserList(in)
}

// 取消授权/确认授权
func (s *RoleServiceServer) CancelAuthorization(ctx context.Context, in *sysclient2.CancelAuthorizationReq) (*sysclient2.CancelAuthorizationResp, error) {
	l := roleservicelogic.NewCancelAuthorizationLogic(ctx, s.svcCtx)
	return l.CancelAuthorization(in)
}

syntax = "proto3";

package main;

option go_package = "./proto";


message LoginReq {
  string account = 1;
  string password = 2;
  string ip_address = 3; //IP地址
  string os = 4; //操作信息
  string browser = 5; //浏览器

}

message loginResp {
  int64 id = 1;
  string userName = 2;
  string AccessToken = 3;
  repeated string ApiUrls = 4;

}

message InfoReq {
  int64 UserId = 1;
}

message MenuListTree {
  int64 id = 1;
  string name = 2;
  string icon = 3;
  int64  parent_id = 4;
  string parent_name=5;
  string permission = 6;
  int32 order = 7;
  string route_name=8;
  string route_path=9;
  string component_path=10;
  string redirect =11;
  bool cache =12;
  string  description=13;
  bool  available =14;
  bool  hidden =15;
}

message InfoResp {
  string avatar = 1;
  string name = 2;
  repeated MenuListTree menuListTree = 3;
//  repeated string BackgroundUrls = 4;
}

message ReSetPasswordReq {
  int64 id = 1;
  string update_by = 2;
}

message ReSetPasswordResp {
  string pong = 1;
}

// 添加用户信息表
message AddUserReq {
  string avatar = 1; //头像
  string create_by = 2; //创建者
  int64 dept_id = 3; //部门id
  string email = 4; //邮箱
  string mobile = 5; //手机号
  string nick_name = 6; //昵称
  string remark = 8; //备注信息
  string user_name = 9; //用户名
  int32 user_status = 10; //帐号状态（0正常 1停用）
  repeated int64 PostIds = 11; //岗位ids
}

message AddUserResp {
  string pong = 1;
}

// 删除用户信息表
message DeleteUserReq {
  repeated int64 ids = 1;
}

message DeleteUserResp {
  string pong = 1;
}

// 更新用户信息表
message UpdateUserReq {
  string avatar = 1; //头像
  int64 dept_id = 2; //部门id
  string email = 3; //邮箱
  int64 id = 4; //编号
  string mobile = 5; //手机号
  string nick_name = 6; //昵称
  string password = 7; //密码
  string remark = 8; //备注信息
  string update_by = 9; //更新者
  string user_name = 10; //用户名
  int32 user_status = 11; //帐号状态（0正常 1停用）
  repeated int64 PostIds = 12; //岗位ids

}

message UpdateUserResp {
  string pong = 1;
}

// 更新用户信息表状态
message UpdateUserStatusReq {
  repeated int64 ids = 1; //编号
  int32 user_status = 2; //帐号状态（0正常 1停用）
  string update_by = 3; //更新者

}

message UpdateUserStatusResp {
  string pong = 1;
}

// 查询用户信息表详情
message QueryUserDetailReq {
  int64 id = 1;
}

message QueryUserDetailResp {
  string avatar = 1; //头像
  string create_by = 2; //创建者
  string create_time = 3; //创建时间
  int64 dept_id = 4; //部门id
  string email = 5; //邮箱
  int64 id = 6; //编号
  int32 user_status = 7; //帐号状态（0正常 1停用）
  string login_ip = 8; //登录ip
  string login_time = 9; //登录时间
  string mobile = 10; //手机号
  string nick_name = 11; //昵称
  string remark = 12; //备注信息
  string update_by = 13; //更新者
  string update_time = 14; //更新时间
  string user_name = 15; //用户名
  repeated int64 PostIds = 16; //岗位ids

}

// 分页查询用户信息表列表
message QueryUserListReq {
  int64 page_num = 1; //第几页
  int64 page_size = 2; //每页的数量
  int64 dept_id = 3; //部门id
  string email = 4; //邮箱
  string mobile = 5; //手机号
  string nick_name = 6; //昵称
  int32 user_status = 7; //帐号状态（0正常 1停用）

}

message UserListData {
  string avatar = 1; //头像
  string create_by = 2; //创建者
  string create_time = 3; //创建时间
  int64 dept_id = 4; //部门id
  string email = 5; //邮箱
  int64 id = 6; //编号
  int32 user_status = 7; //帐号状态（0正常 1停用）
  string login_ip = 8; //登录ip
  string login_time = 9; //登录时间
  string mobile = 10; //手机号
  string nick_name = 11; //昵称
  string remark = 12; //备注信息
  string update_by = 13; //更新者
  string update_time = 14; //更新时间
  string user_name = 15; //用户名

}

message QueryUserListResp {
  int64 total = 1;
  repeated  UserListData list = 2;
}

message UpdateUserRoleListReq {
  int64 userId = 1;
  repeated int64 roleIds = 2;
}

message UpdateUserRoleListResp {
  string pong = 1;
}
message QueryUserRoleListReq {
  int64 current = 1;
  int64 pageSize = 2;
  int64 userId = 3;
}

message RoleData {
  string create_by = 1; //创建者
  string create_time = 2; //创建时间
  int32 data_scope = 3; //数据权限
  int64 id = 4; //编号
  int32 is_admin = 5; //是否超级管理员
  string update_time = 6; //更新时间
  string remark = 7; //备注
  string role_key = 8; //权限字符
  string role_name = 9; //角色名称
  int32 role_sort = 10; //角色排序
  int32 role_status = 11; //角色状态
  string update_by = 12; //更新者


}
message QueryUserRoleListResp {
  repeated RoleData list = 1;
  repeated int64 RoleIds = 2;
  int64 total = 3;
}

message QueryDeptAndPostListReq {

}

message QueryDeptAndPostListResp {
  repeated DeptData dept_list_data = 1;
  repeated PostData post_list_data = 2;
}

message DeptData {
  string create_by = 1; //创建者
  string create_time = 2; //创建时间
  string dept_name = 3; //部门名称
  int32 dept_sort = 4; //部门排序
  int32 dept_status = 5; //部门状态
  string email = 6; //邮箱
  int64 id = 7; //编号
  string leader = 9; //负责人
  int64 parent_id = 10; //上级机构ID，一级机构为0
  repeated int64 parent_ids = 11; //上级机构IDs，一级机构为0
  string phone = 12; //电话号码
  string remark = 13; //备注信息
  string update_by = 14; //更新者
  string update_time = 15; //更新时间

}

message PostData {
  string create_by = 1; //创建者
  string create_time = 2; //创建时间
  int64 id = 3; //编号
  string post_code = 5; //岗位编码
  string post_name = 6; //岗位名称
  int32 post_sort = 7; //岗位排序
  int32 post_status = 8; //岗位状态
  string remark = 9; //备注信息
  string update_by = 10; //更新者
  string update_time = 11; //更新时间

}
message ProfileReq {
  int64 UserId = 1;
}
message ProfileResp {
  string avatar = 1;
  string username = 2;
  string  nickname=3;
  string email=4;
  string  phone=5;
  string  remark=6;
}
message UserMenusReq {
  int64  userId=1;
}
message  Meta {
  string  creator=1;
  string  updater=2;
  string  title=3;
  string  permission=4;
  int32  type=5;
  string  icon=6;
  int32  orderNo=7;
  string  component=8;
  bool  isExt =9;
  int32 extOpenMode =10;
  int32  keepAlive=11;
  int32  show = 12;
  string  activeMenu=13;
  int32  status=14;

}
message UserMenusData {
  int64 id = 1;                         // 编号
  string menu_name = 2;                  // 菜单名称
  int64 parent_id = 3;                  // 父菜单ID，一级菜单为0
  string menu_path = 4;                 // 前端路由
  string menu_perms = 5;                // 权限标识
  int32 menu_type = 6;                  // 类型 0：目录,1：菜单,2：按钮,3：外链
  string menu_icon = 7;                 // 菜单图标
  int32 menu_sort = 8;                  // 菜单排序
  string create_by = 9;                 // 创建者
  string create_time = 10;              // 创建时间
  string update_by = 11;                // 更新者
  string update_time = 12;              // 更新时间（字符串类型）
  int32 menu_status = 13;               // 菜单状态
  int32 is_deleted = 14;                // 是否删除 0：否 1：是
  int32 is_visible = 15;                // 是否可见 0：否 1：是
  string remark = 16;                   // 备注信息
  string vue_path = 17;                 // vue系统的path
  string vue_component = 18;            // vue的页面
  string vue_icon = 19;                 // vue的图标
  string vue_redirect = 20;             // vue的路由重定向
  string background_url = 21;           // 接口地址
}
message UserMenusResp {
  repeated UserMenusData userMenuData=1;
}
message UserPermissionReq {
  int64  userId =1;
}
message  UserPermissionResp {
  repeated  string permission=1;
}
// 用户信息表
service UserService {
  // 用户登录
  rpc Login(LoginReq) returns(loginResp);
  // 获取用户个人信息
  rpc UserInfo(InfoReq) returns(InfoResp);
  // 获取当前用户的菜单信息
  rpc UserMenus(UserMenusReq) returns(UserMenusResp);
  // 获取当前用户的权限
  rpc UserPermissions(UserPermissionReq)returns(UserPermissionResp);
  //获取用户资料
  rpc UserProfile(ProfileReq)returns(ProfileResp);
  // 重置用户密码
  rpc ReSetPassword(ReSetPasswordReq) returns(ReSetPasswordResp);
  // 添加用户信息表
  rpc AddUser(AddUserReq) returns (AddUserResp){}
  // 删除用户信息表
  rpc DeleteUser(DeleteUserReq) returns (DeleteUserResp){}
  // 更新用户信息表
  rpc UpdateUser(UpdateUserReq) returns (UpdateUserResp ){}
  // 更新用户信息表状态
  rpc UpdateUserStatus(UpdateUserStatusReq) returns (UpdateUserStatusResp ){}
  // 查询用户信息表详情
  rpc QueryUserDetail(QueryUserDetailReq) returns (QueryUserDetailResp){}
  // 查询用户信息表列表
  rpc QueryUserList(QueryUserListReq) returns (QueryUserListResp){}

  //查询用户与角色的关联
  rpc QueryUserRoleList(QueryUserRoleListReq) returns(QueryUserRoleListResp);
  //更新用户与角色的关联
  rpc UpdateUserRoleList(UpdateUserRoleListReq) returns(UpdateUserRoleListResp);

  //查询所有部门和岗位
  rpc QueryDeptAndPostList(QueryDeptAndPostListReq) returns(QueryDeptAndPostListResp);
}
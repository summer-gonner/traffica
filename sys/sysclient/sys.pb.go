// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: sys/sys.proto

package sysclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加部门信息表
type AddDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string  `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`            //创建者
	DeptName   string  `protobuf:"bytes,2,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`            //部门名称
	DeptSort   int32   `protobuf:"varint,3,opt,name=dept_sort,json=deptSort,proto3" json:"dept_sort,omitempty"`           //部门排序
	DeptStatus int32   `protobuf:"varint,4,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"`     //部门状态
	Email      string  `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                                  //邮箱
	Leader     string  `protobuf:"bytes,6,opt,name=leader,proto3" json:"leader,omitempty"`                                //负责人
	ParentId   int64   `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           //上级机构ID，一级机构为0
	ParentIds  []int64 `protobuf:"varint,8,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"` //上级机构IDs，一级机构为0
	Phone      string  `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`                                  //电话号码
	Remark     string  `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`                               //备注信息
}

func (x *AddDeptReq) Reset() {
	*x = AddDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeptReq) ProtoMessage() {}

func (x *AddDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeptReq.ProtoReflect.Descriptor instead.
func (*AddDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{0}
}

func (x *AddDeptReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddDeptReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *AddDeptReq) GetDeptSort() int32 {
	if x != nil {
		return x.DeptSort
	}
	return 0
}

func (x *AddDeptReq) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *AddDeptReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddDeptReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *AddDeptReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddDeptReq) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *AddDeptReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddDeptReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddDeptResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddDeptResp) Reset() {
	*x = AddDeptResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeptResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeptResp) ProtoMessage() {}

func (x *AddDeptResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeptResp.ProtoReflect.Descriptor instead.
func (*AddDeptResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{1}
}

func (x *AddDeptResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除部门信息表
type DeleteDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteDeptReq) Reset() {
	*x = DeleteDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeptReq) ProtoMessage() {}

func (x *DeleteDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeptReq.ProtoReflect.Descriptor instead.
func (*DeleteDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteDeptReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteDeptResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteDeptResp) Reset() {
	*x = DeleteDeptResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeptResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeptResp) ProtoMessage() {}

func (x *DeleteDeptResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeptResp.ProtoReflect.Descriptor instead.
func (*DeleteDeptResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDeptResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新部门信息表
type UpdateDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName   string  `protobuf:"bytes,1,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`            //部门名称
	DeptSort   int32   `protobuf:"varint,2,opt,name=dept_sort,json=deptSort,proto3" json:"dept_sort,omitempty"`           //部门排序
	DeptStatus int32   `protobuf:"varint,3,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"`     //部门状态
	Email      string  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                                  //邮箱
	Id         int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                       //编号
	Leader     string  `protobuf:"bytes,6,opt,name=leader,proto3" json:"leader,omitempty"`                                //负责人
	ParentId   int64   `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           //上级机构ID，一级机构为0
	ParentIds  []int64 `protobuf:"varint,8,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"` //上级机构IDs，一级机构为0
	Phone      string  `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`                                  //电话号码
	Remark     string  `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`                               //备注信息
	UpdateBy   string  `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`           //更新者
}

func (x *UpdateDeptReq) Reset() {
	*x = UpdateDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptReq) ProtoMessage() {}

func (x *UpdateDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptReq.ProtoReflect.Descriptor instead.
func (*UpdateDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeptReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *UpdateDeptReq) GetDeptSort() int32 {
	if x != nil {
		return x.DeptSort
	}
	return 0
}

func (x *UpdateDeptReq) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *UpdateDeptReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateDeptReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeptReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *UpdateDeptReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateDeptReq) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *UpdateDeptReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateDeptReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateDeptReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDeptResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDeptResp) Reset() {
	*x = UpdateDeptResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptResp) ProtoMessage() {}

func (x *UpdateDeptResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptResp.ProtoReflect.Descriptor instead.
func (*UpdateDeptResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeptResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新部门信息表状态
type UpdateDeptStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptStatus int32   `protobuf:"varint,1,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"` //部门状态
	Ids        []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateDeptStatusReq) Reset() {
	*x = UpdateDeptStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptStatusReq) ProtoMessage() {}

func (x *UpdateDeptStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateDeptStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDeptStatusReq) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *UpdateDeptStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateDeptStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDeptStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDeptStatusResp) Reset() {
	*x = UpdateDeptStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptStatusResp) ProtoMessage() {}

func (x *UpdateDeptStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateDeptStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDeptStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询部门信息表详情
type QueryDeptDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryDeptDetailReq) Reset() {
	*x = QueryDeptDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptDetailReq) ProtoMessage() {}

func (x *QueryDeptDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptDetailReq.ProtoReflect.Descriptor instead.
func (*QueryDeptDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{8}
}

func (x *QueryDeptDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryDeptDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string  `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建者
	CreateTime string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`       //创建时间
	DeptName   string  `protobuf:"bytes,3,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`             //部门名称
	DeptSort   int32   `protobuf:"varint,4,opt,name=dept_sort,json=deptSort,proto3" json:"dept_sort,omitempty"`            //部门排序
	DeptStatus int32   `protobuf:"varint,5,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"`      //部门状态
	Email      string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                                   //邮箱
	Id         int64   `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                        //编号
	Leader     string  `protobuf:"bytes,9,opt,name=leader,proto3" json:"leader,omitempty"`                                 //负责人
	ParentId   int64   `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           //上级机构ID，一级机构为0
	ParentIds  []int64 `protobuf:"varint,11,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"` //上级机构IDs，一级机构为0
	Phone      string  `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`                                  //电话号码
	Remark     string  `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                //备注信息
	UpdateBy   string  `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`            //更新者
	UpdateTime string  `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`      //更新时间
}

func (x *QueryDeptDetailResp) Reset() {
	*x = QueryDeptDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptDetailResp) ProtoMessage() {}

func (x *QueryDeptDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptDetailResp.ProtoReflect.Descriptor instead.
func (*QueryDeptDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{9}
}

func (x *QueryDeptDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDeptDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDeptDetailResp) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryDeptDetailResp) GetDeptSort() int32 {
	if x != nil {
		return x.DeptSort
	}
	return 0
}

func (x *QueryDeptDetailResp) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *QueryDeptDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryDeptDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDeptDetailResp) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *QueryDeptDetailResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryDeptDetailResp) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *QueryDeptDetailResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryDeptDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryDeptDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDeptDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询部门信息表列表
type QueryDeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryDeptListReq) Reset() {
	*x = QueryDeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptListReq) ProtoMessage() {}

func (x *QueryDeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptListReq.ProtoReflect.Descriptor instead.
func (*QueryDeptListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{10}
}

type DeptListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string  `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建者
	CreateTime string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`       //创建时间
	DeptName   string  `protobuf:"bytes,3,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`             //部门名称
	DeptSort   int32   `protobuf:"varint,4,opt,name=dept_sort,json=deptSort,proto3" json:"dept_sort,omitempty"`            //部门排序
	DeptStatus int32   `protobuf:"varint,5,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"`      //部门状态
	Email      string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                                   //邮箱
	Id         int64   `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                        //编号
	Leader     string  `protobuf:"bytes,9,opt,name=leader,proto3" json:"leader,omitempty"`                                 //负责人
	ParentId   int64   `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           //上级机构ID，一级机构为0
	ParentIds  []int64 `protobuf:"varint,11,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"` //上级机构IDs，一级机构为0
	Phone      string  `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`                                  //电话号码
	Remark     string  `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                //备注信息
	UpdateBy   string  `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`            //更新者
	UpdateTime string  `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`      //更新时间
}

func (x *DeptListData) Reset() {
	*x = DeptListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListData) ProtoMessage() {}

func (x *DeptListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListData.ProtoReflect.Descriptor instead.
func (*DeptListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{11}
}

func (x *DeptListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DeptListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DeptListData) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptListData) GetDeptSort() int32 {
	if x != nil {
		return x.DeptSort
	}
	return 0
}

func (x *DeptListData) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *DeptListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptListData) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptListData) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *DeptListData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DeptListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DeptListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryDeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DeptListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryDeptListResp) Reset() {
	*x = QueryDeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptListResp) ProtoMessage() {}

func (x *QueryDeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptListResp.ProtoReflect.Descriptor instead.
func (*QueryDeptListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{12}
}

func (x *QueryDeptListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDeptListResp) GetList() []*DeptListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加字典数据表
type AddDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	DictLabel  string `protobuf:"bytes,2,opt,name=dict_label,json=dictLabel,proto3" json:"dict_label,omitempty"`     //字典标签
	DictSort   int32  `protobuf:"varint,3,opt,name=dict_sort,json=dictSort,proto3" json:"dict_sort,omitempty"`       //排序
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	DictValue  string `protobuf:"bytes,6,opt,name=dict_value,json=dictValue,proto3" json:"dict_value,omitempty"`     //字典键值
	IsDefault  int32  `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`    //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
}

func (x *AddDictItemReq) Reset() {
	*x = AddDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictItemReq) ProtoMessage() {}

func (x *AddDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictItemReq.ProtoReflect.Descriptor instead.
func (*AddDictItemReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{13}
}

func (x *AddDictItemReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddDictItemReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *AddDictItemReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *AddDictItemReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *AddDictItemReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *AddDictItemReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *AddDictItemReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *AddDictItemReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddDictItemResp) Reset() {
	*x = AddDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictItemResp) ProtoMessage() {}

func (x *AddDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictItemResp.ProtoReflect.Descriptor instead.
func (*AddDictItemResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{14}
}

func (x *AddDictItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除字典数据表
type DeleteDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteDictItemReq) Reset() {
	*x = DeleteDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictItemReq) ProtoMessage() {}

func (x *DeleteDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictItemReq.ProtoReflect.Descriptor instead.
func (*DeleteDictItemReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteDictItemReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteDictItemResp) Reset() {
	*x = DeleteDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictItemResp) ProtoMessage() {}

func (x *DeleteDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictItemResp.ProtoReflect.Descriptor instead.
func (*DeleteDictItemResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteDictItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典数据表
type UpdateDictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictLabel  string `protobuf:"bytes,1,opt,name=dict_label,json=dictLabel,proto3" json:"dict_label,omitempty"`     //字典标签
	DictSort   int32  `protobuf:"varint,2,opt,name=dict_sort,json=dictSort,proto3" json:"dict_sort,omitempty"`       //排序
	DictStatus int32  `protobuf:"varint,3,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,4,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	DictValue  string `protobuf:"bytes,5,opt,name=dict_value,json=dictValue,proto3" json:"dict_value,omitempty"`     //字典键值
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsDefault  int32  `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`    //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateDictItemReq) Reset() {
	*x = UpdateDictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictItemReq) ProtoMessage() {}

func (x *UpdateDictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictItemReq.ProtoReflect.Descriptor instead.
func (*UpdateDictItemReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDictItemReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *UpdateDictItemReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *UpdateDictItemReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *UpdateDictItemReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateDictItemReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *UpdateDictItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDictItemReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *UpdateDictItemReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateDictItemReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDictItemResp) Reset() {
	*x = UpdateDictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictItemResp) ProtoMessage() {}

func (x *UpdateDictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictItemResp.ProtoReflect.Descriptor instead.
func (*UpdateDictItemResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateDictItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典数据表状态
type UpdateDictItemStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictStatus int32   `protobuf:"varint,1,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	Ids        []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateDictItemStatusReq) Reset() {
	*x = UpdateDictItemStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictItemStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictItemStatusReq) ProtoMessage() {}

func (x *UpdateDictItemStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictItemStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateDictItemStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDictItemStatusReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *UpdateDictItemStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateDictItemStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDictItemStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDictItemStatusResp) Reset() {
	*x = UpdateDictItemStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictItemStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictItemStatusResp) ProtoMessage() {}

func (x *UpdateDictItemStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictItemStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateDictItemStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateDictItemStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询字典数据表详情
type QueryDictItemDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryDictItemDetailReq) Reset() {
	*x = QueryDictItemDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictItemDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictItemDetailReq) ProtoMessage() {}

func (x *QueryDictItemDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictItemDetailReq.ProtoReflect.Descriptor instead.
func (*QueryDictItemDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{21}
}

func (x *QueryDictItemDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryDictItemDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DictLabel  string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" json:"dict_label,omitempty"`     //字典标签
	DictSort   int32  `protobuf:"varint,4,opt,name=dict_sort,json=dictSort,proto3" json:"dict_sort,omitempty"`       //排序
	DictStatus int32  `protobuf:"varint,5,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	DictValue  string `protobuf:"bytes,7,opt,name=dict_value,json=dictValue,proto3" json:"dict_value,omitempty"`     //字典键值
	Id         int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsDefault  int32  `protobuf:"varint,9,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`    //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`                           //备注信息
	UpdateBy   string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *QueryDictItemDetailResp) Reset() {
	*x = QueryDictItemDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictItemDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictItemDetailResp) ProtoMessage() {}

func (x *QueryDictItemDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictItemDetailResp.ProtoReflect.Descriptor instead.
func (*QueryDictItemDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{22}
}

func (x *QueryDictItemDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *QueryDictItemDetailResp) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *QueryDictItemDetailResp) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDictItemDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryDictItemDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDictItemDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询字典数据表列表
type QueryDictItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
	DictLabel  string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" json:"dict_label,omitempty"`     //字典标签
	DictStatus int32  `protobuf:"varint,5,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
}

func (x *QueryDictItemListReq) Reset() {
	*x = QueryDictItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictItemListReq) ProtoMessage() {}

func (x *QueryDictItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictItemListReq.ProtoReflect.Descriptor instead.
func (*QueryDictItemListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{23}
}

func (x *QueryDictItemListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryDictItemListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryDictItemListReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *QueryDictItemListReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *QueryDictItemListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

type DictItemListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DictLabel  string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" json:"dict_label,omitempty"`     //字典标签
	DictSort   int32  `protobuf:"varint,4,opt,name=dict_sort,json=dictSort,proto3" json:"dict_sort,omitempty"`       //排序
	DictStatus int32  `protobuf:"varint,5,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	DictValue  string `protobuf:"bytes,7,opt,name=dict_value,json=dictValue,proto3" json:"dict_value,omitempty"`     //字典键值
	Id         int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsDefault  int32  `protobuf:"varint,9,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`    //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`                           //备注信息
	UpdateBy   string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *DictItemListData) Reset() {
	*x = DictItemListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemListData) ProtoMessage() {}

func (x *DictItemListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemListData.ProtoReflect.Descriptor instead.
func (*DictItemListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{24}
}

func (x *DictItemListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictItemListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictItemListData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemListData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictItemListData) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictItemListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemListData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictItemListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictItemListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictItemListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictItemListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictItemListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryDictItemListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictItemListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryDictItemListResp) Reset() {
	*x = QueryDictItemListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictItemListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictItemListResp) ProtoMessage() {}

func (x *QueryDictItemListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictItemListResp.ProtoReflect.Descriptor instead.
func (*QueryDictItemListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{25}
}

func (x *QueryDictItemListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDictItemListResp) GetList() []*DictItemListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加字典类型表
type AddDictTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	DictName   string `protobuf:"bytes,3,opt,name=dict_name,json=dictName,proto3" json:"dict_name,omitempty"`        //字典名称
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	IsSystem   int32  `protobuf:"varint,8,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`       //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
}

func (x *AddDictTypeReq) Reset() {
	*x = AddDictTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictTypeReq) ProtoMessage() {}

func (x *AddDictTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictTypeReq.ProtoReflect.Descriptor instead.
func (*AddDictTypeReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{26}
}

func (x *AddDictTypeReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddDictTypeReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *AddDictTypeReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *AddDictTypeReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *AddDictTypeReq) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *AddDictTypeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddDictTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddDictTypeResp) Reset() {
	*x = AddDictTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictTypeResp) ProtoMessage() {}

func (x *AddDictTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictTypeResp.ProtoReflect.Descriptor instead.
func (*AddDictTypeResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{27}
}

func (x *AddDictTypeResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除字典类型表
type DeleteDictTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteDictTypeReq) Reset() {
	*x = DeleteDictTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictTypeReq) ProtoMessage() {}

func (x *DeleteDictTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictTypeReq.ProtoReflect.Descriptor instead.
func (*DeleteDictTypeReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteDictTypeReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteDictTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteDictTypeResp) Reset() {
	*x = DeleteDictTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictTypeResp) ProtoMessage() {}

func (x *DeleteDictTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictTypeResp.ProtoReflect.Descriptor instead.
func (*DeleteDictTypeResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteDictTypeResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典类型表
type UpdateDictTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName   string `protobuf:"bytes,3,opt,name=dict_name,json=dictName,proto3" json:"dict_name,omitempty"`        //字典名称
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsSystem   int32  `protobuf:"varint,8,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`       //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
}

func (x *UpdateDictTypeReq) Reset() {
	*x = UpdateDictTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeReq) ProtoMessage() {}

func (x *UpdateDictTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeReq.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateDictTypeReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *UpdateDictTypeReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *UpdateDictTypeReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateDictTypeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDictTypeReq) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *UpdateDictTypeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateDictTypeReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDictTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDictTypeResp) Reset() {
	*x = UpdateDictTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeResp) ProtoMessage() {}

func (x *UpdateDictTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeResp.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateDictTypeResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典类型表状态
type UpdateDictTypeStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictStatus int32   `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	Ids        []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	UpdateBy   string  `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
}

func (x *UpdateDictTypeStatusReq) Reset() {
	*x = UpdateDictTypeStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeStatusReq) ProtoMessage() {}

func (x *UpdateDictTypeStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateDictTypeStatusReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *UpdateDictTypeStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateDictTypeStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateDictTypeStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateDictTypeStatusResp) Reset() {
	*x = UpdateDictTypeStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictTypeStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeStatusResp) ProtoMessage() {}

func (x *UpdateDictTypeStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateDictTypeStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询字典类型表详情
type QueryDictTypeDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryDictTypeDetailReq) Reset() {
	*x = QueryDictTypeDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictTypeDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictTypeDetailReq) ProtoMessage() {}

func (x *QueryDictTypeDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictTypeDetailReq.ProtoReflect.Descriptor instead.
func (*QueryDictTypeDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{34}
}

func (x *QueryDictTypeDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryDictTypeDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DictName   string `protobuf:"bytes,3,opt,name=dict_name,json=dictName,proto3" json:"dict_name,omitempty"`        //字典名称
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsSystem   int32  `protobuf:"varint,8,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`       //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *QueryDictTypeDetailResp) Reset() {
	*x = QueryDictTypeDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictTypeDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictTypeDetailResp) ProtoMessage() {}

func (x *QueryDictTypeDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictTypeDetailResp.ProtoReflect.Descriptor instead.
func (*QueryDictTypeDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{35}
}

func (x *QueryDictTypeDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *QueryDictTypeDetailResp) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDictTypeDetailResp) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *QueryDictTypeDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDictTypeDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询字典类型表列表
type QueryDictTypeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
	DictName   string `protobuf:"bytes,3,opt,name=dict_name,json=dictName,proto3" json:"dict_name,omitempty"`        //字典名称
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	IsSystem   int32  `protobuf:"varint,8,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`       //是否系统预留  0：否  1：是
}

func (x *QueryDictTypeListReq) Reset() {
	*x = QueryDictTypeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictTypeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictTypeListReq) ProtoMessage() {}

func (x *QueryDictTypeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictTypeListReq.ProtoReflect.Descriptor instead.
func (*QueryDictTypeListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{36}
}

func (x *QueryDictTypeListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryDictTypeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryDictTypeListReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *QueryDictTypeListReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *QueryDictTypeListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictTypeListReq) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

type DictTypeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DictName   string `protobuf:"bytes,3,opt,name=dict_name,json=dictName,proto3" json:"dict_name,omitempty"`        //字典名称
	DictStatus int32  `protobuf:"varint,4,opt,name=dict_status,json=dictStatus,proto3" json:"dict_status,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" json:"dict_type,omitempty"`        //字典类型
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsSystem   int32  `protobuf:"varint,8,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`       //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *DictTypeListData) Reset() {
	*x = DictTypeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListData) ProtoMessage() {}

func (x *DictTypeListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListData.ProtoReflect.Descriptor instead.
func (*DictTypeListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{37}
}

func (x *DictTypeListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictTypeListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictTypeListData) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeListData) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictTypeListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictTypeListData) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *DictTypeListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictTypeListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictTypeListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryDictTypeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictTypeListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryDictTypeListResp) Reset() {
	*x = QueryDictTypeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictTypeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictTypeListResp) ProtoMessage() {}

func (x *QueryDictTypeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictTypeListResp.ProtoReflect.Descriptor instead.
func (*QueryDictTypeListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{38}
}

func (x *QueryDictTypeListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDictTypeListResp) GetList() []*DictTypeListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 删除系统登录日志表
type DeleteLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteLoginLogReq) Reset() {
	*x = DeleteLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoginLogReq) ProtoMessage() {}

func (x *DeleteLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLoginLogReq.ProtoReflect.Descriptor instead.
func (*DeleteLoginLogReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteLoginLogReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteLoginLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteLoginLogResp) Reset() {
	*x = DeleteLoginLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLoginLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoginLogResp) ProtoMessage() {}

func (x *DeleteLoginLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLoginLogResp.ProtoReflect.Descriptor instead.
func (*DeleteLoginLogResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteLoginLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询系统登录日志表详情
type QueryLoginLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryLoginLogDetailReq) Reset() {
	*x = QueryLoginLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLoginLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLoginLogDetailReq) ProtoMessage() {}

func (x *QueryLoginLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLoginLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryLoginLogDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{41}
}

func (x *QueryLoginLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryLoginLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Browser     string `protobuf:"bytes,1,opt,name=browser,proto3" json:"browser,omitempty"`                            //浏览器
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                     //编号
	IpAddress   string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`       //IP地址
	LoginStatus string `protobuf:"bytes,4,opt,name=login_status,json=loginStatus,proto3" json:"login_status,omitempty"` //登录状态
	LoginTime   string `protobuf:"bytes,5,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`       //登录时间
	Os          string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                                      //操作信息
	UserName    string `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
	ErrorMsg    string `protobuf:"bytes,8,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`          //操作信息
}

func (x *QueryLoginLogDetailResp) Reset() {
	*x = QueryLoginLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLoginLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLoginLogDetailResp) ProtoMessage() {}

func (x *QueryLoginLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLoginLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryLoginLogDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{42}
}

func (x *QueryLoginLogDetailResp) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryLoginLogDetailResp) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetLoginStatus() string {
	if x != nil {
		return x.LoginStatus
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryLoginLogDetailResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 分页查询系统登录日志表列表
type QueryLoginLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum     int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`            //第几页
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         //每页的数量
	Browser     string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`                            //浏览器
	IpAddress   string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`       //IP地址
	LoginStatus string `protobuf:"bytes,4,opt,name=login_status,json=loginStatus,proto3" json:"login_status,omitempty"` //登录状态
	Os          string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                                      //操作信息
	UserName    string `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
}

func (x *QueryLoginLogListReq) Reset() {
	*x = QueryLoginLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLoginLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLoginLogListReq) ProtoMessage() {}

func (x *QueryLoginLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLoginLogListReq.ProtoReflect.Descriptor instead.
func (*QueryLoginLogListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{43}
}

func (x *QueryLoginLogListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryLoginLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryLoginLogListReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *QueryLoginLogListReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *QueryLoginLogListReq) GetLoginStatus() string {
	if x != nil {
		return x.LoginStatus
	}
	return ""
}

func (x *QueryLoginLogListReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *QueryLoginLogListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type LoginLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Browser     string `protobuf:"bytes,1,opt,name=browser,proto3" json:"browser,omitempty"`                            //浏览器
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                     //编号
	IpAddress   string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`       //IP地址
	LoginStatus string `protobuf:"bytes,4,opt,name=login_status,json=loginStatus,proto3" json:"login_status,omitempty"` //登录状态
	LoginTime   string `protobuf:"bytes,5,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`       //登录时间
	Os          string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                                      //操作信息
	UserName    string `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
	ErrorMsg    string `protobuf:"bytes,8,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`          //操作信息
}

func (x *LoginLogListData) Reset() {
	*x = LoginLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogListData) ProtoMessage() {}

func (x *LoginLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogListData.ProtoReflect.Descriptor instead.
func (*LoginLogListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{44}
}

func (x *LoginLogListData) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginLogListData) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LoginLogListData) GetLoginStatus() string {
	if x != nil {
		return x.LoginStatus
	}
	return ""
}

func (x *LoginLogListData) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *LoginLogListData) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogListData) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type QueryLoginLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*LoginLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryLoginLogListResp) Reset() {
	*x = QueryLoginLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLoginLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLoginLogListResp) ProtoMessage() {}

func (x *QueryLoginLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLoginLogListResp.ProtoReflect.Descriptor instead.
func (*QueryLoginLogListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{45}
}

func (x *QueryLoginLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryLoginLogListResp) GetList() []*LoginLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加菜单信息表
type AddMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundUrl string `protobuf:"bytes,1,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` //接口地址
	CreateBy      string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建者
	VueRedirect   string `protobuf:"bytes,3,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       //vue的路由重定向
	VueIcon       string `protobuf:"bytes,4,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                   //vue的图标
	VuePath       string `protobuf:"bytes,5,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                   //vue系统的path
	MenuIcon      string `protobuf:"bytes,6,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                //菜单图标
	MenuName      string `protobuf:"bytes,7,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                //菜单名称
	MenuPath      string `protobuf:"bytes,8,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                //前端路由
	MenuPerms     string `protobuf:"bytes,9,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`             //权限标识
	MenuSort      int32  `protobuf:"varint,10,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`              //菜单排序
	MenuStatus    int32  `protobuf:"varint,11,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`        //菜单状态
	MenuType      int32  `protobuf:"varint,12,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`              //类型 0：目录,1：菜单,2：按钮,3：外链
	ParentId      int64  `protobuf:"varint,13,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              //父菜单ID，一级菜单为0
	Remark        string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注信息
	VueComponent  string `protobuf:"bytes,15,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`   //vue的页面
	IsVisible     int32  `protobuf:"varint,16,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`           //是否可见  0：否  1：是
}

func (x *AddMenuReq) Reset() {
	*x = AddMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuReq) ProtoMessage() {}

func (x *AddMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuReq.ProtoReflect.Descriptor instead.
func (*AddMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{46}
}

func (x *AddMenuReq) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *AddMenuReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddMenuReq) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *AddMenuReq) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *AddMenuReq) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *AddMenuReq) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *AddMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *AddMenuReq) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *AddMenuReq) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *AddMenuReq) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *AddMenuReq) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *AddMenuReq) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *AddMenuReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddMenuReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddMenuReq) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *AddMenuReq) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

type AddMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMenuResp) Reset() {
	*x = AddMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuResp) ProtoMessage() {}

func (x *AddMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuResp.ProtoReflect.Descriptor instead.
func (*AddMenuResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{47}
}

func (x *AddMenuResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除菜单信息表
type DeleteMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMenuReq) Reset() {
	*x = DeleteMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuReq) ProtoMessage() {}

func (x *DeleteMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuReq.ProtoReflect.Descriptor instead.
func (*DeleteMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteMenuReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMenuResp) Reset() {
	*x = DeleteMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuResp) ProtoMessage() {}

func (x *DeleteMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuResp.ProtoReflect.Descriptor instead.
func (*DeleteMenuResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteMenuResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新菜单信息表
type UpdateMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundUrl string `protobuf:"bytes,1,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` //接口地址
	CreateBy      string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建者
	VueRedirect   string `protobuf:"bytes,3,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       //vue的路由重定向
	Id            int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	VuePath       string `protobuf:"bytes,5,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                   //vue系统的path
	MenuIcon      string `protobuf:"bytes,6,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                //菜单图标
	MenuName      string `protobuf:"bytes,7,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                //菜单名称
	MenuPath      string `protobuf:"bytes,8,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                //前端路由
	MenuPerms     string `protobuf:"bytes,9,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`             //权限标识
	MenuSort      int32  `protobuf:"varint,10,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`              //菜单排序
	MenuStatus    int32  `protobuf:"varint,11,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`        //菜单状态
	MenuType      int32  `protobuf:"varint,12,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`              //类型 0：目录,1：菜单,2：按钮,3：外链
	ParentId      int64  `protobuf:"varint,13,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              //父菜单ID，一级菜单为0
	Remark        string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注信息
	VueComponent  string `protobuf:"bytes,15,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`   //vue的页面
	VueIcon       string `protobuf:"bytes,16,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                  //vue的图标
	IsVisible     int32  `protobuf:"varint,17,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`           //是否可见  0：否  1：是
}

func (x *UpdateMenuReq) Reset() {
	*x = UpdateMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuReq) ProtoMessage() {}

func (x *UpdateMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateMenuReq) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *UpdateMenuReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UpdateMenuReq) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *UpdateMenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMenuReq) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *UpdateMenuReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateMenuReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateMenuReq) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *UpdateMenuReq) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *UpdateMenuReq) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

type UpdateMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMenuResp) Reset() {
	*x = UpdateMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuResp) ProtoMessage() {}

func (x *UpdateMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateMenuResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新菜单信息表状态
type UpdateMenuStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	MenuStatus int32   `protobuf:"varint,2,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"` //菜单状态
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateMenuStatusReq) Reset() {
	*x = UpdateMenuStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuStatusReq) ProtoMessage() {}

func (x *UpdateMenuStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateMenuStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMenuStatusReq) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *UpdateMenuStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMenuStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMenuStatusResp) Reset() {
	*x = UpdateMenuStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuStatusResp) ProtoMessage() {}

func (x *UpdateMenuStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateMenuStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询菜单信息表详情
type QueryMenuDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMenuDetailReq) Reset() {
	*x = QueryMenuDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuDetailReq) ProtoMessage() {}

func (x *QueryMenuDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMenuDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{54}
}

func (x *QueryMenuDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMenuDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundUrl string `protobuf:"bytes,1,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` //接口地址
	CreateBy      string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建者
	CreateTime    string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          //创建时间
	Id            int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	VueRedirect   string `protobuf:"bytes,5,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       //vue的路由重定向
	MenuIcon      string `protobuf:"bytes,6,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                //菜单图标
	MenuName      string `protobuf:"bytes,7,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                //菜单名称
	MenuPath      string `protobuf:"bytes,8,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                //前端路由
	MenuPerms     string `protobuf:"bytes,9,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`             //权限标识
	MenuSort      int32  `protobuf:"varint,10,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`              //菜单排序
	MenuStatus    int32  `protobuf:"varint,11,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`        //菜单状态
	MenuType      int32  `protobuf:"varint,12,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`              //类型 0：目录,1：菜单,2：按钮,3：外链
	ParentId      int64  `protobuf:"varint,13,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              //父菜单ID，一级菜单为0
	Remark        string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注信息
	UpdateBy      string `protobuf:"bytes,15,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新者
	UpdateTime    string `protobuf:"bytes,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //更新时间
	VueComponent  string `protobuf:"bytes,17,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`   //vue的页面
	VueIcon       string `protobuf:"bytes,18,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                  //vue的图标
	VuePath       string `protobuf:"bytes,19,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                  //vue系统的path
	IsVisible     int32  `protobuf:"varint,20,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`           //是否可见  0：否  1：是
}

func (x *QueryMenuDetailResp) Reset() {
	*x = QueryMenuDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuDetailResp) ProtoMessage() {}

func (x *QueryMenuDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMenuDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{55}
}

func (x *QueryMenuDetailResp) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *QueryMenuDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMenuDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMenuDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMenuDetailResp) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *QueryMenuDetailResp) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *QueryMenuDetailResp) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *QueryMenuDetailResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryMenuDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryMenuDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMenuDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *QueryMenuDetailResp) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *QueryMenuDetailResp) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *QueryMenuDetailResp) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *QueryMenuDetailResp) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

// 分页查询菜单信息表列表
type QueryMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryMenuListReq) Reset() {
	*x = QueryMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuListReq) ProtoMessage() {}

func (x *QueryMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuListReq.ProtoReflect.Descriptor instead.
func (*QueryMenuListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{56}
}

type MenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundUrl string `protobuf:"bytes,1,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` //接口地址
	CreateBy      string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建者
	CreateTime    string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          //创建时间
	Id            int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	VueRedirect   string `protobuf:"bytes,5,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       //vue的路由重定向
	MenuIcon      string `protobuf:"bytes,6,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                //菜单图标
	MenuName      string `protobuf:"bytes,7,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                //菜单名称
	MenuPath      string `protobuf:"bytes,8,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                //前端路由
	MenuPerms     string `protobuf:"bytes,9,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`             //权限标识
	MenuSort      int32  `protobuf:"varint,10,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`              //菜单排序
	MenuStatus    int32  `protobuf:"varint,11,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`        //菜单状态
	MenuType      int32  `protobuf:"varint,12,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`              //类型 0：目录,1：菜单,2：按钮,3：外链
	ParentId      int64  `protobuf:"varint,13,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              //父菜单ID，一级菜单为0
	Remark        string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注信息
	UpdateBy      string `protobuf:"bytes,15,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新者
	UpdateTime    string `protobuf:"bytes,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //更新时间
	VueComponent  string `protobuf:"bytes,17,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`   //vue的页面
	VueIcon       string `protobuf:"bytes,18,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                  //vue的图标
	VuePath       string `protobuf:"bytes,19,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                  //vue系统的path
	IsVisible     int32  `protobuf:"varint,20,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`           //是否可见  0：否  1：是
}

func (x *MenuListData) Reset() {
	*x = MenuListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListData) ProtoMessage() {}

func (x *MenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListData.ProtoReflect.Descriptor instead.
func (*MenuListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{57}
}

func (x *MenuListData) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *MenuListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MenuListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MenuListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuListData) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *MenuListData) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *MenuListData) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuListData) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *MenuListData) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *MenuListData) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *MenuListData) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *MenuListData) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *MenuListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MenuListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MenuListData) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuListData) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuListData) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuListData) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

type QueryMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MenuListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMenuListResp) Reset() {
	*x = QueryMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuListResp) ProtoMessage() {}

func (x *QueryMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuListResp.ProtoReflect.Descriptor instead.
func (*QueryMenuListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{58}
}

func (x *QueryMenuListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMenuListResp) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加系统操作日志表
type AddOperateLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName          string `protobuf:"bytes,1,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`                            //部门名称
	Id                int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                       //编号
	OperationIp       string `protobuf:"bytes,3,opt,name=operation_ip,json=operationIp,proto3" json:"operation_ip,omitempty"`                   //操作地址
	OperationName     string `protobuf:"bytes,4,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`             //操作人员
	OperationParams   string `protobuf:"bytes,5,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`       //请求参数
	OperationResponse string `protobuf:"bytes,6,opt,name=operation_response,json=operationResponse,proto3" json:"operation_response,omitempty"` //响应参数
	OperationStatus   int32  `protobuf:"varint,7,opt,name=operation_status,json=operationStatus,proto3" json:"operation_status,omitempty"`      //操作状态
	UseTime           int64  `protobuf:"varint,8,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                              //执行时长(毫秒)
	OperationType     string `protobuf:"bytes,9,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`             //操作类型
	OperationUrl      string `protobuf:"bytes,10,opt,name=operation_url,json=operationUrl,proto3" json:"operation_url,omitempty"`               //操作方法
	RequestMethod     string `protobuf:"bytes,11,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`            //请求方式
	Title             string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                                                 //系统模块
	Os                string `protobuf:"bytes,13,opt,name=os,proto3" json:"os,omitempty"`                                                       //操作系统信息
	Browser           string `protobuf:"bytes,14,opt,name=browser,proto3" json:"browser,omitempty"`                                             //浏览器
}

func (x *AddOperateLogReq) Reset() {
	*x = AddOperateLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperateLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperateLogReq) ProtoMessage() {}

func (x *AddOperateLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperateLogReq.ProtoReflect.Descriptor instead.
func (*AddOperateLogReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{59}
}

func (x *AddOperateLogReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *AddOperateLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOperateLogReq) GetOperationIp() string {
	if x != nil {
		return x.OperationIp
	}
	return ""
}

func (x *AddOperateLogReq) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *AddOperateLogReq) GetOperationParams() string {
	if x != nil {
		return x.OperationParams
	}
	return ""
}

func (x *AddOperateLogReq) GetOperationResponse() string {
	if x != nil {
		return x.OperationResponse
	}
	return ""
}

func (x *AddOperateLogReq) GetOperationStatus() int32 {
	if x != nil {
		return x.OperationStatus
	}
	return 0
}

func (x *AddOperateLogReq) GetUseTime() int64 {
	if x != nil {
		return x.UseTime
	}
	return 0
}

func (x *AddOperateLogReq) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *AddOperateLogReq) GetOperationUrl() string {
	if x != nil {
		return x.OperationUrl
	}
	return ""
}

func (x *AddOperateLogReq) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *AddOperateLogReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddOperateLogReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *AddOperateLogReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

type AddOperateLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOperateLogResp) Reset() {
	*x = AddOperateLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperateLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperateLogResp) ProtoMessage() {}

func (x *AddOperateLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperateLogResp.ProtoReflect.Descriptor instead.
func (*AddOperateLogResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{60}
}

func (x *AddOperateLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除系统操作日志表
type DeleteOperateLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOperateLogReq) Reset() {
	*x = DeleteOperateLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOperateLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOperateLogReq) ProtoMessage() {}

func (x *DeleteOperateLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOperateLogReq.ProtoReflect.Descriptor instead.
func (*DeleteOperateLogReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteOperateLogReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOperateLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOperateLogResp) Reset() {
	*x = DeleteOperateLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOperateLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOperateLogResp) ProtoMessage() {}

func (x *DeleteOperateLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOperateLogResp.ProtoReflect.Descriptor instead.
func (*DeleteOperateLogResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteOperateLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询系统操作日志表详情
type QueryOperateLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOperateLogDetailReq) Reset() {
	*x = QueryOperateLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateLogDetailReq) ProtoMessage() {}

func (x *QueryOperateLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOperateLogDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{63}
}

func (x *QueryOperateLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOperateLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName          string `protobuf:"bytes,1,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`                            //部门名称
	Id                int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                       //编号
	OperationIp       string `protobuf:"bytes,3,opt,name=operation_ip,json=operationIp,proto3" json:"operation_ip,omitempty"`                   //操作地址
	OperationName     string `protobuf:"bytes,4,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`             //操作人员
	OperationParams   string `protobuf:"bytes,5,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`       //请求参数
	OperationResponse string `protobuf:"bytes,6,opt,name=operation_response,json=operationResponse,proto3" json:"operation_response,omitempty"` //响应参数
	OperationStatus   int32  `protobuf:"varint,7,opt,name=operation_status,json=operationStatus,proto3" json:"operation_status,omitempty"`      //操作状态
	OperationTime     string `protobuf:"bytes,8,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`             //操作时间
	OperationType     string `protobuf:"bytes,9,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`             //操作类型
	OperationUrl      string `protobuf:"bytes,10,opt,name=operation_url,json=operationUrl,proto3" json:"operation_url,omitempty"`               //操作方法
	RequestMethod     string `protobuf:"bytes,11,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`            //请求方式
	Title             string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                                                 //系统模块
	UseTime           int64  `protobuf:"varint,13,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                             //执行时长(毫秒)
	Os                string `protobuf:"bytes,14,opt,name=os,proto3" json:"os,omitempty"`                                                       //操作系统信息
	Browser           string `protobuf:"bytes,15,opt,name=browser,proto3" json:"browser,omitempty"`                                             //浏览器
}

func (x *QueryOperateLogDetailResp) Reset() {
	*x = QueryOperateLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateLogDetailResp) ProtoMessage() {}

func (x *QueryOperateLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOperateLogDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{64}
}

func (x *QueryOperateLogDetailResp) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOperateLogDetailResp) GetOperationIp() string {
	if x != nil {
		return x.OperationIp
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationParams() string {
	if x != nil {
		return x.OperationParams
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationResponse() string {
	if x != nil {
		return x.OperationResponse
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationStatus() int32 {
	if x != nil {
		return x.OperationStatus
	}
	return 0
}

func (x *QueryOperateLogDetailResp) GetOperationTime() string {
	if x != nil {
		return x.OperationTime
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetOperationUrl() string {
	if x != nil {
		return x.OperationUrl
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetUseTime() int64 {
	if x != nil {
		return x.UseTime
	}
	return 0
}

func (x *QueryOperateLogDetailResp) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *QueryOperateLogDetailResp) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

// 分页查询系统操作日志表列表
type QueryOperateLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum         int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                         //第几页
	PageSize        int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                      //每页的数量
	OperationIp     string `protobuf:"bytes,3,opt,name=operation_ip,json=operationIp,proto3" json:"operation_ip,omitempty"`              //操作地址
	OperationName   string `protobuf:"bytes,4,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`        //操作人员
	DeptName        string `protobuf:"bytes,5,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`                       //部门名称
	OperationStatus int32  `protobuf:"varint,6,opt,name=operation_status,json=operationStatus,proto3" json:"operation_status,omitempty"` //操作状态
	OperationType   string `protobuf:"bytes,7,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`        //操作类型
	OperationUrl    string `protobuf:"bytes,8,opt,name=operation_url,json=operationUrl,proto3" json:"operation_url,omitempty"`           //操作方法
	Title           string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`                                            //系统模块
	Os              string `protobuf:"bytes,11,opt,name=os,proto3" json:"os,omitempty"`                                                  //操作系统信息
	Browser         string `protobuf:"bytes,12,opt,name=browser,proto3" json:"browser,omitempty"`                                        //浏览器
}

func (x *QueryOperateLogListReq) Reset() {
	*x = QueryOperateLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateLogListReq) ProtoMessage() {}

func (x *QueryOperateLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateLogListReq.ProtoReflect.Descriptor instead.
func (*QueryOperateLogListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{65}
}

func (x *QueryOperateLogListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOperateLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOperateLogListReq) GetOperationIp() string {
	if x != nil {
		return x.OperationIp
	}
	return ""
}

func (x *QueryOperateLogListReq) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *QueryOperateLogListReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryOperateLogListReq) GetOperationStatus() int32 {
	if x != nil {
		return x.OperationStatus
	}
	return 0
}

func (x *QueryOperateLogListReq) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *QueryOperateLogListReq) GetOperationUrl() string {
	if x != nil {
		return x.OperationUrl
	}
	return ""
}

func (x *QueryOperateLogListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueryOperateLogListReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *QueryOperateLogListReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

type OperateLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName          string `protobuf:"bytes,1,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`                            //部门名称
	Id                int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                       //编号
	OperationIp       string `protobuf:"bytes,3,opt,name=operation_ip,json=operationIp,proto3" json:"operation_ip,omitempty"`                   //操作地址
	OperationName     string `protobuf:"bytes,4,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`             //操作人员
	OperationParams   string `protobuf:"bytes,5,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`       //请求参数
	OperationResponse string `protobuf:"bytes,6,opt,name=operation_response,json=operationResponse,proto3" json:"operation_response,omitempty"` //响应参数
	OperationStatus   int32  `protobuf:"varint,7,opt,name=operation_status,json=operationStatus,proto3" json:"operation_status,omitempty"`      //操作状态
	OperationTime     string `protobuf:"bytes,8,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`             //操作时间
	OperationType     string `protobuf:"bytes,9,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`             //操作类型
	OperationUrl      string `protobuf:"bytes,10,opt,name=operation_url,json=operationUrl,proto3" json:"operation_url,omitempty"`               //操作方法
	RequestMethod     string `protobuf:"bytes,11,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`            //请求方式
	Title             string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                                                 //系统模块
	UseTime           int64  `protobuf:"varint,13,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`                             //执行时长(毫秒)
	Os                string `protobuf:"bytes,14,opt,name=os,proto3" json:"os,omitempty"`                                                       //操作系统信息
	Browser           string `protobuf:"bytes,15,opt,name=browser,proto3" json:"browser,omitempty"`                                             //浏览器
}

func (x *OperateLogListData) Reset() {
	*x = OperateLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateLogListData) ProtoMessage() {}

func (x *OperateLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateLogListData.ProtoReflect.Descriptor instead.
func (*OperateLogListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{66}
}

func (x *OperateLogListData) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *OperateLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperateLogListData) GetOperationIp() string {
	if x != nil {
		return x.OperationIp
	}
	return ""
}

func (x *OperateLogListData) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *OperateLogListData) GetOperationParams() string {
	if x != nil {
		return x.OperationParams
	}
	return ""
}

func (x *OperateLogListData) GetOperationResponse() string {
	if x != nil {
		return x.OperationResponse
	}
	return ""
}

func (x *OperateLogListData) GetOperationStatus() int32 {
	if x != nil {
		return x.OperationStatus
	}
	return 0
}

func (x *OperateLogListData) GetOperationTime() string {
	if x != nil {
		return x.OperationTime
	}
	return ""
}

func (x *OperateLogListData) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *OperateLogListData) GetOperationUrl() string {
	if x != nil {
		return x.OperationUrl
	}
	return ""
}

func (x *OperateLogListData) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperateLogListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperateLogListData) GetUseTime() int64 {
	if x != nil {
		return x.UseTime
	}
	return 0
}

func (x *OperateLogListData) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *OperateLogListData) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

type QueryOperateLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OperateLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOperateLogListResp) Reset() {
	*x = QueryOperateLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateLogListResp) ProtoMessage() {}

func (x *QueryOperateLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateLogListResp.ProtoReflect.Descriptor instead.
func (*QueryOperateLogListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{67}
}

func (x *QueryOperateLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOperateLogListResp) GetList() []*OperateLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加岗位管理
type AddPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	PostCode   string `protobuf:"bytes,2,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,3,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostSort   int32  `protobuf:"varint,4,opt,name=post_sort,json=postSort,proto3" json:"post_sort,omitempty"`       //岗位排序
	PostStatus int32  `protobuf:"varint,5,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
}

func (x *AddPostReq) Reset() {
	*x = AddPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPostReq) ProtoMessage() {}

func (x *AddPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPostReq.ProtoReflect.Descriptor instead.
func (*AddPostReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{68}
}

func (x *AddPostReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddPostReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *AddPostReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *AddPostReq) GetPostSort() int32 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *AddPostReq) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *AddPostReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddPostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddPostResp) Reset() {
	*x = AddPostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPostResp) ProtoMessage() {}

func (x *AddPostResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPostResp.ProtoReflect.Descriptor instead.
func (*AddPostResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{69}
}

func (x *AddPostResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除岗位管理
type DeletePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeletePostReq) Reset() {
	*x = DeletePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostReq) ProtoMessage() {}

func (x *DeletePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostReq.ProtoReflect.Descriptor instead.
func (*DeletePostReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{70}
}

func (x *DeletePostReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeletePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeletePostResp) Reset() {
	*x = DeletePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostResp) ProtoMessage() {}

func (x *DeletePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostResp.ProtoReflect.Descriptor instead.
func (*DeletePostResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{71}
}

func (x *DeletePostResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新岗位管理
type UpdatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	PostCode   string `protobuf:"bytes,2,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,3,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostSort   int32  `protobuf:"varint,4,opt,name=post_sort,json=postSort,proto3" json:"post_sort,omitempty"`       //岗位排序
	PostStatus int32  `protobuf:"varint,5,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdatePostReq) Reset() {
	*x = UpdatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostReq) ProtoMessage() {}

func (x *UpdatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostReq.ProtoReflect.Descriptor instead.
func (*UpdatePostReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{72}
}

func (x *UpdatePostReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePostReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UpdatePostReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *UpdatePostReq) GetPostSort() int32 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *UpdatePostReq) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *UpdatePostReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdatePostReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdatePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdatePostResp) Reset() {
	*x = UpdatePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostResp) ProtoMessage() {}

func (x *UpdatePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostResp.ProtoReflect.Descriptor instead.
func (*UpdatePostResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{73}
}

func (x *UpdatePostResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新岗位管理状态
type UpdatePostStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	PostStatus int32   `protobuf:"varint,2,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdatePostStatusReq) Reset() {
	*x = UpdatePostStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostStatusReq) ProtoMessage() {}

func (x *UpdatePostStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostStatusReq.ProtoReflect.Descriptor instead.
func (*UpdatePostStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{74}
}

func (x *UpdatePostStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdatePostStatusReq) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *UpdatePostStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdatePostStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdatePostStatusResp) Reset() {
	*x = UpdatePostStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostStatusResp) ProtoMessage() {}

func (x *UpdatePostStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostStatusResp.ProtoReflect.Descriptor instead.
func (*UpdatePostStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{75}
}

func (x *UpdatePostStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询岗位管理详情
type QueryPostDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryPostDetailReq) Reset() {
	*x = QueryPostDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPostDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostDetailReq) ProtoMessage() {}

func (x *QueryPostDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostDetailReq.ProtoReflect.Descriptor instead.
func (*QueryPostDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{76}
}

func (x *QueryPostDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryPostDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	PostCode   string `protobuf:"bytes,5,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,6,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostSort   int32  `protobuf:"varint,7,opt,name=post_sort,json=postSort,proto3" json:"post_sort,omitempty"`       //岗位排序
	PostStatus int32  `protobuf:"varint,8,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *QueryPostDetailResp) Reset() {
	*x = QueryPostDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPostDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostDetailResp) ProtoMessage() {}

func (x *QueryPostDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostDetailResp.ProtoReflect.Descriptor instead.
func (*QueryPostDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{77}
}

func (x *QueryPostDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryPostDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryPostDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryPostDetailResp) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *QueryPostDetailResp) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *QueryPostDetailResp) GetPostSort() int32 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *QueryPostDetailResp) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *QueryPostDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryPostDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryPostDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询岗位管理列表
type QueryPostListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode   string `protobuf:"bytes,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,2,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostStatus int32  `protobuf:"varint,3,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	PageNum    int64  `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int64  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
}

func (x *QueryPostListReq) Reset() {
	*x = QueryPostListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPostListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostListReq) ProtoMessage() {}

func (x *QueryPostListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostListReq.ProtoReflect.Descriptor instead.
func (*QueryPostListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{78}
}

func (x *QueryPostListReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *QueryPostListReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *QueryPostListReq) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *QueryPostListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryPostListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PostListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	PostCode   string `protobuf:"bytes,5,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,6,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostSort   int32  `protobuf:"varint,7,opt,name=post_sort,json=postSort,proto3" json:"post_sort,omitempty"`       //岗位排序
	PostStatus int32  `protobuf:"varint,8,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *PostListData) Reset() {
	*x = PostListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostListData) ProtoMessage() {}

func (x *PostListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostListData.ProtoReflect.Descriptor instead.
func (*PostListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{79}
}

func (x *PostListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PostListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PostListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostListData) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostListData) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostListData) GetPostSort() int32 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *PostListData) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *PostListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PostListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PostListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryPostListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*PostListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryPostListResp) Reset() {
	*x = QueryPostListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPostListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostListResp) ProtoMessage() {}

func (x *QueryPostListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostListResp.ProtoReflect.Descriptor instead.
func (*QueryPostListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{80}
}

func (x *QueryPostListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryPostListResp) GetList() []*PostListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加角色信息表
type AddRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	DataScope  int32  `protobuf:"varint,2,opt,name=data_scope,json=dataScope,proto3" json:"data_scope,omitempty"`    //数据权限
	IsAdmin    int32  `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`          //是否超级管理员
	Remark     string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注
	RoleKey    string `protobuf:"bytes,5,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`           //权限字符
	RoleName   string `protobuf:"bytes,6,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`        //角色名称
	RoleSort   int32  `protobuf:"varint,7,opt,name=role_sort,json=roleSort,proto3" json:"role_sort,omitempty"`       //角色排序
	RoleStatus int32  `protobuf:"varint,8,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
}

func (x *AddRoleReq) Reset() {
	*x = AddRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleReq) ProtoMessage() {}

func (x *AddRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleReq.ProtoReflect.Descriptor instead.
func (*AddRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{81}
}

func (x *AddRoleReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddRoleReq) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *AddRoleReq) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *AddRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddRoleReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *AddRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddRoleReq) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *AddRoleReq) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

type AddRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddRoleResp) Reset() {
	*x = AddRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleResp) ProtoMessage() {}

func (x *AddRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleResp.ProtoReflect.Descriptor instead.
func (*AddRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{82}
}

func (x *AddRoleResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除角色信息表
type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{83}
}

func (x *DeleteRoleReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteRoleResp) Reset() {
	*x = DeleteRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResp) ProtoMessage() {}

func (x *DeleteRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{84}
}

func (x *DeleteRoleResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新角色信息表
type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataScope  int32  `protobuf:"varint,1,opt,name=data_scope,json=dataScope,proto3" json:"data_scope,omitempty"`    //数据权限
	Id         int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	IsAdmin    int32  `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`          //是否超级管理员
	Remark     string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注
	RoleKey    string `protobuf:"bytes,5,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`           //权限字符
	RoleName   string `protobuf:"bytes,6,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`        //角色名称
	RoleSort   int32  `protobuf:"varint,7,opt,name=role_sort,json=roleSort,proto3" json:"role_sort,omitempty"`       //角色排序
	RoleStatus int32  `protobuf:"varint,8,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
	UpdateBy   string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateRoleReq) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *UpdateRoleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoleReq) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UpdateRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *UpdateRoleReq) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

func (x *UpdateRoleReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateRoleResp) Reset() {
	*x = UpdateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResp) ProtoMessage() {}

func (x *UpdateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateRoleResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新角色信息表状态
type UpdateRoleStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	RoleStatus int32   `protobuf:"varint,2,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateRoleStatusReq) Reset() {
	*x = UpdateRoleStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStatusReq) ProtoMessage() {}

func (x *UpdateRoleStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateRoleStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateRoleStatusReq) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

func (x *UpdateRoleStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateRoleStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateRoleStatusResp) Reset() {
	*x = UpdateRoleStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStatusResp) ProtoMessage() {}

func (x *UpdateRoleStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateRoleStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询角色信息表详情
type QueryRoleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryRoleDetailReq) Reset() {
	*x = QueryRoleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleDetailReq) ProtoMessage() {}

func (x *QueryRoleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleDetailReq.ProtoReflect.Descriptor instead.
func (*QueryRoleDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{89}
}

func (x *QueryRoleDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryRoleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`         //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`   //创建时间
	DataScope  int32  `protobuf:"varint,3,opt,name=data_scope,json=dataScope,proto3" json:"data_scope,omitempty"`     //数据权限
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                    //编号
	IsAdmin    int32  `protobuf:"varint,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`           //是否超级管理员
	UpdateTime string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`   //更新时间
	Remark     string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                             //备注
	RoleKey    string `protobuf:"bytes,8,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`            //权限字符
	RoleName   string `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`         //角色名称
	RoleSort   int32  `protobuf:"varint,10,opt,name=role_sort,json=roleSort,proto3" json:"role_sort,omitempty"`       //角色排序
	RoleStatus int32  `protobuf:"varint,11,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
	UpdateBy   string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *QueryRoleDetailResp) Reset() {
	*x = QueryRoleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleDetailResp) ProtoMessage() {}

func (x *QueryRoleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleDetailResp.ProtoReflect.Descriptor instead.
func (*QueryRoleDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{90}
}

func (x *QueryRoleDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryRoleDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryRoleDetailResp) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *QueryRoleDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryRoleDetailResp) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *QueryRoleDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *QueryRoleDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryRoleDetailResp) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *QueryRoleDetailResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryRoleDetailResp) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *QueryRoleDetailResp) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

func (x *QueryRoleDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

// 分页查询角色信息表列表
type QueryRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
	IsAdmin    int32  `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`          //是否超级管理员
	RoleKey    string `protobuf:"bytes,4,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`           //权限字符
	RoleName   string `protobuf:"bytes,5,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`        //角色名称
	RoleStatus int32  `protobuf:"varint,6,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
}

func (x *QueryRoleListReq) Reset() {
	*x = QueryRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleListReq) ProtoMessage() {}

func (x *QueryRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{91}
}

func (x *QueryRoleListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryRoleListReq) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *QueryRoleListReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *QueryRoleListReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryRoleListReq) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

type RoleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`         //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`   //创建时间
	DataScope  int32  `protobuf:"varint,3,opt,name=data_scope,json=dataScope,proto3" json:"data_scope,omitempty"`     //数据权限
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                    //编号
	IsAdmin    int32  `protobuf:"varint,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`           //是否超级管理员
	UpdateTime string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`   //更新时间
	Remark     string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                             //备注
	RoleKey    string `protobuf:"bytes,8,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`            //权限字符
	RoleName   string `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`         //角色名称
	RoleSort   int32  `protobuf:"varint,10,opt,name=role_sort,json=roleSort,proto3" json:"role_sort,omitempty"`       //角色排序
	RoleStatus int32  `protobuf:"varint,11,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
	UpdateBy   string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *RoleListData) Reset() {
	*x = RoleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListData) ProtoMessage() {}

func (x *RoleListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListData.ProtoReflect.Descriptor instead.
func (*RoleListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{92}
}

func (x *RoleListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *RoleListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleListData) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *RoleListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleListData) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *RoleListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RoleListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleListData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleListData) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleListData) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *RoleListData) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

func (x *RoleListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryRoleListResp) Reset() {
	*x = QueryRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleListResp) ProtoMessage() {}

func (x *QueryRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{93}
}

func (x *QueryRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryRoleListResp) GetList() []*RoleListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryRoleMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
}

func (x *QueryRoleMenuListReq) Reset() {
	*x = QueryRoleMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListReq) ProtoMessage() {}

func (x *QueryRoleMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{94}
}

func (x *QueryRoleMenuListReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type MenuData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundUrl string `protobuf:"bytes,1,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` //接口地址
	CreateBy      string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建者
	CreateTime    string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          //创建时间
	Id            int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                           //编号
	VueRedirect   string `protobuf:"bytes,5,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       //vue的路由重定向
	MenuIcon      string `protobuf:"bytes,6,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                //菜单图标
	MenuName      string `protobuf:"bytes,7,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                //菜单名称
	MenuPath      string `protobuf:"bytes,8,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                //前端路由
	MenuPerms     string `protobuf:"bytes,9,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`             //权限标识
	MenuSort      int32  `protobuf:"varint,10,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`              //菜单排序
	MenuStatus    int32  `protobuf:"varint,11,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`        //菜单状态
	MenuType      int32  `protobuf:"varint,12,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`              //类型 0：目录,1：菜单,2：按钮,3：外链
	ParentId      int64  `protobuf:"varint,13,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              //父菜单ID，一级菜单为0
	Remark        string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注信息
	UpdateBy      string `protobuf:"bytes,15,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新者
	UpdateTime    string `protobuf:"bytes,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //更新时间
	VueComponent  string `protobuf:"bytes,17,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`   //vue的页面
	VueIcon       string `protobuf:"bytes,18,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                  //vue的图标
	VuePath       string `protobuf:"bytes,19,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                  //vue系统的path
	IsVisible     int32  `protobuf:"varint,20,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`           //是否可见  0：否  1：是
}

func (x *MenuData) Reset() {
	*x = MenuData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuData) ProtoMessage() {}

func (x *MenuData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuData.ProtoReflect.Descriptor instead.
func (*MenuData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{95}
}

func (x *MenuData) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *MenuData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MenuData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MenuData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuData) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *MenuData) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *MenuData) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuData) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *MenuData) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *MenuData) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *MenuData) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *MenuData) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *MenuData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MenuData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MenuData) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuData) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuData) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuData) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

type QueryRoleMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*MenuData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	MenuIds []int64     `protobuf:"varint,2,rep,packed,name=MenuIds,proto3" json:"MenuIds,omitempty"`
}

func (x *QueryRoleMenuListResp) Reset() {
	*x = QueryRoleMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListResp) ProtoMessage() {}

func (x *QueryRoleMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{96}
}

func (x *QueryRoleMenuListResp) GetList() []*MenuData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRoleMenuListResp) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateMenuRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []int64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *UpdateMenuRoleReq) Reset() {
	*x = UpdateMenuRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRoleReq) ProtoMessage() {}

func (x *UpdateMenuRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateMenuRoleReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateMenuRoleReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateMenuRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMenuRoleResp) Reset() {
	*x = UpdateMenuRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRoleResp) ProtoMessage() {}

func (x *UpdateMenuRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{98}
}

func (x *UpdateMenuRoleResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryRoleUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	RoleId   int64  `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`       //角色id
	IsExist  int64  `protobuf:"varint,4,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`    //角色是否已经拥有用户
	Mobile   string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                      //手机号
	UserName string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`  //昵称
}

func (x *QueryRoleUserListReq) Reset() {
	*x = QueryRoleUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleUserListReq) ProtoMessage() {}

func (x *QueryRoleUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleUserListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleUserListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{99}
}

func (x *QueryRoleUserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRoleUserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryRoleUserListReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *QueryRoleUserListReq) GetIsExist() int64 {
	if x != nil {
		return x.IsExist
	}
	return 0
}

func (x *QueryRoleUserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryRoleUserListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar     string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`                            //头像
	CreateBy   string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DeptId     int64  `protobuf:"varint,4,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`             //部门id
	Email      string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                              //邮箱
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	UserStatus int32  `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	LoginIp    string `protobuf:"bytes,8,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`           //登录ip
	LoginTime  string `protobuf:"bytes,9,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`     //登录时间
	Mobile     string `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`                           //手机号
	NickName   string `protobuf:"bytes,11,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`       //昵称
	Remark     string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                           //备注信息
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
	UserName   string `protobuf:"bytes,15,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`       //用户名
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{100}
}

func (x *UserData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserData) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *UserData) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *UserData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type QueryRoleUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UserData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryRoleUserListResp) Reset() {
	*x = QueryRoleUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleUserListResp) ProtoMessage() {}

func (x *QueryRoleUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleUserListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleUserListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{101}
}

func (x *QueryRoleUserListResp) GetList() []*UserData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRoleUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CancelAuthorizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UserIds []int64 `protobuf:"varint,2,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	IsExist int64   `protobuf:"varint,3,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"` //0：取消授权，1：确认授权
}

func (x *CancelAuthorizationReq) Reset() {
	*x = CancelAuthorizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAuthorizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAuthorizationReq) ProtoMessage() {}

func (x *CancelAuthorizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAuthorizationReq.ProtoReflect.Descriptor instead.
func (*CancelAuthorizationReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{102}
}

func (x *CancelAuthorizationReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CancelAuthorizationReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *CancelAuthorizationReq) GetIsExist() int64 {
	if x != nil {
		return x.IsExist
	}
	return 0
}

type CancelAuthorizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *CancelAuthorizationResp) Reset() {
	*x = CancelAuthorizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAuthorizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAuthorizationResp) ProtoMessage() {}

func (x *CancelAuthorizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAuthorizationResp.ProtoReflect.Descriptor instead.
func (*CancelAuthorizationResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{103}
}

func (x *CancelAuthorizationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"` //IP地址
	Os        string `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`                                //操作信息
	Browser   string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`                      //浏览器
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{104}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LoginReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName    string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	AccessToken string   `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ApiUrls     []string `protobuf:"bytes,4,rep,name=ApiUrls,proto3" json:"ApiUrls,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{105}
}

func (x *LoginResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResp) GetApiUrls() []string {
	if x != nil {
		return x.ApiUrls
	}
	return nil
}

type InfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *InfoReq) Reset() {
	*x = InfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReq) ProtoMessage() {}

func (x *InfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReq.ProtoReflect.Descriptor instead.
func (*InfoReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{106}
}

func (x *InfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type MenuListTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon          string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	ParentId      int64  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	ParentName    string `protobuf:"bytes,5,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`
	Permission    string `protobuf:"bytes,6,opt,name=permission,proto3" json:"permission,omitempty"`
	Order         int32  `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	RouteName     string `protobuf:"bytes,8,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	RoutePath     string `protobuf:"bytes,9,opt,name=route_path,json=routePath,proto3" json:"route_path,omitempty"`
	ComponentPath string `protobuf:"bytes,10,opt,name=component_path,json=componentPath,proto3" json:"component_path,omitempty"`
	Redirect      string `protobuf:"bytes,11,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Cache         bool   `protobuf:"varint,12,opt,name=cache,proto3" json:"cache,omitempty"`
	Description   string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Available     bool   `protobuf:"varint,14,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *MenuListTree) Reset() {
	*x = MenuListTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListTree) ProtoMessage() {}

func (x *MenuListTree) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListTree.ProtoReflect.Descriptor instead.
func (*MenuListTree) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{107}
}

func (x *MenuListTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuListTree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListTree) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuListTree) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuListTree) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *MenuListTree) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *MenuListTree) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MenuListTree) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

func (x *MenuListTree) GetRoutePath() string {
	if x != nil {
		return x.RoutePath
	}
	return ""
}

func (x *MenuListTree) GetComponentPath() string {
	if x != nil {
		return x.ComponentPath
	}
	return ""
}

func (x *MenuListTree) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuListTree) GetCache() bool {
	if x != nil {
		return x.Cache
	}
	return false
}

func (x *MenuListTree) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MenuListTree) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type InfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar       string          `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MenuListTree []*MenuListTree `protobuf:"bytes,3,rep,name=menuListTree,proto3" json:"menuListTree,omitempty"` //  repeated string BackgroundUrls = 4;
}

func (x *InfoResp) Reset() {
	*x = InfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResp) ProtoMessage() {}

func (x *InfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResp.ProtoReflect.Descriptor instead.
func (*InfoResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{108}
}

func (x *InfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *InfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoResp) GetMenuListTree() []*MenuListTree {
	if x != nil {
		return x.MenuListTree
	}
	return nil
}

type ReSetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateBy string `protobuf:"bytes,2,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
}

func (x *ReSetPasswordReq) Reset() {
	*x = ReSetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReSetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReSetPasswordReq) ProtoMessage() {}

func (x *ReSetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReSetPasswordReq.ProtoReflect.Descriptor instead.
func (*ReSetPasswordReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{109}
}

func (x *ReSetPasswordReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReSetPasswordReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type ReSetPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ReSetPasswordResp) Reset() {
	*x = ReSetPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReSetPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReSetPasswordResp) ProtoMessage() {}

func (x *ReSetPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReSetPasswordResp.ProtoReflect.Descriptor instead.
func (*ReSetPasswordResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{110}
}

func (x *ReSetPasswordResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 添加用户信息表
type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar     string  `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`                             //头像
	CreateBy   string  `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`         //创建者
	DeptId     int64   `protobuf:"varint,3,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`              //部门id
	Email      string  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                               //邮箱
	Mobile     string  `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                             //手机号
	NickName   string  `protobuf:"bytes,6,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`         //昵称
	Remark     string  `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`                             //备注信息
	UserName   string  `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`         //用户名
	UserStatus int32   `protobuf:"varint,10,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	PostIds    []int64 `protobuf:"varint,11,rep,packed,name=PostIds,proto3" json:"PostIds,omitempty"`                  //岗位ids
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{111}
}

func (x *AddUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AddUserReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *AddUserReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *AddUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AddUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AddUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *AddUserReq) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

type AddUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddUserResp) Reset() {
	*x = AddUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResp) ProtoMessage() {}

func (x *AddUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResp.ProtoReflect.Descriptor instead.
func (*AddUserResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{112}
}

func (x *AddUserResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户信息表
type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{113}
}

func (x *DeleteUserReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteUserResp) Reset() {
	*x = DeleteUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResp) ProtoMessage() {}

func (x *DeleteUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResp.ProtoReflect.Descriptor instead.
func (*DeleteUserResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{114}
}

func (x *DeleteUserResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户信息表
type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar     string  `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`                             //头像
	DeptId     int64   `protobuf:"varint,2,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`              //部门id
	Email      string  `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                               //邮箱
	Id         int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                    //编号
	Mobile     string  `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                             //手机号
	NickName   string  `protobuf:"bytes,6,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`         //昵称
	Password   string  `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`                         //密码
	Remark     string  `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`                             //备注信息
	UpdateBy   string  `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`         //更新者
	UserName   string  `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`        //用户名
	UserStatus int32   `protobuf:"varint,11,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	PostIds    []int64 `protobuf:"varint,12,rep,packed,name=PostIds,proto3" json:"PostIds,omitempty"`                  //岗位ids
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{115}
}

func (x *UpdateUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateUserReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateUserReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UpdateUserReq) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

type UpdateUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateUserResp) Reset() {
	*x = UpdateUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResp) ProtoMessage() {}

func (x *UpdateUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResp.ProtoReflect.Descriptor instead.
func (*UpdateUserResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{116}
}

func (x *UpdateUserResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户信息表状态
type UpdateUserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                          //编号
	UserStatus int32   `protobuf:"varint,2,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	UpdateBy   string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *UpdateUserStatusReq) Reset() {
	*x = UpdateUserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusReq) ProtoMessage() {}

func (x *UpdateUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{117}
}

func (x *UpdateUserStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateUserStatusReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UpdateUserStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateUserStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateUserStatusResp) Reset() {
	*x = UpdateUserStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusResp) ProtoMessage() {}

func (x *UpdateUserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{118}
}

func (x *UpdateUserStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户信息表详情
type QueryUserDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryUserDetailReq) Reset() {
	*x = QueryUserDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserDetailReq) ProtoMessage() {}

func (x *QueryUserDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserDetailReq.ProtoReflect.Descriptor instead.
func (*QueryUserDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{119}
}

func (x *QueryUserDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryUserDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar     string  `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`                            //头像
	CreateBy   string  `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string  `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DeptId     int64   `protobuf:"varint,4,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`             //部门id
	Email      string  `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                              //邮箱
	Id         int64   `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	UserStatus int32   `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	LoginIp    string  `protobuf:"bytes,8,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`           //登录ip
	LoginTime  string  `protobuf:"bytes,9,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`     //登录时间
	Mobile     string  `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`                           //手机号
	NickName   string  `protobuf:"bytes,11,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`       //昵称
	Remark     string  `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                           //备注信息
	UpdateBy   string  `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string  `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
	UserName   string  `protobuf:"bytes,15,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`       //用户名
	PostIds    []int64 `protobuf:"varint,16,rep,packed,name=PostIds,proto3" json:"PostIds,omitempty"`                 //岗位ids
}

func (x *QueryUserDetailResp) Reset() {
	*x = QueryUserDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserDetailResp) ProtoMessage() {}

func (x *QueryUserDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserDetailResp.ProtoReflect.Descriptor instead.
func (*QueryUserDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{120}
}

func (x *QueryUserDetailResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryUserDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryUserDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryUserDetailResp) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *QueryUserDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryUserDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryUserDetailResp) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *QueryUserDetailResp) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QueryUserDetailResp) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *QueryUserDetailResp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryUserDetailResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *QueryUserDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryUserDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryUserDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *QueryUserDetailResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryUserDetailResp) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

// 分页查询用户信息表列表
type QueryUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
	DeptId     int64  `protobuf:"varint,3,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`             //部门id
	Email      string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                              //邮箱
	Mobile     string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                            //手机号
	NickName   string `protobuf:"bytes,6,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`        //昵称
	UserStatus int32  `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
}

func (x *QueryUserListReq) Reset() {
	*x = QueryUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListReq) ProtoMessage() {}

func (x *QueryUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListReq.ProtoReflect.Descriptor instead.
func (*QueryUserListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{121}
}

func (x *QueryUserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryUserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryUserListReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *QueryUserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryUserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryUserListReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *QueryUserListReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

type UserListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar     string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`                            //头像
	CreateBy   string `protobuf:"bytes,2,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	DeptId     int64  `protobuf:"varint,4,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`             //部门id
	Email      string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                              //邮箱
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	UserStatus int32  `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //帐号状态（0正常 1停用）
	LoginIp    string `protobuf:"bytes,8,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`           //登录ip
	LoginTime  string `protobuf:"bytes,9,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`     //登录时间
	Mobile     string `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`                           //手机号
	NickName   string `protobuf:"bytes,11,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`       //昵称
	Remark     string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                           //备注信息
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
	UserName   string `protobuf:"bytes,15,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`       //用户名
}

func (x *UserListData) Reset() {
	*x = UserListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListData) ProtoMessage() {}

func (x *UserListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListData.ProtoReflect.Descriptor instead.
func (*UserListData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{122}
}

func (x *UserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserListData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserListData) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserListData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *UserListData) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *UserListData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserListData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type QueryUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryUserListResp) Reset() {
	*x = QueryUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListResp) ProtoMessage() {}

func (x *QueryUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListResp.ProtoReflect.Descriptor instead.
func (*QueryUserListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{123}
}

func (x *QueryUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryUserListResp) GetList() []*UserListData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUserRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleIds []int64 `protobuf:"varint,2,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *UpdateUserRoleListReq) Reset() {
	*x = UpdateUserRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleListReq) ProtoMessage() {}

func (x *UpdateUserRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleListReq.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateUserRoleListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserRoleListReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UpdateUserRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateUserRoleListResp) Reset() {
	*x = UpdateUserRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleListResp) ProtoMessage() {}

func (x *UpdateUserRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleListResp.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{125}
}

func (x *UpdateUserRoleListResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryUserRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserId   int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *QueryUserRoleListReq) Reset() {
	*x = QueryUserRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRoleListReq) ProtoMessage() {}

func (x *QueryUserRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRoleListReq.ProtoReflect.Descriptor instead.
func (*QueryUserRoleListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{126}
}

func (x *QueryUserRoleListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *QueryUserRoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryUserRoleListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`         //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`   //创建时间
	DataScope  int32  `protobuf:"varint,3,opt,name=data_scope,json=dataScope,proto3" json:"data_scope,omitempty"`     //数据权限
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                    //编号
	IsAdmin    int32  `protobuf:"varint,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`           //是否超级管理员
	UpdateTime string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`   //更新时间
	Remark     string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                             //备注
	RoleKey    string `protobuf:"bytes,8,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`            //权限字符
	RoleName   string `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`         //角色名称
	RoleSort   int32  `protobuf:"varint,10,opt,name=role_sort,json=roleSort,proto3" json:"role_sort,omitempty"`       //角色排序
	RoleStatus int32  `protobuf:"varint,11,opt,name=role_status,json=roleStatus,proto3" json:"role_status,omitempty"` //角色状态
	UpdateBy   string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`        //更新者
}

func (x *RoleData) Reset() {
	*x = RoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleData) ProtoMessage() {}

func (x *RoleData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleData.ProtoReflect.Descriptor instead.
func (*RoleData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{127}
}

func (x *RoleData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *RoleData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleData) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *RoleData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleData) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *RoleData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RoleData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleData) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleData) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *RoleData) GetRoleStatus() int32 {
	if x != nil {
		return x.RoleStatus
	}
	return 0
}

func (x *RoleData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryUserRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*RoleData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	RoleIds []int64     `protobuf:"varint,2,rep,packed,name=RoleIds,proto3" json:"RoleIds,omitempty"`
	Total   int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryUserRoleListResp) Reset() {
	*x = QueryUserRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRoleListResp) ProtoMessage() {}

func (x *QueryUserRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRoleListResp.ProtoReflect.Descriptor instead.
func (*QueryUserRoleListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{128}
}

func (x *QueryUserRoleListResp) GetList() []*RoleData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryUserRoleListResp) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *QueryUserRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryDeptAndPostListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryDeptAndPostListReq) Reset() {
	*x = QueryDeptAndPostListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptAndPostListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptAndPostListReq) ProtoMessage() {}

func (x *QueryDeptAndPostListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptAndPostListReq.ProtoReflect.Descriptor instead.
func (*QueryDeptAndPostListReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{129}
}

type QueryDeptAndPostListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptListData []*DeptData `protobuf:"bytes,1,rep,name=dept_list_data,json=deptListData,proto3" json:"dept_list_data,omitempty"`
	PostListData []*PostData `protobuf:"bytes,2,rep,name=post_list_data,json=postListData,proto3" json:"post_list_data,omitempty"`
}

func (x *QueryDeptAndPostListResp) Reset() {
	*x = QueryDeptAndPostListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptAndPostListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptAndPostListResp) ProtoMessage() {}

func (x *QueryDeptAndPostListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptAndPostListResp.ProtoReflect.Descriptor instead.
func (*QueryDeptAndPostListResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{130}
}

func (x *QueryDeptAndPostListResp) GetDeptListData() []*DeptData {
	if x != nil {
		return x.DeptListData
	}
	return nil
}

func (x *QueryDeptAndPostListResp) GetPostListData() []*PostData {
	if x != nil {
		return x.PostListData
	}
	return nil
}

type DeptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string  `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建者
	CreateTime string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`       //创建时间
	DeptName   string  `protobuf:"bytes,3,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`             //部门名称
	DeptSort   int32   `protobuf:"varint,4,opt,name=dept_sort,json=deptSort,proto3" json:"dept_sort,omitempty"`            //部门排序
	DeptStatus int32   `protobuf:"varint,5,opt,name=dept_status,json=deptStatus,proto3" json:"dept_status,omitempty"`      //部门状态
	Email      string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                                   //邮箱
	Id         int64   `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                        //编号
	Leader     string  `protobuf:"bytes,9,opt,name=leader,proto3" json:"leader,omitempty"`                                 //负责人
	ParentId   int64   `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`           //上级机构ID，一级机构为0
	ParentIds  []int64 `protobuf:"varint,11,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"` //上级机构IDs，一级机构为0
	Phone      string  `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`                                  //电话号码
	Remark     string  `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                //备注信息
	UpdateBy   string  `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`            //更新者
	UpdateTime string  `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`      //更新时间
}

func (x *DeptData) Reset() {
	*x = DeptData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptData) ProtoMessage() {}

func (x *DeptData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptData.ProtoReflect.Descriptor instead.
func (*DeptData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{131}
}

func (x *DeptData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DeptData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DeptData) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptData) GetDeptSort() int32 {
	if x != nil {
		return x.DeptSort
	}
	return 0
}

func (x *DeptData) GetDeptStatus() int32 {
	if x != nil {
		return x.DeptStatus
	}
	return 0
}

func (x *DeptData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptData) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptData) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *DeptData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DeptData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DeptData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type PostData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`        //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`  //创建时间
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                   //编号
	PostCode   string `protobuf:"bytes,5,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`        //岗位编码
	PostName   string `protobuf:"bytes,6,opt,name=post_name,json=postName,proto3" json:"post_name,omitempty"`        //岗位名称
	PostSort   int32  `protobuf:"varint,7,opt,name=post_sort,json=postSort,proto3" json:"post_sort,omitempty"`       //岗位排序
	PostStatus int32  `protobuf:"varint,8,opt,name=post_status,json=postStatus,proto3" json:"post_status,omitempty"` //岗位状态
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                            //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`       //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *PostData) Reset() {
	*x = PostData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostData) ProtoMessage() {}

func (x *PostData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostData.ProtoReflect.Descriptor instead.
func (*PostData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{132}
}

func (x *PostData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PostData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PostData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostData) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostData) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostData) GetPostSort() int32 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *PostData) GetPostStatus() int32 {
	if x != nil {
		return x.PostStatus
	}
	return 0
}

func (x *PostData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PostData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PostData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ProfileReq) Reset() {
	*x = ProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReq) ProtoMessage() {}

func (x *ProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReq.ProtoReflect.Descriptor instead.
func (*ProfileReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{133}
}

func (x *ProfileReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ProfileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone    string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ProfileResp) Reset() {
	*x = ProfileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileResp) ProtoMessage() {}

func (x *ProfileResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileResp.ProtoReflect.Descriptor instead.
func (*ProfileResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{134}
}

func (x *ProfileResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ProfileResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProfileResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ProfileResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProfileResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ProfileResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UserMenusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserMenusReq) Reset() {
	*x = UserMenusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMenusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMenusReq) ProtoMessage() {}

func (x *UserMenusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMenusReq.ProtoReflect.Descriptor instead.
func (*UserMenusReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{135}
}

func (x *UserMenusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater     string `protobuf:"bytes,2,opt,name=updater,proto3" json:"updater,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Permission  string `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"`
	Type        int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Icon        string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	OrderNo     int32  `protobuf:"varint,7,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
	Component   string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	IsExt       bool   `protobuf:"varint,9,opt,name=isExt,proto3" json:"isExt,omitempty"`
	ExtOpenMode int32  `protobuf:"varint,10,opt,name=extOpenMode,proto3" json:"extOpenMode,omitempty"`
	KeepAlive   int32  `protobuf:"varint,11,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`
	Show        int32  `protobuf:"varint,12,opt,name=show,proto3" json:"show,omitempty"`
	ActiveMenu  string `protobuf:"bytes,13,opt,name=activeMenu,proto3" json:"activeMenu,omitempty"`
	Status      int32  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{136}
}

func (x *Meta) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Meta) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

func (x *Meta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Meta) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *Meta) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Meta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Meta) GetOrderNo() int32 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *Meta) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Meta) GetIsExt() bool {
	if x != nil {
		return x.IsExt
	}
	return false
}

func (x *Meta) GetExtOpenMode() int32 {
	if x != nil {
		return x.ExtOpenMode
	}
	return 0
}

func (x *Meta) GetKeepAlive() int32 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *Meta) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *Meta) GetActiveMenu() string {
	if x != nil {
		return x.ActiveMenu
	}
	return ""
}

func (x *Meta) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UserMenusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            // 编号
	MenuName      string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                 // 菜单名称
	ParentId      int64  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`                // 父菜单ID，一级菜单为0
	MenuPath      string `protobuf:"bytes,4,opt,name=menu_path,json=menuPath,proto3" json:"menu_path,omitempty"`                 // 前端路由
	MenuPerms     string `protobuf:"bytes,5,opt,name=menu_perms,json=menuPerms,proto3" json:"menu_perms,omitempty"`              // 权限标识
	MenuType      int32  `protobuf:"varint,6,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`                // 类型 0：目录,1：菜单,2：按钮,3：外链
	MenuIcon      string `protobuf:"bytes,7,opt,name=menu_icon,json=menuIcon,proto3" json:"menu_icon,omitempty"`                 // 菜单图标
	MenuSort      int32  `protobuf:"varint,8,opt,name=menu_sort,json=menuSort,proto3" json:"menu_sort,omitempty"`                // 菜单排序
	CreateBy      string `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                 // 创建者
	CreateTime    string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          // 创建时间
	UpdateBy      string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                // 更新者
	UpdateTime    string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`          // 更新时间（字符串类型）
	MenuStatus    int32  `protobuf:"varint,13,opt,name=menu_status,json=menuStatus,proto3" json:"menu_status,omitempty"`         // 菜单状态
	IsDeleted     int32  `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`            // 是否删除 0：否 1：是
	IsVisible     int32  `protobuf:"varint,15,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`            // 是否可见 0：否 1：是
	Remark        string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`                                    // 备注信息
	VuePath       string `protobuf:"bytes,17,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`                   // vue系统的path
	VueComponent  string `protobuf:"bytes,18,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`    // vue的页面
	VueIcon       string `protobuf:"bytes,19,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`                   // vue的图标
	VueRedirect   string `protobuf:"bytes,20,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`       // vue的路由重定向
	BackgroundUrl string `protobuf:"bytes,21,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"` // 接口地址
}

func (x *UserMenusData) Reset() {
	*x = UserMenusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMenusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMenusData) ProtoMessage() {}

func (x *UserMenusData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMenusData.ProtoReflect.Descriptor instead.
func (*UserMenusData) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{137}
}

func (x *UserMenusData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMenusData) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *UserMenusData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UserMenusData) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *UserMenusData) GetMenuPerms() string {
	if x != nil {
		return x.MenuPerms
	}
	return ""
}

func (x *UserMenusData) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *UserMenusData) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *UserMenusData) GetMenuSort() int32 {
	if x != nil {
		return x.MenuSort
	}
	return 0
}

func (x *UserMenusData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserMenusData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserMenusData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserMenusData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserMenusData) GetMenuStatus() int32 {
	if x != nil {
		return x.MenuStatus
	}
	return 0
}

func (x *UserMenusData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

func (x *UserMenusData) GetIsVisible() int32 {
	if x != nil {
		return x.IsVisible
	}
	return 0
}

func (x *UserMenusData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserMenusData) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *UserMenusData) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *UserMenusData) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *UserMenusData) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *UserMenusData) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

type UserMenusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMenuData []*UserMenusData `protobuf:"bytes,1,rep,name=userMenuData,proto3" json:"userMenuData,omitempty"`
}

func (x *UserMenusResp) Reset() {
	*x = UserMenusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMenusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMenusResp) ProtoMessage() {}

func (x *UserMenusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMenusResp.ProtoReflect.Descriptor instead.
func (*UserMenusResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{138}
}

func (x *UserMenusResp) GetUserMenuData() []*UserMenusData {
	if x != nil {
		return x.UserMenuData
	}
	return nil
}

type UserPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserPermissionReq) Reset() {
	*x = UserPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionReq) ProtoMessage() {}

func (x *UserPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionReq.ProtoReflect.Descriptor instead.
func (*UserPermissionReq) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{139}
}

func (x *UserPermissionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission []string `protobuf:"bytes,1,rep,name=permission,proto3" json:"permission,omitempty"`
}

func (x *UserPermissionResp) Reset() {
	*x = UserPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_sys_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionResp) ProtoMessage() {}

func (x *UserPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_sys_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionResp.ProtoReflect.Descriptor instead.
func (*UserPermissionResp) Descriptor() ([]byte, []int) {
	return file_sys_sys_proto_rawDescGZIP(), []int{140}
}

func (x *UserPermissionResp) GetPermission() []string {
	if x != nil {
		return x.Permission
	}
	return nil
}

var File_sys_sys_proto protoreflect.FileDescriptor

var file_sys_sys_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x9c, 0x02, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xaf, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x65, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x24, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65,
	0x70, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x22, 0x8d, 0x03, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x90, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x69,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xee, 0x02, 0x0a, 0x10, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0xd0, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x69, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xae, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xee, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0xd7, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe7, 0x01, 0x0a,
	0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x5e, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf3, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x75, 0x65,
	0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x75, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x21, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x86, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72,
	0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x22, 0x24, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2a,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x24, 0x0a, 0x12, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xeb, 0x04, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e,
	0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x22, 0xe4, 0x04, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xdc, 0x03, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x22, 0x27, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2a,
	0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8c, 0x04, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x22, 0xee, 0x02, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x70, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x22, 0x85, 0x04, 0x0a, 0x12, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x22, 0x62, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xcc,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x24, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x24, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb1, 0x02, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x0c, 0x50, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf1, 0x01,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x84, 0x02,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x22, 0x2a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x24, 0x0a,
	0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xe9, 0x02, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0xbe, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xe2, 0x02, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xe0, 0x04,
	0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x75, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x22, 0x5a, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb7, 0x01,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x15,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x17, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x21, 0x0a, 0x07, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91,
	0x03, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x73, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x6d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x22, 0x3f, 0x0a, 0x10, 0x52, 0x65, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x52, 0x65, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x95, 0x02, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xc4, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x65, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x24, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x03, 0x0a, 0x13,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x64, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x70, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x70, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a,
	0x0e, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89, 0x03, 0x0a, 0x08, 0x44, 0x65, 0x70,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x24, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x26, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xf2, 0x02, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65,
	0x78, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x05, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75, 0x65, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x4d, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xcc, 0x03,
	0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x18, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x98, 0x04, 0x0a,
	0x0f, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x46, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x98, 0x04, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x21, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x32, 0x9c, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xcc, 0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x32, 0xfe, 0x02, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xcc, 0x03, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x32, 0xad, 0x06, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x32, 0xe3, 0x08, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x70, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x70, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_sys_proto_rawDescOnce sync.Once
	file_sys_sys_proto_rawDescData = file_sys_sys_proto_rawDesc
)

func file_sys_sys_proto_rawDescGZIP() []byte {
	file_sys_sys_proto_rawDescOnce.Do(func() {
		file_sys_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_sys_proto_rawDescData)
	})
	return file_sys_sys_proto_rawDescData
}

var file_sys_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 141)
var file_sys_sys_proto_goTypes = []any{
	(*AddDeptReq)(nil),                // 0: sysclient.AddDeptReq
	(*AddDeptResp)(nil),               // 1: sysclient.AddDeptResp
	(*DeleteDeptReq)(nil),             // 2: sysclient.DeleteDeptReq
	(*DeleteDeptResp)(nil),            // 3: sysclient.DeleteDeptResp
	(*UpdateDeptReq)(nil),             // 4: sysclient.UpdateDeptReq
	(*UpdateDeptResp)(nil),            // 5: sysclient.UpdateDeptResp
	(*UpdateDeptStatusReq)(nil),       // 6: sysclient.UpdateDeptStatusReq
	(*UpdateDeptStatusResp)(nil),      // 7: sysclient.UpdateDeptStatusResp
	(*QueryDeptDetailReq)(nil),        // 8: sysclient.QueryDeptDetailReq
	(*QueryDeptDetailResp)(nil),       // 9: sysclient.QueryDeptDetailResp
	(*QueryDeptListReq)(nil),          // 10: sysclient.QueryDeptListReq
	(*DeptListData)(nil),              // 11: sysclient.DeptListData
	(*QueryDeptListResp)(nil),         // 12: sysclient.QueryDeptListResp
	(*AddDictItemReq)(nil),            // 13: sysclient.AddDictItemReq
	(*AddDictItemResp)(nil),           // 14: sysclient.AddDictItemResp
	(*DeleteDictItemReq)(nil),         // 15: sysclient.DeleteDictItemReq
	(*DeleteDictItemResp)(nil),        // 16: sysclient.DeleteDictItemResp
	(*UpdateDictItemReq)(nil),         // 17: sysclient.UpdateDictItemReq
	(*UpdateDictItemResp)(nil),        // 18: sysclient.UpdateDictItemResp
	(*UpdateDictItemStatusReq)(nil),   // 19: sysclient.UpdateDictItemStatusReq
	(*UpdateDictItemStatusResp)(nil),  // 20: sysclient.UpdateDictItemStatusResp
	(*QueryDictItemDetailReq)(nil),    // 21: sysclient.QueryDictItemDetailReq
	(*QueryDictItemDetailResp)(nil),   // 22: sysclient.QueryDictItemDetailResp
	(*QueryDictItemListReq)(nil),      // 23: sysclient.QueryDictItemListReq
	(*DictItemListData)(nil),          // 24: sysclient.DictItemListData
	(*QueryDictItemListResp)(nil),     // 25: sysclient.QueryDictItemListResp
	(*AddDictTypeReq)(nil),            // 26: sysclient.AddDictTypeReq
	(*AddDictTypeResp)(nil),           // 27: sysclient.AddDictTypeResp
	(*DeleteDictTypeReq)(nil),         // 28: sysclient.DeleteDictTypeReq
	(*DeleteDictTypeResp)(nil),        // 29: sysclient.DeleteDictTypeResp
	(*UpdateDictTypeReq)(nil),         // 30: sysclient.UpdateDictTypeReq
	(*UpdateDictTypeResp)(nil),        // 31: sysclient.UpdateDictTypeResp
	(*UpdateDictTypeStatusReq)(nil),   // 32: sysclient.UpdateDictTypeStatusReq
	(*UpdateDictTypeStatusResp)(nil),  // 33: sysclient.UpdateDictTypeStatusResp
	(*QueryDictTypeDetailReq)(nil),    // 34: sysclient.QueryDictTypeDetailReq
	(*QueryDictTypeDetailResp)(nil),   // 35: sysclient.QueryDictTypeDetailResp
	(*QueryDictTypeListReq)(nil),      // 36: sysclient.QueryDictTypeListReq
	(*DictTypeListData)(nil),          // 37: sysclient.DictTypeListData
	(*QueryDictTypeListResp)(nil),     // 38: sysclient.QueryDictTypeListResp
	(*DeleteLoginLogReq)(nil),         // 39: sysclient.DeleteLoginLogReq
	(*DeleteLoginLogResp)(nil),        // 40: sysclient.DeleteLoginLogResp
	(*QueryLoginLogDetailReq)(nil),    // 41: sysclient.QueryLoginLogDetailReq
	(*QueryLoginLogDetailResp)(nil),   // 42: sysclient.QueryLoginLogDetailResp
	(*QueryLoginLogListReq)(nil),      // 43: sysclient.QueryLoginLogListReq
	(*LoginLogListData)(nil),          // 44: sysclient.LoginLogListData
	(*QueryLoginLogListResp)(nil),     // 45: sysclient.QueryLoginLogListResp
	(*AddMenuReq)(nil),                // 46: sysclient.AddMenuReq
	(*AddMenuResp)(nil),               // 47: sysclient.AddMenuResp
	(*DeleteMenuReq)(nil),             // 48: sysclient.DeleteMenuReq
	(*DeleteMenuResp)(nil),            // 49: sysclient.DeleteMenuResp
	(*UpdateMenuReq)(nil),             // 50: sysclient.UpdateMenuReq
	(*UpdateMenuResp)(nil),            // 51: sysclient.UpdateMenuResp
	(*UpdateMenuStatusReq)(nil),       // 52: sysclient.UpdateMenuStatusReq
	(*UpdateMenuStatusResp)(nil),      // 53: sysclient.UpdateMenuStatusResp
	(*QueryMenuDetailReq)(nil),        // 54: sysclient.QueryMenuDetailReq
	(*QueryMenuDetailResp)(nil),       // 55: sysclient.QueryMenuDetailResp
	(*QueryMenuListReq)(nil),          // 56: sysclient.QueryMenuListReq
	(*MenuListData)(nil),              // 57: sysclient.MenuListData
	(*QueryMenuListResp)(nil),         // 58: sysclient.QueryMenuListResp
	(*AddOperateLogReq)(nil),          // 59: sysclient.AddOperateLogReq
	(*AddOperateLogResp)(nil),         // 60: sysclient.AddOperateLogResp
	(*DeleteOperateLogReq)(nil),       // 61: sysclient.DeleteOperateLogReq
	(*DeleteOperateLogResp)(nil),      // 62: sysclient.DeleteOperateLogResp
	(*QueryOperateLogDetailReq)(nil),  // 63: sysclient.QueryOperateLogDetailReq
	(*QueryOperateLogDetailResp)(nil), // 64: sysclient.QueryOperateLogDetailResp
	(*QueryOperateLogListReq)(nil),    // 65: sysclient.QueryOperateLogListReq
	(*OperateLogListData)(nil),        // 66: sysclient.OperateLogListData
	(*QueryOperateLogListResp)(nil),   // 67: sysclient.QueryOperateLogListResp
	(*AddPostReq)(nil),                // 68: sysclient.AddPostReq
	(*AddPostResp)(nil),               // 69: sysclient.AddPostResp
	(*DeletePostReq)(nil),             // 70: sysclient.DeletePostReq
	(*DeletePostResp)(nil),            // 71: sysclient.DeletePostResp
	(*UpdatePostReq)(nil),             // 72: sysclient.UpdatePostReq
	(*UpdatePostResp)(nil),            // 73: sysclient.UpdatePostResp
	(*UpdatePostStatusReq)(nil),       // 74: sysclient.UpdatePostStatusReq
	(*UpdatePostStatusResp)(nil),      // 75: sysclient.UpdatePostStatusResp
	(*QueryPostDetailReq)(nil),        // 76: sysclient.QueryPostDetailReq
	(*QueryPostDetailResp)(nil),       // 77: sysclient.QueryPostDetailResp
	(*QueryPostListReq)(nil),          // 78: sysclient.QueryPostListReq
	(*PostListData)(nil),              // 79: sysclient.PostListData
	(*QueryPostListResp)(nil),         // 80: sysclient.QueryPostListResp
	(*AddRoleReq)(nil),                // 81: sysclient.AddRoleReq
	(*AddRoleResp)(nil),               // 82: sysclient.AddRoleResp
	(*DeleteRoleReq)(nil),             // 83: sysclient.DeleteRoleReq
	(*DeleteRoleResp)(nil),            // 84: sysclient.DeleteRoleResp
	(*UpdateRoleReq)(nil),             // 85: sysclient.UpdateRoleReq
	(*UpdateRoleResp)(nil),            // 86: sysclient.UpdateRoleResp
	(*UpdateRoleStatusReq)(nil),       // 87: sysclient.UpdateRoleStatusReq
	(*UpdateRoleStatusResp)(nil),      // 88: sysclient.UpdateRoleStatusResp
	(*QueryRoleDetailReq)(nil),        // 89: sysclient.QueryRoleDetailReq
	(*QueryRoleDetailResp)(nil),       // 90: sysclient.QueryRoleDetailResp
	(*QueryRoleListReq)(nil),          // 91: sysclient.QueryRoleListReq
	(*RoleListData)(nil),              // 92: sysclient.RoleListData
	(*QueryRoleListResp)(nil),         // 93: sysclient.QueryRoleListResp
	(*QueryRoleMenuListReq)(nil),      // 94: sysclient.QueryRoleMenuListReq
	(*MenuData)(nil),                  // 95: sysclient.MenuData
	(*QueryRoleMenuListResp)(nil),     // 96: sysclient.QueryRoleMenuListResp
	(*UpdateMenuRoleReq)(nil),         // 97: sysclient.UpdateMenuRoleReq
	(*UpdateMenuRoleResp)(nil),        // 98: sysclient.UpdateMenuRoleResp
	(*QueryRoleUserListReq)(nil),      // 99: sysclient.QueryRoleUserListReq
	(*UserData)(nil),                  // 100: sysclient.UserData
	(*QueryRoleUserListResp)(nil),     // 101: sysclient.QueryRoleUserListResp
	(*CancelAuthorizationReq)(nil),    // 102: sysclient.CancelAuthorizationReq
	(*CancelAuthorizationResp)(nil),   // 103: sysclient.CancelAuthorizationResp
	(*LoginReq)(nil),                  // 104: sysclient.LoginReq
	(*LoginResp)(nil),                 // 105: sysclient.loginResp
	(*InfoReq)(nil),                   // 106: sysclient.InfoReq
	(*MenuListTree)(nil),              // 107: sysclient.MenuListTree
	(*InfoResp)(nil),                  // 108: sysclient.InfoResp
	(*ReSetPasswordReq)(nil),          // 109: sysclient.ReSetPasswordReq
	(*ReSetPasswordResp)(nil),         // 110: sysclient.ReSetPasswordResp
	(*AddUserReq)(nil),                // 111: sysclient.AddUserReq
	(*AddUserResp)(nil),               // 112: sysclient.AddUserResp
	(*DeleteUserReq)(nil),             // 113: sysclient.DeleteUserReq
	(*DeleteUserResp)(nil),            // 114: sysclient.DeleteUserResp
	(*UpdateUserReq)(nil),             // 115: sysclient.UpdateUserReq
	(*UpdateUserResp)(nil),            // 116: sysclient.UpdateUserResp
	(*UpdateUserStatusReq)(nil),       // 117: sysclient.UpdateUserStatusReq
	(*UpdateUserStatusResp)(nil),      // 118: sysclient.UpdateUserStatusResp
	(*QueryUserDetailReq)(nil),        // 119: sysclient.QueryUserDetailReq
	(*QueryUserDetailResp)(nil),       // 120: sysclient.QueryUserDetailResp
	(*QueryUserListReq)(nil),          // 121: sysclient.QueryUserListReq
	(*UserListData)(nil),              // 122: sysclient.UserListData
	(*QueryUserListResp)(nil),         // 123: sysclient.QueryUserListResp
	(*UpdateUserRoleListReq)(nil),     // 124: sysclient.UpdateUserRoleListReq
	(*UpdateUserRoleListResp)(nil),    // 125: sysclient.UpdateUserRoleListResp
	(*QueryUserRoleListReq)(nil),      // 126: sysclient.QueryUserRoleListReq
	(*RoleData)(nil),                  // 127: sysclient.RoleData
	(*QueryUserRoleListResp)(nil),     // 128: sysclient.QueryUserRoleListResp
	(*QueryDeptAndPostListReq)(nil),   // 129: sysclient.QueryDeptAndPostListReq
	(*QueryDeptAndPostListResp)(nil),  // 130: sysclient.QueryDeptAndPostListResp
	(*DeptData)(nil),                  // 131: sysclient.DeptData
	(*PostData)(nil),                  // 132: sysclient.PostData
	(*ProfileReq)(nil),                // 133: sysclient.ProfileReq
	(*ProfileResp)(nil),               // 134: sysclient.ProfileResp
	(*UserMenusReq)(nil),              // 135: sysclient.UserMenusReq
	(*Meta)(nil),                      // 136: sysclient.Meta
	(*UserMenusData)(nil),             // 137: sysclient.UserMenusData
	(*UserMenusResp)(nil),             // 138: sysclient.UserMenusResp
	(*UserPermissionReq)(nil),         // 139: sysclient.UserPermissionReq
	(*UserPermissionResp)(nil),        // 140: sysclient.UserPermissionResp
}
var file_sys_sys_proto_depIdxs = []int32{
	11,  // 0: sysclient.QueryDeptListResp.list:type_name -> sysclient.DeptListData
	24,  // 1: sysclient.QueryDictItemListResp.list:type_name -> sysclient.DictItemListData
	37,  // 2: sysclient.QueryDictTypeListResp.list:type_name -> sysclient.DictTypeListData
	44,  // 3: sysclient.QueryLoginLogListResp.list:type_name -> sysclient.LoginLogListData
	57,  // 4: sysclient.QueryMenuListResp.list:type_name -> sysclient.MenuListData
	66,  // 5: sysclient.QueryOperateLogListResp.list:type_name -> sysclient.OperateLogListData
	79,  // 6: sysclient.QueryPostListResp.list:type_name -> sysclient.PostListData
	92,  // 7: sysclient.QueryRoleListResp.list:type_name -> sysclient.RoleListData
	95,  // 8: sysclient.QueryRoleMenuListResp.list:type_name -> sysclient.MenuData
	100, // 9: sysclient.QueryRoleUserListResp.list:type_name -> sysclient.UserData
	107, // 10: sysclient.InfoResp.menuListTree:type_name -> sysclient.MenuListTree
	122, // 11: sysclient.QueryUserListResp.list:type_name -> sysclient.UserListData
	127, // 12: sysclient.QueryUserRoleListResp.list:type_name -> sysclient.RoleData
	131, // 13: sysclient.QueryDeptAndPostListResp.dept_list_data:type_name -> sysclient.DeptData
	132, // 14: sysclient.QueryDeptAndPostListResp.post_list_data:type_name -> sysclient.PostData
	137, // 15: sysclient.UserMenusResp.userMenuData:type_name -> sysclient.UserMenusData
	0,   // 16: sysclient.DeptService.AddDept:input_type -> sysclient.AddDeptReq
	2,   // 17: sysclient.DeptService.DeleteDept:input_type -> sysclient.DeleteDeptReq
	4,   // 18: sysclient.DeptService.UpdateDept:input_type -> sysclient.UpdateDeptReq
	6,   // 19: sysclient.DeptService.UpdateDeptStatus:input_type -> sysclient.UpdateDeptStatusReq
	8,   // 20: sysclient.DeptService.QueryDeptDetail:input_type -> sysclient.QueryDeptDetailReq
	10,  // 21: sysclient.DeptService.QueryDeptList:input_type -> sysclient.QueryDeptListReq
	13,  // 22: sysclient.DictItemService.AddDictItem:input_type -> sysclient.AddDictItemReq
	15,  // 23: sysclient.DictItemService.DeleteDictItem:input_type -> sysclient.DeleteDictItemReq
	17,  // 24: sysclient.DictItemService.UpdateDictItem:input_type -> sysclient.UpdateDictItemReq
	19,  // 25: sysclient.DictItemService.UpdateDictItemStatus:input_type -> sysclient.UpdateDictItemStatusReq
	21,  // 26: sysclient.DictItemService.QueryDictItemDetail:input_type -> sysclient.QueryDictItemDetailReq
	23,  // 27: sysclient.DictItemService.QueryDictItemList:input_type -> sysclient.QueryDictItemListReq
	26,  // 28: sysclient.DictTypeService.AddDictType:input_type -> sysclient.AddDictTypeReq
	28,  // 29: sysclient.DictTypeService.DeleteDictType:input_type -> sysclient.DeleteDictTypeReq
	30,  // 30: sysclient.DictTypeService.UpdateDictType:input_type -> sysclient.UpdateDictTypeReq
	32,  // 31: sysclient.DictTypeService.UpdateDictTypeStatus:input_type -> sysclient.UpdateDictTypeStatusReq
	34,  // 32: sysclient.DictTypeService.QueryDictTypeDetail:input_type -> sysclient.QueryDictTypeDetailReq
	36,  // 33: sysclient.DictTypeService.QueryDictTypeList:input_type -> sysclient.QueryDictTypeListReq
	39,  // 34: sysclient.LoginLogService.DeleteLoginLog:input_type -> sysclient.DeleteLoginLogReq
	41,  // 35: sysclient.LoginLogService.QueryLoginLogDetail:input_type -> sysclient.QueryLoginLogDetailReq
	43,  // 36: sysclient.LoginLogService.QueryLoginLogList:input_type -> sysclient.QueryLoginLogListReq
	46,  // 37: sysclient.MenuService.AddMenu:input_type -> sysclient.AddMenuReq
	48,  // 38: sysclient.MenuService.DeleteMenu:input_type -> sysclient.DeleteMenuReq
	50,  // 39: sysclient.MenuService.UpdateMenu:input_type -> sysclient.UpdateMenuReq
	52,  // 40: sysclient.MenuService.UpdateMenuStatus:input_type -> sysclient.UpdateMenuStatusReq
	54,  // 41: sysclient.MenuService.QueryMenuDetail:input_type -> sysclient.QueryMenuDetailReq
	56,  // 42: sysclient.MenuService.QueryMenuList:input_type -> sysclient.QueryMenuListReq
	59,  // 43: sysclient.OperateLogService.AddOperateLog:input_type -> sysclient.AddOperateLogReq
	61,  // 44: sysclient.OperateLogService.DeleteOperateLog:input_type -> sysclient.DeleteOperateLogReq
	63,  // 45: sysclient.OperateLogService.QueryOperateLogDetail:input_type -> sysclient.QueryOperateLogDetailReq
	65,  // 46: sysclient.OperateLogService.QueryOperateLogList:input_type -> sysclient.QueryOperateLogListReq
	68,  // 47: sysclient.PostService.AddPost:input_type -> sysclient.AddPostReq
	70,  // 48: sysclient.PostService.DeletePost:input_type -> sysclient.DeletePostReq
	72,  // 49: sysclient.PostService.UpdatePost:input_type -> sysclient.UpdatePostReq
	74,  // 50: sysclient.PostService.UpdatePostStatus:input_type -> sysclient.UpdatePostStatusReq
	76,  // 51: sysclient.PostService.QueryPostDetail:input_type -> sysclient.QueryPostDetailReq
	78,  // 52: sysclient.PostService.QueryPostList:input_type -> sysclient.QueryPostListReq
	81,  // 53: sysclient.RoleService.AddRole:input_type -> sysclient.AddRoleReq
	83,  // 54: sysclient.RoleService.DeleteRole:input_type -> sysclient.DeleteRoleReq
	85,  // 55: sysclient.RoleService.UpdateRole:input_type -> sysclient.UpdateRoleReq
	87,  // 56: sysclient.RoleService.UpdateRoleStatus:input_type -> sysclient.UpdateRoleStatusReq
	89,  // 57: sysclient.RoleService.QueryRoleDetail:input_type -> sysclient.QueryRoleDetailReq
	91,  // 58: sysclient.RoleService.QueryRoleList:input_type -> sysclient.QueryRoleListReq
	94,  // 59: sysclient.RoleService.QueryRoleMenuList:input_type -> sysclient.QueryRoleMenuListReq
	97,  // 60: sysclient.RoleService.UpdateMenuRoleList:input_type -> sysclient.UpdateMenuRoleReq
	99,  // 61: sysclient.RoleService.QueryRoleUserList:input_type -> sysclient.QueryRoleUserListReq
	102, // 62: sysclient.RoleService.CancelAuthorization:input_type -> sysclient.CancelAuthorizationReq
	104, // 63: sysclient.UserService.Login:input_type -> sysclient.LoginReq
	106, // 64: sysclient.UserService.UserInfo:input_type -> sysclient.InfoReq
	135, // 65: sysclient.UserService.UserMenus:input_type -> sysclient.UserMenusReq
	139, // 66: sysclient.UserService.UserPermissions:input_type -> sysclient.UserPermissionReq
	133, // 67: sysclient.UserService.UserProfile:input_type -> sysclient.ProfileReq
	109, // 68: sysclient.UserService.ReSetPassword:input_type -> sysclient.ReSetPasswordReq
	111, // 69: sysclient.UserService.AddUser:input_type -> sysclient.AddUserReq
	113, // 70: sysclient.UserService.DeleteUser:input_type -> sysclient.DeleteUserReq
	115, // 71: sysclient.UserService.UpdateUser:input_type -> sysclient.UpdateUserReq
	117, // 72: sysclient.UserService.UpdateUserStatus:input_type -> sysclient.UpdateUserStatusReq
	119, // 73: sysclient.UserService.QueryUserDetail:input_type -> sysclient.QueryUserDetailReq
	121, // 74: sysclient.UserService.QueryUserList:input_type -> sysclient.QueryUserListReq
	126, // 75: sysclient.UserService.QueryUserRoleList:input_type -> sysclient.QueryUserRoleListReq
	124, // 76: sysclient.UserService.UpdateUserRoleList:input_type -> sysclient.UpdateUserRoleListReq
	129, // 77: sysclient.UserService.QueryDeptAndPostList:input_type -> sysclient.QueryDeptAndPostListReq
	1,   // 78: sysclient.DeptService.AddDept:output_type -> sysclient.AddDeptResp
	3,   // 79: sysclient.DeptService.DeleteDept:output_type -> sysclient.DeleteDeptResp
	5,   // 80: sysclient.DeptService.UpdateDept:output_type -> sysclient.UpdateDeptResp
	7,   // 81: sysclient.DeptService.UpdateDeptStatus:output_type -> sysclient.UpdateDeptStatusResp
	9,   // 82: sysclient.DeptService.QueryDeptDetail:output_type -> sysclient.QueryDeptDetailResp
	12,  // 83: sysclient.DeptService.QueryDeptList:output_type -> sysclient.QueryDeptListResp
	14,  // 84: sysclient.DictItemService.AddDictItem:output_type -> sysclient.AddDictItemResp
	16,  // 85: sysclient.DictItemService.DeleteDictItem:output_type -> sysclient.DeleteDictItemResp
	18,  // 86: sysclient.DictItemService.UpdateDictItem:output_type -> sysclient.UpdateDictItemResp
	20,  // 87: sysclient.DictItemService.UpdateDictItemStatus:output_type -> sysclient.UpdateDictItemStatusResp
	22,  // 88: sysclient.DictItemService.QueryDictItemDetail:output_type -> sysclient.QueryDictItemDetailResp
	25,  // 89: sysclient.DictItemService.QueryDictItemList:output_type -> sysclient.QueryDictItemListResp
	27,  // 90: sysclient.DictTypeService.AddDictType:output_type -> sysclient.AddDictTypeResp
	29,  // 91: sysclient.DictTypeService.DeleteDictType:output_type -> sysclient.DeleteDictTypeResp
	31,  // 92: sysclient.DictTypeService.UpdateDictType:output_type -> sysclient.UpdateDictTypeResp
	33,  // 93: sysclient.DictTypeService.UpdateDictTypeStatus:output_type -> sysclient.UpdateDictTypeStatusResp
	35,  // 94: sysclient.DictTypeService.QueryDictTypeDetail:output_type -> sysclient.QueryDictTypeDetailResp
	38,  // 95: sysclient.DictTypeService.QueryDictTypeList:output_type -> sysclient.QueryDictTypeListResp
	40,  // 96: sysclient.LoginLogService.DeleteLoginLog:output_type -> sysclient.DeleteLoginLogResp
	42,  // 97: sysclient.LoginLogService.QueryLoginLogDetail:output_type -> sysclient.QueryLoginLogDetailResp
	45,  // 98: sysclient.LoginLogService.QueryLoginLogList:output_type -> sysclient.QueryLoginLogListResp
	47,  // 99: sysclient.MenuService.AddMenu:output_type -> sysclient.AddMenuResp
	49,  // 100: sysclient.MenuService.DeleteMenu:output_type -> sysclient.DeleteMenuResp
	51,  // 101: sysclient.MenuService.UpdateMenu:output_type -> sysclient.UpdateMenuResp
	53,  // 102: sysclient.MenuService.UpdateMenuStatus:output_type -> sysclient.UpdateMenuStatusResp
	55,  // 103: sysclient.MenuService.QueryMenuDetail:output_type -> sysclient.QueryMenuDetailResp
	58,  // 104: sysclient.MenuService.QueryMenuList:output_type -> sysclient.QueryMenuListResp
	60,  // 105: sysclient.OperateLogService.AddOperateLog:output_type -> sysclient.AddOperateLogResp
	62,  // 106: sysclient.OperateLogService.DeleteOperateLog:output_type -> sysclient.DeleteOperateLogResp
	64,  // 107: sysclient.OperateLogService.QueryOperateLogDetail:output_type -> sysclient.QueryOperateLogDetailResp
	67,  // 108: sysclient.OperateLogService.QueryOperateLogList:output_type -> sysclient.QueryOperateLogListResp
	69,  // 109: sysclient.PostService.AddPost:output_type -> sysclient.AddPostResp
	71,  // 110: sysclient.PostService.DeletePost:output_type -> sysclient.DeletePostResp
	73,  // 111: sysclient.PostService.UpdatePost:output_type -> sysclient.UpdatePostResp
	75,  // 112: sysclient.PostService.UpdatePostStatus:output_type -> sysclient.UpdatePostStatusResp
	77,  // 113: sysclient.PostService.QueryPostDetail:output_type -> sysclient.QueryPostDetailResp
	80,  // 114: sysclient.PostService.QueryPostList:output_type -> sysclient.QueryPostListResp
	82,  // 115: sysclient.RoleService.AddRole:output_type -> sysclient.AddRoleResp
	84,  // 116: sysclient.RoleService.DeleteRole:output_type -> sysclient.DeleteRoleResp
	86,  // 117: sysclient.RoleService.UpdateRole:output_type -> sysclient.UpdateRoleResp
	88,  // 118: sysclient.RoleService.UpdateRoleStatus:output_type -> sysclient.UpdateRoleStatusResp
	90,  // 119: sysclient.RoleService.QueryRoleDetail:output_type -> sysclient.QueryRoleDetailResp
	93,  // 120: sysclient.RoleService.QueryRoleList:output_type -> sysclient.QueryRoleListResp
	96,  // 121: sysclient.RoleService.QueryRoleMenuList:output_type -> sysclient.QueryRoleMenuListResp
	98,  // 122: sysclient.RoleService.UpdateMenuRoleList:output_type -> sysclient.UpdateMenuRoleResp
	101, // 123: sysclient.RoleService.QueryRoleUserList:output_type -> sysclient.QueryRoleUserListResp
	103, // 124: sysclient.RoleService.CancelAuthorization:output_type -> sysclient.CancelAuthorizationResp
	105, // 125: sysclient.UserService.Login:output_type -> sysclient.loginResp
	108, // 126: sysclient.UserService.UserInfo:output_type -> sysclient.InfoResp
	138, // 127: sysclient.UserService.UserMenus:output_type -> sysclient.UserMenusResp
	140, // 128: sysclient.UserService.UserPermissions:output_type -> sysclient.UserPermissionResp
	134, // 129: sysclient.UserService.UserProfile:output_type -> sysclient.ProfileResp
	110, // 130: sysclient.UserService.ReSetPassword:output_type -> sysclient.ReSetPasswordResp
	112, // 131: sysclient.UserService.AddUser:output_type -> sysclient.AddUserResp
	114, // 132: sysclient.UserService.DeleteUser:output_type -> sysclient.DeleteUserResp
	116, // 133: sysclient.UserService.UpdateUser:output_type -> sysclient.UpdateUserResp
	118, // 134: sysclient.UserService.UpdateUserStatus:output_type -> sysclient.UpdateUserStatusResp
	120, // 135: sysclient.UserService.QueryUserDetail:output_type -> sysclient.QueryUserDetailResp
	123, // 136: sysclient.UserService.QueryUserList:output_type -> sysclient.QueryUserListResp
	128, // 137: sysclient.UserService.QueryUserRoleList:output_type -> sysclient.QueryUserRoleListResp
	125, // 138: sysclient.UserService.UpdateUserRoleList:output_type -> sysclient.UpdateUserRoleListResp
	130, // 139: sysclient.UserService.QueryDeptAndPostList:output_type -> sysclient.QueryDeptAndPostListResp
	78,  // [78:140] is the sub-list for method output_type
	16,  // [16:78] is the sub-list for method input_type
	16,  // [16:16] is the sub-list for extension type_name
	16,  // [16:16] is the sub-list for extension extendee
	0,   // [0:16] is the sub-list for field type_name
}

func init() { file_sys_sys_proto_init() }
func file_sys_sys_proto_init() {
	if File_sys_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_sys_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddDeptResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDeptResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDeptResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDeptStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDeptStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeptListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AddDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AddDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictItemStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictItemStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictItemDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictItemDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DictItemListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictItemListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AddDictTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AddDictTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDictTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDictTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictTypeStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDictTypeStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictTypeDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictTypeDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictTypeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*DictTypeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDictTypeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLoginLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*QueryLoginLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*QueryLoginLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*QueryLoginLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*LoginLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*QueryLoginLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*AddMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*AddMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*QueryMenuDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*QueryMenuDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*QueryMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*MenuListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*QueryMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*AddOperateLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*AddOperateLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteOperateLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteOperateLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*QueryOperateLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*QueryOperateLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*QueryOperateLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*OperateLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*QueryOperateLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*AddPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*AddPostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePostStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePostStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPostDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPostDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPostListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*PostListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPostListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*AddRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*AddRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*RoleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*MenuData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRoleUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*CancelAuthorizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*CancelAuthorizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*InfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*MenuListTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*InfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*ReSetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*ReSetPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*UserListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*RoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptAndPostListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDeptAndPostListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*DeptData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*PostData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*ProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*ProfileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*UserMenusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*UserMenusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*UserMenusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*UserPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_sys_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*UserPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   141,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_sys_sys_proto_goTypes,
		DependencyIndexes: file_sys_sys_proto_depIdxs,
		MessageInfos:      file_sys_sys_proto_msgTypes,
	}.Build()
	File_sys_sys_proto = out.File
	file_sys_sys_proto_rawDesc = nil
	file_sys_sys_proto_goTypes = nil
	file_sys_sys_proto_depIdxs = nil
}
